//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MotionsRace.WinPhone.MobileService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedalResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class MedalResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int MedalTypeIDField;
        
        private string TitleField;
        
        private string DescriptionField;
        
        private string ImageFileNameField;
        
        private bool isManuallySelectedByUserField;
        
        private int PointsField;
        
        private string AddLinkTextField;
        
        private System.Nullable<int> CalculationCodeNumberField;
        
        private System.Nullable<System.DateTime> EarnedDateTimeField;
        
        private System.Nullable<int> LevelMedalRequiresMedalTypeIDField;
        
        private System.Nullable<int> LevelStatusIDField;
        
        private string LevelImageField;
        
        private System.Nullable<int> LevelRankingField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int MedalTypeID {
            get {
                return this.MedalTypeIDField;
            }
            set {
                if ((this.MedalTypeIDField.Equals(value) != true)) {
                    this.MedalTypeIDField = value;
                    this.RaisePropertyChanged("MedalTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ImageFileName {
            get {
                return this.ImageFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageFileNameField, value) != true)) {
                    this.ImageFileNameField = value;
                    this.RaisePropertyChanged("ImageFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool isManuallySelectedByUser {
            get {
                return this.isManuallySelectedByUserField;
            }
            set {
                if ((this.isManuallySelectedByUserField.Equals(value) != true)) {
                    this.isManuallySelectedByUserField = value;
                    this.RaisePropertyChanged("isManuallySelectedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string AddLinkText {
            get {
                return this.AddLinkTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AddLinkTextField, value) != true)) {
                    this.AddLinkTextField = value;
                    this.RaisePropertyChanged("AddLinkText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<int> CalculationCodeNumber {
            get {
                return this.CalculationCodeNumberField;
            }
            set {
                if ((this.CalculationCodeNumberField.Equals(value) != true)) {
                    this.CalculationCodeNumberField = value;
                    this.RaisePropertyChanged("CalculationCodeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<System.DateTime> EarnedDateTime {
            get {
                return this.EarnedDateTimeField;
            }
            set {
                if ((this.EarnedDateTimeField.Equals(value) != true)) {
                    this.EarnedDateTimeField = value;
                    this.RaisePropertyChanged("EarnedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.Nullable<int> LevelMedalRequiresMedalTypeID {
            get {
                return this.LevelMedalRequiresMedalTypeIDField;
            }
            set {
                if ((this.LevelMedalRequiresMedalTypeIDField.Equals(value) != true)) {
                    this.LevelMedalRequiresMedalTypeIDField = value;
                    this.RaisePropertyChanged("LevelMedalRequiresMedalTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<int> LevelStatusID {
            get {
                return this.LevelStatusIDField;
            }
            set {
                if ((this.LevelStatusIDField.Equals(value) != true)) {
                    this.LevelStatusIDField = value;
                    this.RaisePropertyChanged("LevelStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string LevelImage {
            get {
                return this.LevelImageField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelImageField, value) != true)) {
                    this.LevelImageField = value;
                    this.RaisePropertyChanged("LevelImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.Nullable<int> LevelRanking {
            get {
                return this.LevelRankingField;
            }
            set {
                if ((this.LevelRankingField.Equals(value) != true)) {
                    this.LevelRankingField = value;
                    this.RaisePropertyChanged("LevelRanking");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumberOfMedalsResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class NumberOfMedalsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PictureURLField;
        
        private int NumberOfMedalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string PictureURL {
            get {
                return this.PictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureURLField, value) != true)) {
                    this.PictureURLField = value;
                    this.RaisePropertyChanged("PictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int NumberOfMedals {
            get {
                return this.NumberOfMedalsField;
            }
            set {
                if ((this.NumberOfMedalsField.Equals(value) != true)) {
                    this.NumberOfMedalsField = value;
                    this.RaisePropertyChanged("NumberOfMedals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsStreamItem", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class NewsStreamItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private MotionsRace.WinPhone.MobileService.NewsStreamItemTypes WhatField;
        
        private string TitleField;
        
        private string SubTitleField;
        
        private string FirstnameField;
        
        private string LastnameField;
        
        private System.Nullable<int> PersonIDField;
        
        private System.Nullable<int> PointsField;
        
        private string InternalImageURLField;
        
        private System.DateTime PublishedDateTimeField;
        
        private System.Nullable<MotionsRace.WinPhone.MobileService.TrainingTypeUnits> UnitField;
        
        private string UnitAsStringField;
        
        private string WhatAsStringField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MotionsRace.WinPhone.MobileService.NewsStreamItemTypes What {
            get {
                return this.WhatField;
            }
            set {
                if ((this.WhatField.Equals(value) != true)) {
                    this.WhatField = value;
                    this.RaisePropertyChanged("What");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string SubTitle {
            get {
                return this.SubTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTitleField, value) != true)) {
                    this.SubTitleField = value;
                    this.RaisePropertyChanged("SubTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string InternalImageURL {
            get {
                return this.InternalImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalImageURLField, value) != true)) {
                    this.InternalImageURLField = value;
                    this.RaisePropertyChanged("InternalImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.DateTime PublishedDateTime {
            get {
                return this.PublishedDateTimeField;
            }
            set {
                if ((this.PublishedDateTimeField.Equals(value) != true)) {
                    this.PublishedDateTimeField = value;
                    this.RaisePropertyChanged("PublishedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<MotionsRace.WinPhone.MobileService.TrainingTypeUnits> Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string UnitAsString {
            get {
                return this.UnitAsStringField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitAsStringField, value) != true)) {
                    this.UnitAsStringField = value;
                    this.RaisePropertyChanged("UnitAsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string WhatAsString {
            get {
                return this.WhatAsStringField;
            }
            set {
                if ((object.ReferenceEquals(this.WhatAsStringField, value) != true)) {
                    this.WhatAsStringField = value;
                    this.RaisePropertyChanged("WhatAsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsStreamItemTypes", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum NewsStreamItemTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Training = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medal = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrainingTypeUnits", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum TrainingTypeUnits : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steps = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Score = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fixed = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceAvailableForLoginResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class RaceAvailableForLoginResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RaceIDField;
        
        private string RaceTitleField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime EndDateField;
        
        private string CompanyNameField;
        
        private string HostNameField;
        
        private string MobileHostNameField;
        
        private string BrandNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RaceTitle {
            get {
                return this.RaceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceTitleField, value) != true)) {
                    this.RaceTitleField = value;
                    this.RaisePropertyChanged("RaceTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string MobileHostName {
            get {
                return this.MobileHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileHostNameField, value) != true)) {
                    this.MobileHostNameField = value;
                    this.RaisePropertyChanged("MobileHostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RacesAvailabilityResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class RacesAvailabilityResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> RacesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> Races {
            get {
                return this.RacesField;
            }
            set {
                if ((object.ReferenceEquals(this.RacesField, value) != true)) {
                    this.RacesField = value;
                    this.RaisePropertyChanged("Races");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDetails", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class LoginDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> PersonIDField;
        
        private string ApplicationIDField;
        
        private string UserNameField;
        
        private string PasswordPlainTextField;
        
        private string PasswordEncryptedField;
        
        private string SecretField;
        
        private MotionsRace.WinPhone.MobileService.AuthenticationMethod MethodField;
        
        private int SiteTypeField;
        
        private System.Nullable<int> BrandIDField;
        
        private System.Nullable<int> RaceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string PasswordPlainText {
            get {
                return this.PasswordPlainTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordPlainTextField, value) != true)) {
                    this.PasswordPlainTextField = value;
                    this.RaisePropertyChanged("PasswordPlainText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string PasswordEncrypted {
            get {
                return this.PasswordEncryptedField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordEncryptedField, value) != true)) {
                    this.PasswordEncryptedField = value;
                    this.RaisePropertyChanged("PasswordEncrypted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Secret {
            get {
                return this.SecretField;
            }
            set {
                if ((object.ReferenceEquals(this.SecretField, value) != true)) {
                    this.SecretField = value;
                    this.RaisePropertyChanged("Secret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public MotionsRace.WinPhone.MobileService.AuthenticationMethod Method {
            get {
                return this.MethodField;
            }
            set {
                if ((this.MethodField.Equals(value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int SiteType {
            get {
                return this.SiteTypeField;
            }
            set {
                if ((this.SiteTypeField.Equals(value) != true)) {
                    this.SiteTypeField = value;
                    this.RaisePropertyChanged("SiteType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<int> BrandID {
            get {
                return this.BrandIDField;
            }
            set {
                if ((this.BrandIDField.Equals(value) != true)) {
                    this.BrandIDField = value;
                    this.RaisePropertyChanged("BrandID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.Nullable<int> RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationMethod", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum AuthenticationMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameAndPassword = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facebook = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Google = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RaceInternalByPersonID = 3, 
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RaceInternalByPersonIDAndPassword = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromApplicationToWeb = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AuthenticationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> PersonIDField;
        
        private string FirstNameField;
        
        private string LastnameField;
        
        private MotionsRace.WinPhone.MobileService.AuthenticationStatus StatusField;
        
        private string PasswordEncryptedField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public MotionsRace.WinPhone.MobileService.AuthenticationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string PasswordEncrypted {
            get {
                return this.PasswordEncryptedField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordEncryptedField, value) != true)) {
                    this.PasswordEncryptedField = value;
                    this.RaisePropertyChanged("PasswordEncrypted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationStatus", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum AuthenticationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundOrInvalidPassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValidated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewEmailNotValidated = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllLoginsAreInactivated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserSecretNotInDatabase = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplicationIDOutdatedVersion = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidApplicationID = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceDetailsResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class RaceDetailsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RaceIDField;
        
        private string RaceTitleField;
        
        private int CompanyIDField;
        
        private string IntranetSecretKeyField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime EndDateField;
        
        private System.DateTime LoginsOpenDateTimeField;
        
        private System.DateTime LoginsCloseDateTimeField;
        
        private System.Nullable<System.DateTime> GoesSecretDateTimeField;
        
        private System.Nullable<System.DateTime> GoesSecretEndDateField;
        
        private System.DateTime LastRegisterDateTimeField;
        
        private System.DateTime ShowWinnerDateTimeField;
        
        private System.Nullable<System.DateTime> ShowInvitationToExternalSiteDateTimeField;
        
        private System.Nullable<int> MinutesRequiredForAnActivityToBeOkField;
        
        private System.Nullable<int> MaxMinutesForTrainingTypePerDayField;
        
        private System.Nullable<int> MaxMinutesTotalPerDayField;
        
        private System.Nullable<int> MaxNumberOfDaysUserCanWaitToRegisterField;
        
        private string LoginURLField;
        
        private bool isDistanceActivatedField;
        
        private bool isIntensityActivatedField;
        
        private bool isStepsActivatedField;
        
        private bool isDemoRaceField;
        
        private string CompanyNameField;
        
        private string HostNameField;
        
        private string MobileHostNameField;
        
        private string GoogleSiteVerificationField;
        
        private string TeamLevelTitlesField;
        
        private string BookingRaceTypeIDField;
        
        private bool isLoginPossibleField;
        
        private bool isShowWinnersPossibleField;
        
        private bool isShowTeamScoresPossibleField;
        
        private bool isRegisterTrainingPossibleField;
        
        private bool isSecretModeField;
        
        private bool isLastTrainingDayOverField;
        
        private bool isHasRaceStartedField;
        
        private bool isAwaitingShowWinnersField;
        
        private bool isShowAddTrainingOnTabletField;
        
        private int MaxDistanceFromFirstCommonParentField;
        
        private System.Nullable<int> MaxTeamsPerListField;
        
        private bool isPersonsCanHideTrainingCalendarField;
        
        private bool isParticipantSearchField;
        
        private System.Nullable<int> PointsToShowFBLikeField;
        
        private System.Nullable<System.DateTime> PauseFirstDateField;
        
        private System.Nullable<System.DateTime> PauseLastDateField;
        
        private System.Nullable<System.DateTime> PauseLastTrainingDateField;
        
        private bool isRacePausedField;
        
        private bool IsShowHonestyCheckboxField;
        
        private bool IsShowGuideField;
        
        private string GuideURLField;
        
        private System.Nullable<int> WhatsGoingOnThresholdField;
        
        private System.Nullable<int> RankingThresholdField;
        
        private int CacheDurationMinutesHighscoresField;
        
        private bool IsAllowRequestNewActivityField;
        
        private bool IsRestrictTeamNameChangeField;
        
        private bool IsRestrictTeamNameChangeForEverybodyField;
        
        private System.Nullable<System.DateTime> SuggestTeamOpenDateTimeField;
        
        private System.Nullable<System.DateTime> SuggestTeamCloseDateTimeField;
        
        private bool IsShowMyListAlsoDuringSecretPeriodField;
        
        private string CustomerPanelField;
        
        private int MaxRecentNewsListingField;
        
        private bool IsIntensityUsedForScoresField;
        
        private System.Nullable<int> MaxPointsPerWeekField;
        
        private bool IsAllowManageTeamMembersField;
        
        private string DefaultPasswordField;
        
        private string TeamAdminCommentField;
        
        private bool TeamAdminAutomaticAddField;
        
        private bool IsShowMyScoreField;
        
        private bool IsShowMyScoreTeamListField;
        
        private int TargetPersonScoreField;
        
        private bool SignUpGarminConnectField;
        
        private bool IsCustomScorelistsField;
        
        private bool IsPersonalScoresThisWeekOnlyField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RaceTitle {
            get {
                return this.RaceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceTitleField, value) != true)) {
                    this.RaceTitleField = value;
                    this.RaisePropertyChanged("RaceTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string IntranetSecretKey {
            get {
                return this.IntranetSecretKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.IntranetSecretKeyField, value) != true)) {
                    this.IntranetSecretKeyField = value;
                    this.RaisePropertyChanged("IntranetSecretKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime LoginsOpenDateTime {
            get {
                return this.LoginsOpenDateTimeField;
            }
            set {
                if ((this.LoginsOpenDateTimeField.Equals(value) != true)) {
                    this.LoginsOpenDateTimeField = value;
                    this.RaisePropertyChanged("LoginsOpenDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime LoginsCloseDateTime {
            get {
                return this.LoginsCloseDateTimeField;
            }
            set {
                if ((this.LoginsCloseDateTimeField.Equals(value) != true)) {
                    this.LoginsCloseDateTimeField = value;
                    this.RaisePropertyChanged("LoginsCloseDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<System.DateTime> GoesSecretDateTime {
            get {
                return this.GoesSecretDateTimeField;
            }
            set {
                if ((this.GoesSecretDateTimeField.Equals(value) != true)) {
                    this.GoesSecretDateTimeField = value;
                    this.RaisePropertyChanged("GoesSecretDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.Nullable<System.DateTime> GoesSecretEndDate {
            get {
                return this.GoesSecretEndDateField;
            }
            set {
                if ((this.GoesSecretEndDateField.Equals(value) != true)) {
                    this.GoesSecretEndDateField = value;
                    this.RaisePropertyChanged("GoesSecretEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.DateTime LastRegisterDateTime {
            get {
                return this.LastRegisterDateTimeField;
            }
            set {
                if ((this.LastRegisterDateTimeField.Equals(value) != true)) {
                    this.LastRegisterDateTimeField = value;
                    this.RaisePropertyChanged("LastRegisterDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.DateTime ShowWinnerDateTime {
            get {
                return this.ShowWinnerDateTimeField;
            }
            set {
                if ((this.ShowWinnerDateTimeField.Equals(value) != true)) {
                    this.ShowWinnerDateTimeField = value;
                    this.RaisePropertyChanged("ShowWinnerDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.Nullable<System.DateTime> ShowInvitationToExternalSiteDateTime {
            get {
                return this.ShowInvitationToExternalSiteDateTimeField;
            }
            set {
                if ((this.ShowInvitationToExternalSiteDateTimeField.Equals(value) != true)) {
                    this.ShowInvitationToExternalSiteDateTimeField = value;
                    this.RaisePropertyChanged("ShowInvitationToExternalSiteDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public System.Nullable<int> MinutesRequiredForAnActivityToBeOk {
            get {
                return this.MinutesRequiredForAnActivityToBeOkField;
            }
            set {
                if ((this.MinutesRequiredForAnActivityToBeOkField.Equals(value) != true)) {
                    this.MinutesRequiredForAnActivityToBeOkField = value;
                    this.RaisePropertyChanged("MinutesRequiredForAnActivityToBeOk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public System.Nullable<int> MaxMinutesForTrainingTypePerDay {
            get {
                return this.MaxMinutesForTrainingTypePerDayField;
            }
            set {
                if ((this.MaxMinutesForTrainingTypePerDayField.Equals(value) != true)) {
                    this.MaxMinutesForTrainingTypePerDayField = value;
                    this.RaisePropertyChanged("MaxMinutesForTrainingTypePerDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public System.Nullable<int> MaxMinutesTotalPerDay {
            get {
                return this.MaxMinutesTotalPerDayField;
            }
            set {
                if ((this.MaxMinutesTotalPerDayField.Equals(value) != true)) {
                    this.MaxMinutesTotalPerDayField = value;
                    this.RaisePropertyChanged("MaxMinutesTotalPerDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public System.Nullable<int> MaxNumberOfDaysUserCanWaitToRegister {
            get {
                return this.MaxNumberOfDaysUserCanWaitToRegisterField;
            }
            set {
                if ((this.MaxNumberOfDaysUserCanWaitToRegisterField.Equals(value) != true)) {
                    this.MaxNumberOfDaysUserCanWaitToRegisterField = value;
                    this.RaisePropertyChanged("MaxNumberOfDaysUserCanWaitToRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string LoginURL {
            get {
                return this.LoginURLField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginURLField, value) != true)) {
                    this.LoginURLField = value;
                    this.RaisePropertyChanged("LoginURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool isDistanceActivated {
            get {
                return this.isDistanceActivatedField;
            }
            set {
                if ((this.isDistanceActivatedField.Equals(value) != true)) {
                    this.isDistanceActivatedField = value;
                    this.RaisePropertyChanged("isDistanceActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public bool isIntensityActivated {
            get {
                return this.isIntensityActivatedField;
            }
            set {
                if ((this.isIntensityActivatedField.Equals(value) != true)) {
                    this.isIntensityActivatedField = value;
                    this.RaisePropertyChanged("isIntensityActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public bool isStepsActivated {
            get {
                return this.isStepsActivatedField;
            }
            set {
                if ((this.isStepsActivatedField.Equals(value) != true)) {
                    this.isStepsActivatedField = value;
                    this.RaisePropertyChanged("isStepsActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool isDemoRace {
            get {
                return this.isDemoRaceField;
            }
            set {
                if ((this.isDemoRaceField.Equals(value) != true)) {
                    this.isDemoRaceField = value;
                    this.RaisePropertyChanged("isDemoRace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string MobileHostName {
            get {
                return this.MobileHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileHostNameField, value) != true)) {
                    this.MobileHostNameField = value;
                    this.RaisePropertyChanged("MobileHostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=25)]
        public string GoogleSiteVerification {
            get {
                return this.GoogleSiteVerificationField;
            }
            set {
                if ((object.ReferenceEquals(this.GoogleSiteVerificationField, value) != true)) {
                    this.GoogleSiteVerificationField = value;
                    this.RaisePropertyChanged("GoogleSiteVerification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=26)]
        public string TeamLevelTitles {
            get {
                return this.TeamLevelTitlesField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamLevelTitlesField, value) != true)) {
                    this.TeamLevelTitlesField = value;
                    this.RaisePropertyChanged("TeamLevelTitles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public string BookingRaceTypeID {
            get {
                return this.BookingRaceTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingRaceTypeIDField, value) != true)) {
                    this.BookingRaceTypeIDField = value;
                    this.RaisePropertyChanged("BookingRaceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public bool isLoginPossible {
            get {
                return this.isLoginPossibleField;
            }
            set {
                if ((this.isLoginPossibleField.Equals(value) != true)) {
                    this.isLoginPossibleField = value;
                    this.RaisePropertyChanged("isLoginPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public bool isShowWinnersPossible {
            get {
                return this.isShowWinnersPossibleField;
            }
            set {
                if ((this.isShowWinnersPossibleField.Equals(value) != true)) {
                    this.isShowWinnersPossibleField = value;
                    this.RaisePropertyChanged("isShowWinnersPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public bool isShowTeamScoresPossible {
            get {
                return this.isShowTeamScoresPossibleField;
            }
            set {
                if ((this.isShowTeamScoresPossibleField.Equals(value) != true)) {
                    this.isShowTeamScoresPossibleField = value;
                    this.RaisePropertyChanged("isShowTeamScoresPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public bool isRegisterTrainingPossible {
            get {
                return this.isRegisterTrainingPossibleField;
            }
            set {
                if ((this.isRegisterTrainingPossibleField.Equals(value) != true)) {
                    this.isRegisterTrainingPossibleField = value;
                    this.RaisePropertyChanged("isRegisterTrainingPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public bool isSecretMode {
            get {
                return this.isSecretModeField;
            }
            set {
                if ((this.isSecretModeField.Equals(value) != true)) {
                    this.isSecretModeField = value;
                    this.RaisePropertyChanged("isSecretMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=33)]
        public bool isLastTrainingDayOver {
            get {
                return this.isLastTrainingDayOverField;
            }
            set {
                if ((this.isLastTrainingDayOverField.Equals(value) != true)) {
                    this.isLastTrainingDayOverField = value;
                    this.RaisePropertyChanged("isLastTrainingDayOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=34)]
        public bool isHasRaceStarted {
            get {
                return this.isHasRaceStartedField;
            }
            set {
                if ((this.isHasRaceStartedField.Equals(value) != true)) {
                    this.isHasRaceStartedField = value;
                    this.RaisePropertyChanged("isHasRaceStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=35)]
        public bool isAwaitingShowWinners {
            get {
                return this.isAwaitingShowWinnersField;
            }
            set {
                if ((this.isAwaitingShowWinnersField.Equals(value) != true)) {
                    this.isAwaitingShowWinnersField = value;
                    this.RaisePropertyChanged("isAwaitingShowWinners");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=36)]
        public bool isShowAddTrainingOnTablet {
            get {
                return this.isShowAddTrainingOnTabletField;
            }
            set {
                if ((this.isShowAddTrainingOnTabletField.Equals(value) != true)) {
                    this.isShowAddTrainingOnTabletField = value;
                    this.RaisePropertyChanged("isShowAddTrainingOnTablet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=37)]
        public int MaxDistanceFromFirstCommonParent {
            get {
                return this.MaxDistanceFromFirstCommonParentField;
            }
            set {
                if ((this.MaxDistanceFromFirstCommonParentField.Equals(value) != true)) {
                    this.MaxDistanceFromFirstCommonParentField = value;
                    this.RaisePropertyChanged("MaxDistanceFromFirstCommonParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=38)]
        public System.Nullable<int> MaxTeamsPerList {
            get {
                return this.MaxTeamsPerListField;
            }
            set {
                if ((this.MaxTeamsPerListField.Equals(value) != true)) {
                    this.MaxTeamsPerListField = value;
                    this.RaisePropertyChanged("MaxTeamsPerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=39)]
        public bool isPersonsCanHideTrainingCalendar {
            get {
                return this.isPersonsCanHideTrainingCalendarField;
            }
            set {
                if ((this.isPersonsCanHideTrainingCalendarField.Equals(value) != true)) {
                    this.isPersonsCanHideTrainingCalendarField = value;
                    this.RaisePropertyChanged("isPersonsCanHideTrainingCalendar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=40)]
        public bool isParticipantSearch {
            get {
                return this.isParticipantSearchField;
            }
            set {
                if ((this.isParticipantSearchField.Equals(value) != true)) {
                    this.isParticipantSearchField = value;
                    this.RaisePropertyChanged("isParticipantSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=41)]
        public System.Nullable<int> PointsToShowFBLike {
            get {
                return this.PointsToShowFBLikeField;
            }
            set {
                if ((this.PointsToShowFBLikeField.Equals(value) != true)) {
                    this.PointsToShowFBLikeField = value;
                    this.RaisePropertyChanged("PointsToShowFBLike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=42)]
        public System.Nullable<System.DateTime> PauseFirstDate {
            get {
                return this.PauseFirstDateField;
            }
            set {
                if ((this.PauseFirstDateField.Equals(value) != true)) {
                    this.PauseFirstDateField = value;
                    this.RaisePropertyChanged("PauseFirstDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=43)]
        public System.Nullable<System.DateTime> PauseLastDate {
            get {
                return this.PauseLastDateField;
            }
            set {
                if ((this.PauseLastDateField.Equals(value) != true)) {
                    this.PauseLastDateField = value;
                    this.RaisePropertyChanged("PauseLastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=44)]
        public System.Nullable<System.DateTime> PauseLastTrainingDate {
            get {
                return this.PauseLastTrainingDateField;
            }
            set {
                if ((this.PauseLastTrainingDateField.Equals(value) != true)) {
                    this.PauseLastTrainingDateField = value;
                    this.RaisePropertyChanged("PauseLastTrainingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=45)]
        public bool isRacePaused {
            get {
                return this.isRacePausedField;
            }
            set {
                if ((this.isRacePausedField.Equals(value) != true)) {
                    this.isRacePausedField = value;
                    this.RaisePropertyChanged("isRacePaused");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=46)]
        public bool IsShowHonestyCheckbox {
            get {
                return this.IsShowHonestyCheckboxField;
            }
            set {
                if ((this.IsShowHonestyCheckboxField.Equals(value) != true)) {
                    this.IsShowHonestyCheckboxField = value;
                    this.RaisePropertyChanged("IsShowHonestyCheckbox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=47)]
        public bool IsShowGuide {
            get {
                return this.IsShowGuideField;
            }
            set {
                if ((this.IsShowGuideField.Equals(value) != true)) {
                    this.IsShowGuideField = value;
                    this.RaisePropertyChanged("IsShowGuide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=48)]
        public string GuideURL {
            get {
                return this.GuideURLField;
            }
            set {
                if ((object.ReferenceEquals(this.GuideURLField, value) != true)) {
                    this.GuideURLField = value;
                    this.RaisePropertyChanged("GuideURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=49)]
        public System.Nullable<int> WhatsGoingOnThreshold {
            get {
                return this.WhatsGoingOnThresholdField;
            }
            set {
                if ((this.WhatsGoingOnThresholdField.Equals(value) != true)) {
                    this.WhatsGoingOnThresholdField = value;
                    this.RaisePropertyChanged("WhatsGoingOnThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=50)]
        public System.Nullable<int> RankingThreshold {
            get {
                return this.RankingThresholdField;
            }
            set {
                if ((this.RankingThresholdField.Equals(value) != true)) {
                    this.RankingThresholdField = value;
                    this.RaisePropertyChanged("RankingThreshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=51)]
        public int CacheDurationMinutesHighscores {
            get {
                return this.CacheDurationMinutesHighscoresField;
            }
            set {
                if ((this.CacheDurationMinutesHighscoresField.Equals(value) != true)) {
                    this.CacheDurationMinutesHighscoresField = value;
                    this.RaisePropertyChanged("CacheDurationMinutesHighscores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=52)]
        public bool IsAllowRequestNewActivity {
            get {
                return this.IsAllowRequestNewActivityField;
            }
            set {
                if ((this.IsAllowRequestNewActivityField.Equals(value) != true)) {
                    this.IsAllowRequestNewActivityField = value;
                    this.RaisePropertyChanged("IsAllowRequestNewActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=53)]
        public bool IsRestrictTeamNameChange {
            get {
                return this.IsRestrictTeamNameChangeField;
            }
            set {
                if ((this.IsRestrictTeamNameChangeField.Equals(value) != true)) {
                    this.IsRestrictTeamNameChangeField = value;
                    this.RaisePropertyChanged("IsRestrictTeamNameChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=54)]
        public bool IsRestrictTeamNameChangeForEverybody {
            get {
                return this.IsRestrictTeamNameChangeForEverybodyField;
            }
            set {
                if ((this.IsRestrictTeamNameChangeForEverybodyField.Equals(value) != true)) {
                    this.IsRestrictTeamNameChangeForEverybodyField = value;
                    this.RaisePropertyChanged("IsRestrictTeamNameChangeForEverybody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=55)]
        public System.Nullable<System.DateTime> SuggestTeamOpenDateTime {
            get {
                return this.SuggestTeamOpenDateTimeField;
            }
            set {
                if ((this.SuggestTeamOpenDateTimeField.Equals(value) != true)) {
                    this.SuggestTeamOpenDateTimeField = value;
                    this.RaisePropertyChanged("SuggestTeamOpenDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=56)]
        public System.Nullable<System.DateTime> SuggestTeamCloseDateTime {
            get {
                return this.SuggestTeamCloseDateTimeField;
            }
            set {
                if ((this.SuggestTeamCloseDateTimeField.Equals(value) != true)) {
                    this.SuggestTeamCloseDateTimeField = value;
                    this.RaisePropertyChanged("SuggestTeamCloseDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=57)]
        public bool IsShowMyListAlsoDuringSecretPeriod {
            get {
                return this.IsShowMyListAlsoDuringSecretPeriodField;
            }
            set {
                if ((this.IsShowMyListAlsoDuringSecretPeriodField.Equals(value) != true)) {
                    this.IsShowMyListAlsoDuringSecretPeriodField = value;
                    this.RaisePropertyChanged("IsShowMyListAlsoDuringSecretPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=58)]
        public string CustomerPanel {
            get {
                return this.CustomerPanelField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPanelField, value) != true)) {
                    this.CustomerPanelField = value;
                    this.RaisePropertyChanged("CustomerPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=59)]
        public int MaxRecentNewsListing {
            get {
                return this.MaxRecentNewsListingField;
            }
            set {
                if ((this.MaxRecentNewsListingField.Equals(value) != true)) {
                    this.MaxRecentNewsListingField = value;
                    this.RaisePropertyChanged("MaxRecentNewsListing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=60)]
        public bool IsIntensityUsedForScores {
            get {
                return this.IsIntensityUsedForScoresField;
            }
            set {
                if ((this.IsIntensityUsedForScoresField.Equals(value) != true)) {
                    this.IsIntensityUsedForScoresField = value;
                    this.RaisePropertyChanged("IsIntensityUsedForScores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=61)]
        public System.Nullable<int> MaxPointsPerWeek {
            get {
                return this.MaxPointsPerWeekField;
            }
            set {
                if ((this.MaxPointsPerWeekField.Equals(value) != true)) {
                    this.MaxPointsPerWeekField = value;
                    this.RaisePropertyChanged("MaxPointsPerWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=62)]
        public bool IsAllowManageTeamMembers {
            get {
                return this.IsAllowManageTeamMembersField;
            }
            set {
                if ((this.IsAllowManageTeamMembersField.Equals(value) != true)) {
                    this.IsAllowManageTeamMembersField = value;
                    this.RaisePropertyChanged("IsAllowManageTeamMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=63)]
        public string DefaultPassword {
            get {
                return this.DefaultPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPasswordField, value) != true)) {
                    this.DefaultPasswordField = value;
                    this.RaisePropertyChanged("DefaultPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=64)]
        public string TeamAdminComment {
            get {
                return this.TeamAdminCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamAdminCommentField, value) != true)) {
                    this.TeamAdminCommentField = value;
                    this.RaisePropertyChanged("TeamAdminComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=65)]
        public bool TeamAdminAutomaticAdd {
            get {
                return this.TeamAdminAutomaticAddField;
            }
            set {
                if ((this.TeamAdminAutomaticAddField.Equals(value) != true)) {
                    this.TeamAdminAutomaticAddField = value;
                    this.RaisePropertyChanged("TeamAdminAutomaticAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=66)]
        public bool IsShowMyScore {
            get {
                return this.IsShowMyScoreField;
            }
            set {
                if ((this.IsShowMyScoreField.Equals(value) != true)) {
                    this.IsShowMyScoreField = value;
                    this.RaisePropertyChanged("IsShowMyScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=67)]
        public bool IsShowMyScoreTeamList {
            get {
                return this.IsShowMyScoreTeamListField;
            }
            set {
                if ((this.IsShowMyScoreTeamListField.Equals(value) != true)) {
                    this.IsShowMyScoreTeamListField = value;
                    this.RaisePropertyChanged("IsShowMyScoreTeamList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=68)]
        public int TargetPersonScore {
            get {
                return this.TargetPersonScoreField;
            }
            set {
                if ((this.TargetPersonScoreField.Equals(value) != true)) {
                    this.TargetPersonScoreField = value;
                    this.RaisePropertyChanged("TargetPersonScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=69)]
        public bool SignUpGarminConnect {
            get {
                return this.SignUpGarminConnectField;
            }
            set {
                if ((this.SignUpGarminConnectField.Equals(value) != true)) {
                    this.SignUpGarminConnectField = value;
                    this.RaisePropertyChanged("SignUpGarminConnect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=70)]
        public bool IsCustomScorelists {
            get {
                return this.IsCustomScorelistsField;
            }
            set {
                if ((this.IsCustomScorelistsField.Equals(value) != true)) {
                    this.IsCustomScorelistsField = value;
                    this.RaisePropertyChanged("IsCustomScorelists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=71)]
        public bool IsPersonalScoresThisWeekOnly {
            get {
                return this.IsPersonalScoresThisWeekOnlyField;
            }
            set {
                if ((this.IsPersonalScoresThisWeekOnlyField.Equals(value) != true)) {
                    this.IsPersonalScoresThisWeekOnlyField = value;
                    this.RaisePropertyChanged("IsPersonalScoresThisWeekOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValuePairOfStringString", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class KeyValuePairOfStringString : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://service.funbeatrace.com/MobileService.asmx", ItemName="string")]
    public class ArrayOfString : System.Collections.ObjectModel.ObservableCollection<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Training", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class Training : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> TrainingIDField;
        
        private int PersonIDField;
        
        private int RaceIDField;
        
        private int TrainingTypeIDField;
        
        private System.DateTime StartDateTimeField;
        
        private string DescriptionField;
        
        private System.Nullable<int> IntensityField;
        
        private System.Nullable<int> MinutesField;
        
        private System.Nullable<int> StepsField;
        
        private System.Nullable<int> PointsField;
        
        private System.Nullable<double> DistanceField;
        
        private MotionsRace.WinPhone.MobileService.TrainingTypeUnits UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> TrainingID {
            get {
                return this.TrainingIDField;
            }
            set {
                if ((this.TrainingIDField.Equals(value) != true)) {
                    this.TrainingIDField = value;
                    this.RaisePropertyChanged("TrainingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int TrainingTypeID {
            get {
                return this.TrainingTypeIDField;
            }
            set {
                if ((this.TrainingTypeIDField.Equals(value) != true)) {
                    this.TrainingTypeIDField = value;
                    this.RaisePropertyChanged("TrainingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> Intensity {
            get {
                return this.IntensityField;
            }
            set {
                if ((this.IntensityField.Equals(value) != true)) {
                    this.IntensityField = value;
                    this.RaisePropertyChanged("Intensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<int> Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((this.StepsField.Equals(value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<double> Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public MotionsRace.WinPhone.MobileService.TrainingTypeUnits Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrainingBriefInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TrainingBriefInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int TrainingIDField;
        
        private string TrainingTypeNameField;
        
        private System.Nullable<int> MinutesField;
        
        private System.Nullable<int> PointsField;
        
        private System.Nullable<int> StepsField;
        
        private MotionsRace.WinPhone.MobileService.TrainingTypeUnits UnitField;
        
        private System.Nullable<double> DistanceField;
        
        private string DescriptionField;
        
        private System.DateTime StartDateTimeField;
        
        private int TrainingTypeIDField;
        
        private System.Nullable<int> IntensityField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TrainingID {
            get {
                return this.TrainingIDField;
            }
            set {
                if ((this.TrainingIDField.Equals(value) != true)) {
                    this.TrainingIDField = value;
                    this.RaisePropertyChanged("TrainingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TrainingTypeName {
            get {
                return this.TrainingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingTypeNameField, value) != true)) {
                    this.TrainingTypeNameField = value;
                    this.RaisePropertyChanged("TrainingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<int> Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((this.StepsField.Equals(value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public MotionsRace.WinPhone.MobileService.TrainingTypeUnits Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<double> Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int TrainingTypeID {
            get {
                return this.TrainingTypeIDField;
            }
            set {
                if ((this.TrainingTypeIDField.Equals(value) != true)) {
                    this.TrainingTypeIDField = value;
                    this.RaisePropertyChanged("TrainingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<int> Intensity {
            get {
                return this.IntensityField;
            }
            set {
                if ((this.IntensityField.Equals(value) != true)) {
                    this.IntensityField = value;
                    this.RaisePropertyChanged("Intensity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrainingType", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TrainingType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TrainingTypeNameField;
        
        private int TrainingTypeIDField;
        
        private MotionsRace.WinPhone.MobileService.TrainingTypeUnits UnitField;
        
        private string UnitAsStringField;
        
        private float WeightField;
        
        private string DescriptionField;
        
        private System.Nullable<int> DailyLimitField;
        
        private int ActivityCategoryIDField;
        
        private string ActivityCategoryNameField;
        
        private bool IsIntensityField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TrainingTypeName {
            get {
                return this.TrainingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingTypeNameField, value) != true)) {
                    this.TrainingTypeNameField = value;
                    this.RaisePropertyChanged("TrainingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int TrainingTypeID {
            get {
                return this.TrainingTypeIDField;
            }
            set {
                if ((this.TrainingTypeIDField.Equals(value) != true)) {
                    this.TrainingTypeIDField = value;
                    this.RaisePropertyChanged("TrainingTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public MotionsRace.WinPhone.MobileService.TrainingTypeUnits Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string UnitAsString {
            get {
                return this.UnitAsStringField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitAsStringField, value) != true)) {
                    this.UnitAsStringField = value;
                    this.RaisePropertyChanged("UnitAsString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public float Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> DailyLimit {
            get {
                return this.DailyLimitField;
            }
            set {
                if ((this.DailyLimitField.Equals(value) != true)) {
                    this.DailyLimitField = value;
                    this.RaisePropertyChanged("DailyLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int ActivityCategoryID {
            get {
                return this.ActivityCategoryIDField;
            }
            set {
                if ((this.ActivityCategoryIDField.Equals(value) != true)) {
                    this.ActivityCategoryIDField = value;
                    this.RaisePropertyChanged("ActivityCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string ActivityCategoryName {
            get {
                return this.ActivityCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityCategoryNameField, value) != true)) {
                    this.ActivityCategoryNameField = value;
                    this.RaisePropertyChanged("ActivityCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool IsIntensity {
            get {
                return this.IsIntensityField;
            }
            set {
                if ((this.IsIntensityField.Equals(value) != true)) {
                    this.IsIntensityField = value;
                    this.RaisePropertyChanged("IsIntensity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrainingAndPersonBriefInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TrainingAndPersonBriefInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int TrainingIDField;
        
        private string TrainingTypeNameField;
        
        private System.Nullable<int> MinutesField;
        
        private System.Nullable<int> PointsField;
        
        private System.Nullable<double> DistanceField;
        
        private string DescriptionField;
        
        private System.DateTime StartDateTimeField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int TrainingID {
            get {
                return this.TrainingIDField;
            }
            set {
                if ((this.TrainingIDField.Equals(value) != true)) {
                    this.TrainingIDField = value;
                    this.RaisePropertyChanged("TrainingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string TrainingTypeName {
            get {
                return this.TrainingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingTypeNameField, value) != true)) {
                    this.TrainingTypeNameField = value;
                    this.RaisePropertyChanged("TrainingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<double> Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DailyActivityScore", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class DailyActivityScore : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DayField;
        
        private int ActivityScoreField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int ActivityScore {
            get {
                return this.ActivityScoreField;
            }
            set {
                if ((this.ActivityScoreField.Equals(value) != true)) {
                    this.ActivityScoreField = value;
                    this.RaisePropertyChanged("ActivityScore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamScoreResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TeamScoreResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int TeamIDField;
        
        private string TeamNameField;
        
        private int TeamLevelField;
        
        private int ParticipantsCountField;
        
        private int AverageNumberOfPointsPerPersonField;
        
        private bool isTeamMembersVisibleField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        private string PurposeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int TeamLevel {
            get {
                return this.TeamLevelField;
            }
            set {
                if ((this.TeamLevelField.Equals(value) != true)) {
                    this.TeamLevelField = value;
                    this.RaisePropertyChanged("TeamLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int ParticipantsCount {
            get {
                return this.ParticipantsCountField;
            }
            set {
                if ((this.ParticipantsCountField.Equals(value) != true)) {
                    this.ParticipantsCountField = value;
                    this.RaisePropertyChanged("ParticipantsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int AverageNumberOfPointsPerPerson {
            get {
                return this.AverageNumberOfPointsPerPersonField;
            }
            set {
                if ((this.AverageNumberOfPointsPerPersonField.Equals(value) != true)) {
                    this.AverageNumberOfPointsPerPersonField = value;
                    this.RaisePropertyChanged("AverageNumberOfPointsPerPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool isTeamMembersVisible {
            get {
                return this.isTeamMembersVisibleField;
            }
            set {
                if ((this.isTeamMembersVisibleField.Equals(value) != true)) {
                    this.isTeamMembersVisibleField = value;
                    this.RaisePropertyChanged("isTeamMembersVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonScoreResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class PersonScoreResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RaceIDField;
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int TotalNumberOfPointsField;
        
        private string isTeamLeaderField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int TotalNumberOfPoints {
            get {
                return this.TotalNumberOfPointsField;
            }
            set {
                if ((this.TotalNumberOfPointsField.Equals(value) != true)) {
                    this.TotalNumberOfPointsField = value;
                    this.RaisePropertyChanged("TotalNumberOfPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string isTeamLeader {
            get {
                return this.isTeamLeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.isTeamLeaderField, value) != true)) {
                    this.isTeamLeaderField = value;
                    this.RaisePropertyChanged("isTeamLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonBriefInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class PersonBriefInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string MottoField;
        
        private string PictureURLField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Motto {
            get {
                return this.MottoField;
            }
            set {
                if ((object.ReferenceEquals(this.MottoField, value) != true)) {
                    this.MottoField = value;
                    this.RaisePropertyChanged("Motto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string PictureURL {
            get {
                return this.PictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureURLField, value) != true)) {
                    this.PictureURLField = value;
                    this.RaisePropertyChanged("PictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfInt", Namespace="http://service.funbeatrace.com/MobileService.asmx", ItemName="int")]
    public class ArrayOfInt : System.Collections.ObjectModel.ObservableCollection<int> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityStream", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ActivityStream : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string TrainingOrMedalTextField;
        
        private System.Nullable<int> MinutesField;
        
        private System.Nullable<int> PointsField;
        
        private System.Nullable<int> MedalIDField;
        
        private System.Nullable<int> TrainingIDField;
        
        private string DescriptionField;
        
        private System.Nullable<System.DateTime> StartDateTimeField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string TrainingOrMedalText {
            get {
                return this.TrainingOrMedalTextField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingOrMedalTextField, value) != true)) {
                    this.TrainingOrMedalTextField = value;
                    this.RaisePropertyChanged("TrainingOrMedalText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> MedalID {
            get {
                return this.MedalIDField;
            }
            set {
                if ((this.MedalIDField.Equals(value) != true)) {
                    this.MedalIDField = value;
                    this.RaisePropertyChanged("MedalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<int> TrainingID {
            get {
                return this.TrainingIDField;
            }
            set {
                if ((this.TrainingIDField.Equals(value) != true)) {
                    this.TrainingIDField = value;
                    this.RaisePropertyChanged("TrainingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.Nullable<System.DateTime> StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TeamInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> TeamIDField;
        
        private string TeamNameField;
        
        private string InternalPictureURLField;
        
        private int TeamLevelField;
        
        private string MottoField;
        
        private string PurposeField;
        
        private int AveragePointsPerPersonField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        private int RaceIDField;
        
        private bool isTeamMembersVisibleField;
        
        private System.Nullable<int> ParentTeamIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string InternalPictureURL {
            get {
                return this.InternalPictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalPictureURLField, value) != true)) {
                    this.InternalPictureURLField = value;
                    this.RaisePropertyChanged("InternalPictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int TeamLevel {
            get {
                return this.TeamLevelField;
            }
            set {
                if ((this.TeamLevelField.Equals(value) != true)) {
                    this.TeamLevelField = value;
                    this.RaisePropertyChanged("TeamLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Motto {
            get {
                return this.MottoField;
            }
            set {
                if ((object.ReferenceEquals(this.MottoField, value) != true)) {
                    this.MottoField = value;
                    this.RaisePropertyChanged("Motto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Purpose {
            get {
                return this.PurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeField, value) != true)) {
                    this.PurposeField = value;
                    this.RaisePropertyChanged("Purpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int AveragePointsPerPerson {
            get {
                return this.AveragePointsPerPersonField;
            }
            set {
                if ((this.AveragePointsPerPersonField.Equals(value) != true)) {
                    this.AveragePointsPerPersonField = value;
                    this.RaisePropertyChanged("AveragePointsPerPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool isTeamMembersVisible {
            get {
                return this.isTeamMembersVisibleField;
            }
            set {
                if ((this.isTeamMembersVisibleField.Equals(value) != true)) {
                    this.isTeamMembersVisibleField = value;
                    this.RaisePropertyChanged("isTeamMembersVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<int> ParentTeamID {
            get {
                return this.ParentTeamIDField;
            }
            set {
                if ((this.ParentTeamIDField.Equals(value) != true)) {
                    this.ParentTeamIDField = value;
                    this.RaisePropertyChanged("ParentTeamID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalMessageInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class PersonalMessageInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PersonalMessageIDField;
        
        private int FromPersonIDField;
        
        private int ToPersonIDField;
        
        private string MessageTextField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PictureURLField;
        
        private System.DateTime CreatedDateTimeField;
        
        private System.Nullable<System.DateTime> ArchivedByRecipientDateTimeField;
        
        private bool isReadField;
        
        private bool isPublicField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PersonalMessageID {
            get {
                return this.PersonalMessageIDField;
            }
            set {
                if ((this.PersonalMessageIDField.Equals(value) != true)) {
                    this.PersonalMessageIDField = value;
                    this.RaisePropertyChanged("PersonalMessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int FromPersonID {
            get {
                return this.FromPersonIDField;
            }
            set {
                if ((this.FromPersonIDField.Equals(value) != true)) {
                    this.FromPersonIDField = value;
                    this.RaisePropertyChanged("FromPersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int ToPersonID {
            get {
                return this.ToPersonIDField;
            }
            set {
                if ((this.ToPersonIDField.Equals(value) != true)) {
                    this.ToPersonIDField = value;
                    this.RaisePropertyChanged("ToPersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string PictureURL {
            get {
                return this.PictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureURLField, value) != true)) {
                    this.PictureURLField = value;
                    this.RaisePropertyChanged("PictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<System.DateTime> ArchivedByRecipientDateTime {
            get {
                return this.ArchivedByRecipientDateTimeField;
            }
            set {
                if ((this.ArchivedByRecipientDateTimeField.Equals(value) != true)) {
                    this.ArchivedByRecipientDateTimeField = value;
                    this.RaisePropertyChanged("ArchivedByRecipientDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool isRead {
            get {
                return this.isReadField;
            }
            set {
                if ((this.isReadField.Equals(value) != true)) {
                    this.isReadField = value;
                    this.RaisePropertyChanged("isRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public bool isPublic {
            get {
                return this.isPublicField;
            }
            set {
                if ((this.isPublicField.Equals(value) != true)) {
                    this.isPublicField = value;
                    this.RaisePropertyChanged("isPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ThreadInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ThreadIDField;
        
        private string SubjectField;
        
        private System.DateTime CreatedDateTimeField;
        
        private int NumberOfPostingsField;
        
        private int NumberOfUnreadPostingsField;
        
        private System.Nullable<System.DateTime> MostRecentPostingDateTimeField;
        
        private System.Nullable<int> MostRecentPostCreatedByIDField;
        
        private string MostRecentPostCreatedByNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int NumberOfPostings {
            get {
                return this.NumberOfPostingsField;
            }
            set {
                if ((this.NumberOfPostingsField.Equals(value) != true)) {
                    this.NumberOfPostingsField = value;
                    this.RaisePropertyChanged("NumberOfPostings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int NumberOfUnreadPostings {
            get {
                return this.NumberOfUnreadPostingsField;
            }
            set {
                if ((this.NumberOfUnreadPostingsField.Equals(value) != true)) {
                    this.NumberOfUnreadPostingsField = value;
                    this.RaisePropertyChanged("NumberOfUnreadPostings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<System.DateTime> MostRecentPostingDateTime {
            get {
                return this.MostRecentPostingDateTimeField;
            }
            set {
                if ((this.MostRecentPostingDateTimeField.Equals(value) != true)) {
                    this.MostRecentPostingDateTimeField = value;
                    this.RaisePropertyChanged("MostRecentPostingDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> MostRecentPostCreatedByID {
            get {
                return this.MostRecentPostCreatedByIDField;
            }
            set {
                if ((this.MostRecentPostCreatedByIDField.Equals(value) != true)) {
                    this.MostRecentPostCreatedByIDField = value;
                    this.RaisePropertyChanged("MostRecentPostCreatedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string MostRecentPostCreatedByName {
            get {
                return this.MostRecentPostCreatedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MostRecentPostCreatedByNameField, value) != true)) {
                    this.MostRecentPostCreatedByNameField = value;
                    this.RaisePropertyChanged("MostRecentPostCreatedByName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Posting", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class Posting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> PostingIDField;
        
        private int RaceIDField;
        
        private System.Nullable<int> ThreadIDField;
        
        private string SubjectField;
        
        private string BodyField;
        
        private System.Nullable<int> TeamIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> PostingID {
            get {
                return this.PostingIDField;
            }
            set {
                if ((this.PostingIDField.Equals(value) != true)) {
                    this.PostingIDField = value;
                    this.RaisePropertyChanged("PostingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<int> TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostingInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class PostingInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PostingIDField;
        
        private System.Nullable<int> ThreadIDField;
        
        private System.Nullable<int> TeamIDField;
        
        private string SubjectField;
        
        private string BodyField;
        
        private int PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string MottoField;
        
        private string PictureURLField;
        
        private bool isReadField;
        
        private System.DateTime CreatedDateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int PostingID {
            get {
                return this.PostingIDField;
            }
            set {
                if ((this.PostingIDField.Equals(value) != true)) {
                    this.PostingIDField = value;
                    this.RaisePropertyChanged("PostingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ThreadID {
            get {
                return this.ThreadIDField;
            }
            set {
                if ((this.ThreadIDField.Equals(value) != true)) {
                    this.ThreadIDField = value;
                    this.RaisePropertyChanged("ThreadID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Nullable<int> TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Motto {
            get {
                return this.MottoField;
            }
            set {
                if ((object.ReferenceEquals(this.MottoField, value) != true)) {
                    this.MottoField = value;
                    this.RaisePropertyChanged("Motto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string PictureURL {
            get {
                return this.PictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureURLField, value) != true)) {
                    this.PictureURLField = value;
                    this.RaisePropertyChanged("PictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public bool isRead {
            get {
                return this.isReadField;
            }
            set {
                if ((this.isReadField.Equals(value) != true)) {
                    this.isReadField = value;
                    this.RaisePropertyChanged("isRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonInfo", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class PersonInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> PersonIDField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string UserNameField;
        
        private string EmailField;
        
        private string PasswordEncryptedField;
        
        private string PasswordSaltField;
        
        private string InternalPictureURLField;
        
        private string MottoField;
        
        private string PersonalDescriptionField;
        
        private System.Nullable<System.DateTime> CreatedDateTimeField;
        
        private System.Nullable<System.DateTime> MostRecentLoginDateTimeField;
        
        private System.Nullable<System.Guid> ImageGUIDField;
        
        private string FacebookSecretField;
        
        private string FunBeatLoginIDField;
        
        private string FunBeatLoginSecretField;
        
        private bool IsShowTrainingDataField;
        
        private string FitbitAuthAccessTokenField;
        
        private string FitbitAuthSecretField;
        
        private System.DateTime MostRecentFitbitUpdatedDateField;
        
        private int FitBitDeviceRaceIDField;
        
        private string GarminAuthAccessTokenField;
        
        private string GarminAuthSecretField;
        
        private System.DateTime MostRecentGarminUpdateDateField;
        
        private bool IsShowGuideOnLoginField;
        
        private System.Nullable<bool> IsShareToFacebookField;
        
        private System.Nullable<int> WeightField;
        
        private System.Nullable<int> HeightField;
        
        private System.Nullable<int> AgeField;
        
        private string SexField;
        
        private string FacebookAccessTokenField;
        
        private string PreferredCultureNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string PasswordEncrypted {
            get {
                return this.PasswordEncryptedField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordEncryptedField, value) != true)) {
                    this.PasswordEncryptedField = value;
                    this.RaisePropertyChanged("PasswordEncrypted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string InternalPictureURL {
            get {
                return this.InternalPictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalPictureURLField, value) != true)) {
                    this.InternalPictureURLField = value;
                    this.RaisePropertyChanged("InternalPictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Motto {
            get {
                return this.MottoField;
            }
            set {
                if ((object.ReferenceEquals(this.MottoField, value) != true)) {
                    this.MottoField = value;
                    this.RaisePropertyChanged("Motto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string PersonalDescription {
            get {
                return this.PersonalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalDescriptionField, value) != true)) {
                    this.PersonalDescriptionField = value;
                    this.RaisePropertyChanged("PersonalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public System.Nullable<System.DateTime> MostRecentLoginDateTime {
            get {
                return this.MostRecentLoginDateTimeField;
            }
            set {
                if ((this.MostRecentLoginDateTimeField.Equals(value) != true)) {
                    this.MostRecentLoginDateTimeField = value;
                    this.RaisePropertyChanged("MostRecentLoginDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.Nullable<System.Guid> ImageGUID {
            get {
                return this.ImageGUIDField;
            }
            set {
                if ((this.ImageGUIDField.Equals(value) != true)) {
                    this.ImageGUIDField = value;
                    this.RaisePropertyChanged("ImageGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string FacebookSecret {
            get {
                return this.FacebookSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookSecretField, value) != true)) {
                    this.FacebookSecretField = value;
                    this.RaisePropertyChanged("FacebookSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string FunBeatLoginID {
            get {
                return this.FunBeatLoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FunBeatLoginIDField, value) != true)) {
                    this.FunBeatLoginIDField = value;
                    this.RaisePropertyChanged("FunBeatLoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string FunBeatLoginSecret {
            get {
                return this.FunBeatLoginSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.FunBeatLoginSecretField, value) != true)) {
                    this.FunBeatLoginSecretField = value;
                    this.RaisePropertyChanged("FunBeatLoginSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public bool IsShowTrainingData {
            get {
                return this.IsShowTrainingDataField;
            }
            set {
                if ((this.IsShowTrainingDataField.Equals(value) != true)) {
                    this.IsShowTrainingDataField = value;
                    this.RaisePropertyChanged("IsShowTrainingData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string FitbitAuthAccessToken {
            get {
                return this.FitbitAuthAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.FitbitAuthAccessTokenField, value) != true)) {
                    this.FitbitAuthAccessTokenField = value;
                    this.RaisePropertyChanged("FitbitAuthAccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string FitbitAuthSecret {
            get {
                return this.FitbitAuthSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.FitbitAuthSecretField, value) != true)) {
                    this.FitbitAuthSecretField = value;
                    this.RaisePropertyChanged("FitbitAuthSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public System.DateTime MostRecentFitbitUpdatedDate {
            get {
                return this.MostRecentFitbitUpdatedDateField;
            }
            set {
                if ((this.MostRecentFitbitUpdatedDateField.Equals(value) != true)) {
                    this.MostRecentFitbitUpdatedDateField = value;
                    this.RaisePropertyChanged("MostRecentFitbitUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public int FitBitDeviceRaceID {
            get {
                return this.FitBitDeviceRaceIDField;
            }
            set {
                if ((this.FitBitDeviceRaceIDField.Equals(value) != true)) {
                    this.FitBitDeviceRaceIDField = value;
                    this.RaisePropertyChanged("FitBitDeviceRaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public string GarminAuthAccessToken {
            get {
                return this.GarminAuthAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.GarminAuthAccessTokenField, value) != true)) {
                    this.GarminAuthAccessTokenField = value;
                    this.RaisePropertyChanged("GarminAuthAccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public string GarminAuthSecret {
            get {
                return this.GarminAuthSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.GarminAuthSecretField, value) != true)) {
                    this.GarminAuthSecretField = value;
                    this.RaisePropertyChanged("GarminAuthSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public System.DateTime MostRecentGarminUpdateDate {
            get {
                return this.MostRecentGarminUpdateDateField;
            }
            set {
                if ((this.MostRecentGarminUpdateDateField.Equals(value) != true)) {
                    this.MostRecentGarminUpdateDateField = value;
                    this.RaisePropertyChanged("MostRecentGarminUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public bool IsShowGuideOnLogin {
            get {
                return this.IsShowGuideOnLoginField;
            }
            set {
                if ((this.IsShowGuideOnLoginField.Equals(value) != true)) {
                    this.IsShowGuideOnLoginField = value;
                    this.RaisePropertyChanged("IsShowGuideOnLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public System.Nullable<bool> IsShareToFacebook {
            get {
                return this.IsShareToFacebookField;
            }
            set {
                if ((this.IsShareToFacebookField.Equals(value) != true)) {
                    this.IsShareToFacebookField = value;
                    this.RaisePropertyChanged("IsShareToFacebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public System.Nullable<int> Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public System.Nullable<int> Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=29)]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=30)]
        public string FacebookAccessToken {
            get {
                return this.FacebookAccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookAccessTokenField, value) != true)) {
                    this.FacebookAccessTokenField = value;
                    this.RaisePropertyChanged("FacebookAccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=31)]
        public string PreferredCultureName {
            get {
                return this.PreferredCultureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredCultureNameField, value) != true)) {
                    this.PreferredCultureNameField = value;
                    this.RaisePropertyChanged("PreferredCultureName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Goal", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class Goal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> GoalIDField;
        
        private int RaceIDField;
        
        private int PersonIDField;
        
        private string GoalNameField;
        
        private MotionsRace.WinPhone.MobileService.GoalPeriodLengths PeriodLengthField;
        
        private System.Nullable<double> DistanceField;
        
        private System.Nullable<double> MinutesField;
        
        private System.Nullable<double> TrainingCountField;
        
        private System.Nullable<double> StepsField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime EndDateField;
        
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> TrainingTypesField;
        
        private System.DateTime CreatedDateTimeField;
        
        private System.Nullable<int> ManualLevelAchievedField;
        
        private bool IsPublicField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> GoalID {
            get {
                return this.GoalIDField;
            }
            set {
                if ((this.GoalIDField.Equals(value) != true)) {
                    this.GoalIDField = value;
                    this.RaisePropertyChanged("GoalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string GoalName {
            get {
                return this.GoalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalNameField, value) != true)) {
                    this.GoalNameField = value;
                    this.RaisePropertyChanged("GoalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public MotionsRace.WinPhone.MobileService.GoalPeriodLengths PeriodLength {
            get {
                return this.PeriodLengthField;
            }
            set {
                if ((this.PeriodLengthField.Equals(value) != true)) {
                    this.PeriodLengthField = value;
                    this.RaisePropertyChanged("PeriodLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<double> Distance {
            get {
                return this.DistanceField;
            }
            set {
                if ((this.DistanceField.Equals(value) != true)) {
                    this.DistanceField = value;
                    this.RaisePropertyChanged("Distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<double> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<double> TrainingCount {
            get {
                return this.TrainingCountField;
            }
            set {
                if ((this.TrainingCountField.Equals(value) != true)) {
                    this.TrainingCountField = value;
                    this.RaisePropertyChanged("TrainingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Nullable<double> Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((this.StepsField.Equals(value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> TrainingTypes {
            get {
                return this.TrainingTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingTypesField, value) != true)) {
                    this.TrainingTypesField = value;
                    this.RaisePropertyChanged("TrainingTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public System.Nullable<int> ManualLevelAchieved {
            get {
                return this.ManualLevelAchievedField;
            }
            set {
                if ((this.ManualLevelAchievedField.Equals(value) != true)) {
                    this.ManualLevelAchievedField = value;
                    this.RaisePropertyChanged("ManualLevelAchieved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoalPeriodLengths", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum GoalPeriodLengths : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntirePeriod = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoalBriefInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GoalBriefInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GoalIDField;
        
        private string GoalNameField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime EndDateField;
        
        private MotionsRace.WinPhone.MobileService.GoalUnits UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int GoalID {
            get {
                return this.GoalIDField;
            }
            set {
                if ((this.GoalIDField.Equals(value) != true)) {
                    this.GoalIDField = value;
                    this.RaisePropertyChanged("GoalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GoalName {
            get {
                return this.GoalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalNameField, value) != true)) {
                    this.GoalNameField = value;
                    this.RaisePropertyChanged("GoalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public MotionsRace.WinPhone.MobileService.GoalUnits Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoalUnits", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public enum GoalUnits : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distance = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrainingCount = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steps = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoalPeriodResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GoalPeriodResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GoalIDField;
        
        private string GoalNameField;
        
        private System.Nullable<int> YearField;
        
        private System.Nullable<int> MonthField;
        
        private System.Nullable<int> WeekField;
        
        private double AchievedField;
        
        private double TargetField;
        
        private double PercentageField;
        
        private MotionsRace.WinPhone.MobileService.GoalUnits UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int GoalID {
            get {
                return this.GoalIDField;
            }
            set {
                if ((this.GoalIDField.Equals(value) != true)) {
                    this.GoalIDField = value;
                    this.RaisePropertyChanged("GoalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GoalName {
            get {
                return this.GoalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalNameField, value) != true)) {
                    this.GoalNameField = value;
                    this.RaisePropertyChanged("GoalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.Nullable<int> Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<int> Week {
            get {
                return this.WeekField;
            }
            set {
                if ((this.WeekField.Equals(value) != true)) {
                    this.WeekField = value;
                    this.RaisePropertyChanged("Week");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public double Achieved {
            get {
                return this.AchievedField;
            }
            set {
                if ((this.AchievedField.Equals(value) != true)) {
                    this.AchievedField = value;
                    this.RaisePropertyChanged("Achieved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double Target {
            get {
                return this.TargetField;
            }
            set {
                if ((this.TargetField.Equals(value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public double Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public MotionsRace.WinPhone.MobileService.GoalUnits Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceShortInfoResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class RaceShortInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RaceIDField;
        
        private string RaceTitleField;
        
        private string CompanyNameField;
        
        private int MaxUsersForSignUpCodeField;
        
        private int UsersRegisteredBySignUpCodeField;
        
        private bool isSignUpCodesActivatedField;
        
        private bool IsAllowSignUpCreateNewTeamsField;
        
        private bool IsAllowManageTeamMembersField;
        
        private string DefaultPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RaceID {
            get {
                return this.RaceIDField;
            }
            set {
                if ((this.RaceIDField.Equals(value) != true)) {
                    this.RaceIDField = value;
                    this.RaisePropertyChanged("RaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RaceTitle {
            get {
                return this.RaceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceTitleField, value) != true)) {
                    this.RaceTitleField = value;
                    this.RaisePropertyChanged("RaceTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int MaxUsersForSignUpCode {
            get {
                return this.MaxUsersForSignUpCodeField;
            }
            set {
                if ((this.MaxUsersForSignUpCodeField.Equals(value) != true)) {
                    this.MaxUsersForSignUpCodeField = value;
                    this.RaisePropertyChanged("MaxUsersForSignUpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int UsersRegisteredBySignUpCode {
            get {
                return this.UsersRegisteredBySignUpCodeField;
            }
            set {
                if ((this.UsersRegisteredBySignUpCodeField.Equals(value) != true)) {
                    this.UsersRegisteredBySignUpCodeField = value;
                    this.RaisePropertyChanged("UsersRegisteredBySignUpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool isSignUpCodesActivated {
            get {
                return this.isSignUpCodesActivatedField;
            }
            set {
                if ((this.isSignUpCodesActivatedField.Equals(value) != true)) {
                    this.isSignUpCodesActivatedField = value;
                    this.RaisePropertyChanged("isSignUpCodesActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool IsAllowSignUpCreateNewTeams {
            get {
                return this.IsAllowSignUpCreateNewTeamsField;
            }
            set {
                if ((this.IsAllowSignUpCreateNewTeamsField.Equals(value) != true)) {
                    this.IsAllowSignUpCreateNewTeamsField = value;
                    this.RaisePropertyChanged("IsAllowSignUpCreateNewTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool IsAllowManageTeamMembers {
            get {
                return this.IsAllowManageTeamMembersField;
            }
            set {
                if ((this.IsAllowManageTeamMembersField.Equals(value) != true)) {
                    this.IsAllowManageTeamMembersField = value;
                    this.RaisePropertyChanged("IsAllowManageTeamMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string DefaultPassword {
            get {
                return this.DefaultPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultPasswordField, value) != true)) {
                    this.DefaultPasswordField = value;
                    this.RaisePropertyChanged("DefaultPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantOverview", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ParticipantOverview : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MotionsRace.WinPhone.MobileService.RaceDetailsResult RaceDetailsField;
        
        private MotionsRace.WinPhone.MobileService.PersonInfo PersonInfoField;
        
        private MotionsRace.WinPhone.MobileService.TeamInfoResult TeamInfoField;
        
        private int NumberOfMedalsField;
        
        private int NumberOfMedalsEarnedField;
        
        private int TotalNumberOfPointsField;
        
        private MotionsRace.WinPhone.MobileService.ServerDate ServerDateField;
        
        private System.DateTime minvalidRegistrationDateField;
        
        private System.DateTime maxvalidRegistrationDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult RaceDetails {
            get {
                return this.RaceDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RaceDetailsField, value) != true)) {
                    this.RaceDetailsField = value;
                    this.RaisePropertyChanged("RaceDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public MotionsRace.WinPhone.MobileService.PersonInfo PersonInfo {
            get {
                return this.PersonInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonInfoField, value) != true)) {
                    this.PersonInfoField = value;
                    this.RaisePropertyChanged("PersonInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public MotionsRace.WinPhone.MobileService.TeamInfoResult TeamInfo {
            get {
                return this.TeamInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamInfoField, value) != true)) {
                    this.TeamInfoField = value;
                    this.RaisePropertyChanged("TeamInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int NumberOfMedals {
            get {
                return this.NumberOfMedalsField;
            }
            set {
                if ((this.NumberOfMedalsField.Equals(value) != true)) {
                    this.NumberOfMedalsField = value;
                    this.RaisePropertyChanged("NumberOfMedals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int NumberOfMedalsEarned {
            get {
                return this.NumberOfMedalsEarnedField;
            }
            set {
                if ((this.NumberOfMedalsEarnedField.Equals(value) != true)) {
                    this.NumberOfMedalsEarnedField = value;
                    this.RaisePropertyChanged("NumberOfMedalsEarned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int TotalNumberOfPoints {
            get {
                return this.TotalNumberOfPointsField;
            }
            set {
                if ((this.TotalNumberOfPointsField.Equals(value) != true)) {
                    this.TotalNumberOfPointsField = value;
                    this.RaisePropertyChanged("TotalNumberOfPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public MotionsRace.WinPhone.MobileService.ServerDate ServerDate {
            get {
                return this.ServerDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerDateField, value) != true)) {
                    this.ServerDateField = value;
                    this.RaisePropertyChanged("ServerDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.DateTime minvalidRegistrationDate {
            get {
                return this.minvalidRegistrationDateField;
            }
            set {
                if ((this.minvalidRegistrationDateField.Equals(value) != true)) {
                    this.minvalidRegistrationDateField = value;
                    this.RaisePropertyChanged("minvalidRegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.DateTime maxvalidRegistrationDate {
            get {
                return this.maxvalidRegistrationDateField;
            }
            set {
                if ((this.maxvalidRegistrationDateField.Equals(value) != true)) {
                    this.maxvalidRegistrationDateField = value;
                    this.RaisePropertyChanged("maxvalidRegistrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerDate", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ServerDate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string TodayDateField;
        
        private string TodayTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TodayDate {
            get {
                return this.TodayDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TodayDateField, value) != true)) {
                    this.TodayDateField = value;
                    this.RaisePropertyChanged("TodayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TodayTime {
            get {
                return this.TodayTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TodayTimeField, value) != true)) {
                    this.TodayTimeField = value;
                    this.RaisePropertyChanged("TodayTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResult", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidationResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MotionsRace.WinPhone.MobileService.PersonBriefInfoResult UserInfoField;
        
        private string LoginIDField;
        
        private string LoginSecretField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MotionsRace.WinPhone.MobileService.PersonBriefInfoResult UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LoginSecret {
            get {
                return this.LoginSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginSecretField, value) != true)) {
                    this.LoginSecretField = value;
                    this.RaisePropertyChanged("LoginSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyNewsFeed", Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class MyNewsFeed : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EventTypeField;
        
        private System.DateTime EventTimeField;
        
        private System.Nullable<int> PointsField;
        
        private string BaseNameField;
        
        private System.Nullable<int> BasePointsField;
        
        private string PersonNameField;
        
        private System.Nullable<int> MinutesField;
        
        private string TranslatedNameField;
        
        private int RelevanceRankField;
        
        private string ImageURLField;
        
        private string ThumbnailURLField;
        
        private string FullMessageField;
        
        private string ReadMoreURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EventTypeField, value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime EventTime {
            get {
                return this.EventTimeField;
            }
            set {
                if ((this.EventTimeField.Equals(value) != true)) {
                    this.EventTimeField = value;
                    this.RaisePropertyChanged("EventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Nullable<int> Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string BaseName {
            get {
                return this.BaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseNameField, value) != true)) {
                    this.BaseNameField = value;
                    this.RaisePropertyChanged("BaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<int> BasePoints {
            get {
                return this.BasePointsField;
            }
            set {
                if ((this.BasePointsField.Equals(value) != true)) {
                    this.BasePointsField = value;
                    this.RaisePropertyChanged("BasePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<int> Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string TranslatedName {
            get {
                return this.TranslatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedNameField, value) != true)) {
                    this.TranslatedNameField = value;
                    this.RaisePropertyChanged("TranslatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int RelevanceRank {
            get {
                return this.RelevanceRankField;
            }
            set {
                if ((this.RelevanceRankField.Equals(value) != true)) {
                    this.RelevanceRankField = value;
                    this.RaisePropertyChanged("RelevanceRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ThumbnailURL {
            get {
                return this.ThumbnailURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailURLField, value) != true)) {
                    this.ThumbnailURLField = value;
                    this.RaisePropertyChanged("ThumbnailURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string FullMessage {
            get {
                return this.FullMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FullMessageField, value) != true)) {
                    this.FullMessageField = value;
                    this.RaisePropertyChanged("FullMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string ReadMoreURL {
            get {
                return this.ReadMoreURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadMoreURLField, value) != true)) {
                    this.ReadMoreURLField = value;
                    this.RaisePropertyChanged("ReadMoreURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx", ConfigurationName="MobileService.MobileServiceSoap")]
    public interface MobileServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetAvailableMedals", ReplyAction="*")]
        System.IAsyncResult BeginGetAvailableMedals(MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse EndGetAvailableMedals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetAvailableMedalsTranslated", ReplyAction="*")]
        System.IAsyncResult BeginGetAvailableMedalsTranslated(MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse EndGetAvailableMedalsTranslated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/EarnMedal", ReplyAction="*")]
        System.IAsyncResult BeginEarnMedal(MotionsRace.WinPhone.MobileService.EarnMedalRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.EarnMedalResponse EndEarnMedal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/EarnMedalTranslated", ReplyAction="*")]
        System.IAsyncResult BeginEarnMedalTranslated(MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse EndEarnMedalTranslated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/UnearnMedal", ReplyAction="*")]
        System.IAsyncResult BeginUnearnMedal(MotionsRace.WinPhone.MobileService.UnearnMedalRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.UnearnMedalResponse EndUnearnMedal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetNumberOfMedalsPerPerson", ReplyAction="*")]
        System.IAsyncResult BeginGetNumberOfMedalsPerPerson(MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse EndGetNumberOfMedalsPerPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMyNewsStream", ReplyAction="*")]
        System.IAsyncResult BeginGetMyNewsStream(MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse EndGetMyNewsStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTeamStream", ReplyAction="*")]
        System.IAsyncResult BeginGetTeamStream(MotionsRace.WinPhone.MobileService.GetTeamStreamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTeamStreamResponse EndGetTeamStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetWhatsGoingOn", ReplyAction="*")]
        System.IAsyncResult BeginGetWhatsGoingOn(MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse EndGetWhatsGoingOn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMyRanking", ReplyAction="*")]
        System.IAsyncResult BeginGetMyRanking(MotionsRace.WinPhone.MobileService.GetMyRankingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMyRankingResponse EndGetMyRanking(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRacesAPersonCanLoginTo", ReplyAction="*")]
        System.IAsyncResult BeginGetRacesAPersonCanLoginTo(MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse EndGetRacesAPersonCanLoginTo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRacesAvailability", ReplyAction="*")]
        System.IAsyncResult BeginGetRacesAvailability(MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse EndGetRacesAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/AuthenticateLogin", ReplyAction="*")]
        System.IAsyncResult BeginAuthenticateLogin(MotionsRace.WinPhone.MobileService.AuthenticateLoginRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse EndAuthenticateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRaceByRaceKey", ReplyAction="*")]
        System.IAsyncResult BeginGetRaceByRaceKey(MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse EndGetRaceByRaceKey(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/AuthorizeRaceAccess", ReplyAction="*")]
        System.IAsyncResult BeginAuthorizeRaceAccess(MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse EndAuthorizeRaceAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetBrandSpecificTranslationStri" +
            "ngs", ReplyAction="*")]
        System.IAsyncResult BeginGetBrandSpecificTranslationStrings(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse EndGetBrandSpecificTranslationStrings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetBrandSpecificTranslationStri" +
            "ngsIOS", ReplyAction="*")]
        System.IAsyncResult BeginGetBrandSpecificTranslationStringsIOS(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse EndGetBrandSpecificTranslationStringsIOS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTraining", ReplyAction="*")]
        System.IAsyncResult BeginGetTraining(MotionsRace.WinPhone.MobileService.GetTrainingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTrainingResponse EndGetTraining(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/DeleteTraining", ReplyAction="*")]
        System.IAsyncResult BeginDeleteTraining(MotionsRace.WinPhone.MobileService.DeleteTrainingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.DeleteTrainingResponse EndDeleteTraining(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/SaveTraining", ReplyAction="*")]
        System.IAsyncResult BeginSaveTraining(MotionsRace.WinPhone.MobileService.SaveTrainingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.SaveTrainingResponse EndSaveTraining(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTotalNumberOfPoints", ReplyAction="*")]
        System.IAsyncResult BeginGetTotalNumberOfPoints(MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse EndGetTotalNumberOfPoints(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTrainingForCalendar", ReplyAction="*")]
        System.IAsyncResult BeginGetTrainingForCalendar(MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse EndGetTrainingForCalendar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTrainingTypes", ReplyAction="*")]
        System.IAsyncResult BeginGetTrainingTypes(MotionsRace.WinPhone.MobileService.GetTrainingTypesRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse EndGetTrainingTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMostRecentTrainingInTeam", ReplyAction="*")]
        System.IAsyncResult BeginGetMostRecentTrainingInTeam(MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse EndGetMostRecentTrainingInTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/SaveDailyActivityScores", ReplyAction="*")]
        System.IAsyncResult BeginSaveDailyActivityScores(MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse EndSaveDailyActivityScores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetHighscores_BestSubTeams", ReplyAction="*")]
        System.IAsyncResult BeginGetHighscores_BestSubTeams(MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse EndGetHighscores_BestSubTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetHighscores_BestPersonsInTeam" +
            "", ReplyAction="*")]
        System.IAsyncResult BeginGetHighscores_BestPersonsInTeam(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse EndGetHighscores_BestPersonsInTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRisingStarOfTheWeek", ReplyAction="*")]
        System.IAsyncResult BeginGetRisingStarOfTheWeek(MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse EndGetRisingStarOfTheWeek(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetHighscores_BestPersonsInMyLi" +
            "st", ReplyAction="*")]
        System.IAsyncResult BeginGetHighscores_BestPersonsInMyList(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse EndGetHighscores_BestPersonsInMyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/IsMyFriend", ReplyAction="*")]
        System.IAsyncResult BeginIsMyFriend(MotionsRace.WinPhone.MobileService.IsMyFriendRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.IsMyFriendResponse EndIsMyFriend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMyFriends", ReplyAction="*")]
        System.IAsyncResult BeginGetMyFriends(MotionsRace.WinPhone.MobileService.GetMyFriendsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMyFriendsResponse EndGetMyFriends(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/RemoveFriend", ReplyAction="*")]
        System.IAsyncResult BeginRemoveFriend(MotionsRace.WinPhone.MobileService.RemoveFriendRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.RemoveFriendResponse EndRemoveFriend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/AddFriends", ReplyAction="*")]
        System.IAsyncResult BeginAddFriends(MotionsRace.WinPhone.MobileService.AddFriendsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.AddFriendsResponse EndAddFriends(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMostRecentTeamActivity", ReplyAction="*")]
        System.IAsyncResult BeginGetMostRecentTeamActivity(MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse EndGetMostRecentTeamActivity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetAllPersonsOfTheTeam", ReplyAction="*")]
        System.IAsyncResult BeginGetAllPersonsOfTheTeam(MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse EndGetAllPersonsOfTheTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTeamInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetTeamInfo(MotionsRace.WinPhone.MobileService.GetTeamInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTeamInfoResponse EndGetTeamInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/UpdateTeam", ReplyAction="*")]
        System.IAsyncResult BeginUpdateTeam(MotionsRace.WinPhone.MobileService.UpdateTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.UpdateTeamResponse EndUpdateTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTeamsByRaceID", ReplyAction="*")]
        System.IAsyncResult BeginGetTeamsByRaceID(MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse EndGetTeamsByRaceID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/CheckIfPersonIsManagerOfTeam", ReplyAction="*")]
        System.IAsyncResult BeginCheckIfPersonIsManagerOfTeam(MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse EndCheckIfPersonIsManagerOfTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTeamsPersonIsAManagerOf", ReplyAction="*")]
        System.IAsyncResult BeginGetTeamsPersonIsAManagerOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse EndGetTeamsPersonIsAManagerOf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetTeamsPersonIsAMemberOf", ReplyAction="*")]
        System.IAsyncResult BeginGetTeamsPersonIsAMemberOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse EndGetTeamsPersonIsAMemberOf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMyTeams", ReplyAction="*")]
        System.IAsyncResult BeginGetMyTeams(MotionsRace.WinPhone.MobileService.GetMyTeamsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMyTeamsResponse EndGetMyTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/UpdateTeamPictureURL", ReplyAction="*")]
        System.IAsyncResult BeginUpdateTeamPictureURL(MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse EndUpdateTeamPictureURL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetNumberOfUnreadPersonalMessag" +
            "es", ReplyAction="*")]
        System.IAsyncResult BeginGetNumberOfUnreadPersonalMessages(MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse EndGetNumberOfUnreadPersonalMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/MarkPersonalMessagesAsRead", ReplyAction="*")]
        System.IAsyncResult BeginMarkPersonalMessagesAsRead(MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse EndMarkPersonalMessagesAsRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/MarkOrUnmarkPersonalMessageAsRe" +
            "ad", ReplyAction="*")]
        System.IAsyncResult BeginMarkOrUnmarkPersonalMessageAsRead(MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse EndMarkOrUnmarkPersonalMessageAsRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/ArchivePersonalMessage", ReplyAction="*")]
        System.IAsyncResult BeginArchivePersonalMessage(MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse EndArchivePersonalMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetPersonalMessages", ReplyAction="*")]
        System.IAsyncResult BeginGetPersonalMessages(MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse EndGetPersonalMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetSentPersonalMessages", ReplyAction="*")]
        System.IAsyncResult BeginGetSentPersonalMessages(MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse EndGetSentPersonalMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/SendPersonalMessage", ReplyAction="*")]
        System.IAsyncResult BeginSendPersonalMessage(MotionsRace.WinPhone.MobileService.SendPersonalMessageRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse EndSendPersonalMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/DeletePersonalMessage", ReplyAction="*")]
        System.IAsyncResult BeginDeletePersonalMessage(MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse EndDeletePersonalMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/CreateReplyToMessage", ReplyAction="*")]
        System.IAsyncResult BeginCreateReplyToMessage(MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse EndCreateReplyToMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetThreads", ReplyAction="*")]
        System.IAsyncResult BeginGetThreads(MotionsRace.WinPhone.MobileService.GetThreadsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetThreadsResponse EndGetThreads(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetPosting", ReplyAction="*")]
        System.IAsyncResult BeginGetPosting(MotionsRace.WinPhone.MobileService.GetPostingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetPostingResponse EndGetPosting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/SavePosting", ReplyAction="*")]
        System.IAsyncResult BeginSavePosting(MotionsRace.WinPhone.MobileService.SavePostingRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.SavePostingResponse EndSavePosting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/MarkThreadAsRead", ReplyAction="*")]
        System.IAsyncResult BeginMarkThreadAsRead(MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse EndMarkThreadAsRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetThread", ReplyAction="*")]
        System.IAsyncResult BeginGetThread(MotionsRace.WinPhone.MobileService.GetThreadRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetThreadResponse EndGetThread(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetPersonInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetPersonInfo(MotionsRace.WinPhone.MobileService.GetPersonInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetPersonInfoResponse EndGetPersonInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/SaveGoal", ReplyAction="*")]
        System.IAsyncResult BeginSaveGoal(MotionsRace.WinPhone.MobileService.SaveGoalRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.SaveGoalResponse EndSaveGoal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetGoal", ReplyAction="*")]
        System.IAsyncResult BeginGetGoal(MotionsRace.WinPhone.MobileService.GetGoalRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetGoalResponse EndGetGoal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/DeleteGoal", ReplyAction="*")]
        System.IAsyncResult BeginDeleteGoal(MotionsRace.WinPhone.MobileService.DeleteGoalRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.DeleteGoalResponse EndDeleteGoal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetGoals", ReplyAction="*")]
        System.IAsyncResult BeginGetGoals(MotionsRace.WinPhone.MobileService.GetGoalsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetGoalsResponse EndGetGoals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetGoalPeriodResults", ReplyAction="*")]
        System.IAsyncResult BeginGetGoalPeriodResults(MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse EndGetGoalPeriodResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/ValidateUserName", ReplyAction="*")]
        System.IAsyncResult BeginValidateUserName(MotionsRace.WinPhone.MobileService.ValidateUserNameRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.ValidateUserNameResponse EndValidateUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/ValidateEmail", ReplyAction="*")]
        System.IAsyncResult BeginValidateEmail(MotionsRace.WinPhone.MobileService.ValidateEmailRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.ValidateEmailResponse EndValidateEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRaceFromSignUpCode", ReplyAction="*")]
        System.IAsyncResult BeginGetRaceFromSignUpCode(MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse EndGetRaceFromSignUpCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/UpdateMySettings", ReplyAction="*")]
        System.IAsyncResult BeginUpdateMySettings(MotionsRace.WinPhone.MobileService.UpdateMySettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse EndUpdateMySettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/AddPersonToTeam", ReplyAction="*")]
        System.IAsyncResult BeginAddPersonToTeam(MotionsRace.WinPhone.MobileService.AddPersonToTeamRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse EndAddPersonToTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetRace", ReplyAction="*")]
        System.IAsyncResult BeginGetRace(MotionsRace.WinPhone.MobileService.GetRaceRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetRaceResponse EndGetRace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/UpdatePictureURL", ReplyAction="*")]
        System.IAsyncResult BeginUpdatePictureURL(MotionsRace.WinPhone.MobileService.UpdatePictureURLRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse EndUpdatePictureURL(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMySettings", ReplyAction="*")]
        System.IAsyncResult BeginGetMySettings(MotionsRace.WinPhone.MobileService.GetMySettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMySettingsResponse EndGetMySettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetParticipantOverview", ReplyAction="*")]
        System.IAsyncResult BeginGetParticipantOverview(MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse EndGetParticipantOverview(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/TemplateCallHelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginTemplateCallHelloWorld(MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse EndTemplateCallHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/ValidateAndCreateSecret", ReplyAction="*")]
        System.IAsyncResult BeginValidateAndCreateSecret(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse EndValidateAndCreateSecret(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/ValidateAndCreateSecret_Alterna" +
            "te", ReplyAction="*")]
        System.IAsyncResult BeginValidateAndCreateSecret_Alternate(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse EndValidateAndCreateSecret_Alternate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetMyNewsFeed", ReplyAction="*")]
        System.IAsyncResult BeginGetMyNewsFeed(MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse EndGetMyNewsFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://service.funbeatrace.com/MobileService.asmx/GetServerDateTime", ReplyAction="*")]
        System.IAsyncResult BeginGetServerDateTime(MotionsRace.WinPhone.MobileService.GetServerDateTimeRequest request, System.AsyncCallback callback, object asyncState);
        
        MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse EndGetServerDateTime(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAvailableMedalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAvailableMedals", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequestBody Body;
        
        public GetAvailableMedalsRequest() {
        }
        
        public GetAvailableMedalsRequest(MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAvailableMedalsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetAvailableMedalsRequestBody() {
        }
        
        public GetAvailableMedalsRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAvailableMedalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAvailableMedalsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponseBody Body;
        
        public GetAvailableMedalsResponse() {
        }
        
        public GetAvailableMedalsResponse(MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAvailableMedalsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> GetAvailableMedalsResult;
        
        public GetAvailableMedalsResponseBody() {
        }
        
        public GetAvailableMedalsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> GetAvailableMedalsResult) {
            this.GetAvailableMedalsResult = GetAvailableMedalsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAvailableMedalsTranslatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAvailableMedalsTranslated", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequestBody Body;
        
        public GetAvailableMedalsTranslatedRequest() {
        }
        
        public GetAvailableMedalsTranslatedRequest(MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAvailableMedalsTranslatedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string cultureName;
        
        public GetAvailableMedalsTranslatedRequestBody() {
        }
        
        public GetAvailableMedalsTranslatedRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID, string cultureName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
            this.cultureName = cultureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAvailableMedalsTranslatedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAvailableMedalsTranslatedResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponseBody Body;
        
        public GetAvailableMedalsTranslatedResponse() {
        }
        
        public GetAvailableMedalsTranslatedResponse(MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAvailableMedalsTranslatedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> GetAvailableMedalsTranslatedResult;
        
        public GetAvailableMedalsTranslatedResponseBody() {
        }
        
        public GetAvailableMedalsTranslatedResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> GetAvailableMedalsTranslatedResult) {
            this.GetAvailableMedalsTranslatedResult = GetAvailableMedalsTranslatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EarnMedalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EarnMedal", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.EarnMedalRequestBody Body;
        
        public EarnMedalRequest() {
        }
        
        public EarnMedalRequest(MotionsRace.WinPhone.MobileService.EarnMedalRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class EarnMedalRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int medalTypeID;
        
        public EarnMedalRequestBody() {
        }
        
        public EarnMedalRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.medalTypeID = medalTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EarnMedalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EarnMedalResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.EarnMedalResponseBody Body;
        
        public EarnMedalResponse() {
        }
        
        public EarnMedalResponse(MotionsRace.WinPhone.MobileService.EarnMedalResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class EarnMedalResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.MedalResult EarnMedalResult;
        
        public EarnMedalResponseBody() {
        }
        
        public EarnMedalResponseBody(MotionsRace.WinPhone.MobileService.MedalResult EarnMedalResult) {
            this.EarnMedalResult = EarnMedalResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EarnMedalTranslatedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EarnMedalTranslated", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequestBody Body;
        
        public EarnMedalTranslatedRequest() {
        }
        
        public EarnMedalTranslatedRequest(MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class EarnMedalTranslatedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int medalTypeID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string cultureName;
        
        public EarnMedalTranslatedRequestBody() {
        }
        
        public EarnMedalTranslatedRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, string cultureName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.medalTypeID = medalTypeID;
            this.cultureName = cultureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EarnMedalTranslatedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EarnMedalTranslatedResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponseBody Body;
        
        public EarnMedalTranslatedResponse() {
        }
        
        public EarnMedalTranslatedResponse(MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class EarnMedalTranslatedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.MedalResult EarnMedalTranslatedResult;
        
        public EarnMedalTranslatedResponseBody() {
        }
        
        public EarnMedalTranslatedResponseBody(MotionsRace.WinPhone.MobileService.MedalResult EarnMedalTranslatedResult) {
            this.EarnMedalTranslatedResult = EarnMedalTranslatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnearnMedalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnearnMedal", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UnearnMedalRequestBody Body;
        
        public UnearnMedalRequest() {
        }
        
        public UnearnMedalRequest(MotionsRace.WinPhone.MobileService.UnearnMedalRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class UnearnMedalRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int medalTypeID;
        
        public UnearnMedalRequestBody() {
        }
        
        public UnearnMedalRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.medalTypeID = medalTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnearnMedalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnearnMedalResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UnearnMedalResponseBody Body;
        
        public UnearnMedalResponse() {
        }
        
        public UnearnMedalResponse(MotionsRace.WinPhone.MobileService.UnearnMedalResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UnearnMedalResponseBody {
        
        public UnearnMedalResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNumberOfMedalsPerPersonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNumberOfMedalsPerPerson", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequestBody Body;
        
        public GetNumberOfMedalsPerPersonRequest() {
        }
        
        public GetNumberOfMedalsPerPersonRequest(MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetNumberOfMedalsPerPersonRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetNumberOfMedalsPerPersonRequestBody() {
        }
        
        public GetNumberOfMedalsPerPersonRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNumberOfMedalsPerPersonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNumberOfMedalsPerPersonResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponseBody Body;
        
        public GetNumberOfMedalsPerPersonResponse() {
        }
        
        public GetNumberOfMedalsPerPersonResponse(MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetNumberOfMedalsPerPersonResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult> GetNumberOfMedalsPerPersonResult;
        
        public GetNumberOfMedalsPerPersonResponseBody() {
        }
        
        public GetNumberOfMedalsPerPersonResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult> GetNumberOfMedalsPerPersonResult) {
            this.GetNumberOfMedalsPerPersonResult = GetNumberOfMedalsPerPersonResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyNewsStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyNewsStream", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequestBody Body;
        
        public GetMyNewsStreamRequest() {
        }
        
        public GetMyNewsStreamRequest(MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyNewsStreamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte maxNumberOfItems;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string cultureName;
        
        public GetMyNewsStreamRequestBody() {
        }
        
        public GetMyNewsStreamRequestBody(string applicationID, string loginID, string loginSecret, int raceID, byte maxNumberOfItems, string cultureName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.maxNumberOfItems = maxNumberOfItems;
            this.cultureName = cultureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyNewsStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyNewsStreamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponseBody Body;
        
        public GetMyNewsStreamResponse() {
        }
        
        public GetMyNewsStreamResponse(MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyNewsStreamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> GetMyNewsStreamResult;
        
        public GetMyNewsStreamResponseBody() {
        }
        
        public GetMyNewsStreamResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> GetMyNewsStreamResult) {
            this.GetMyNewsStreamResult = GetMyNewsStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamStreamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamStream", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamStreamRequestBody Body;
        
        public GetTeamStreamRequest() {
        }
        
        public GetTeamStreamRequest(MotionsRace.WinPhone.MobileService.GetTeamStreamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamStreamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int teamID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public byte maxNumberOfItems;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string cultureName;
        
        public GetTeamStreamRequestBody() {
        }
        
        public GetTeamStreamRequestBody(string applicationID, string loginID, string loginSecret, int teamID, byte maxNumberOfItems, string cultureName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamID = teamID;
            this.maxNumberOfItems = maxNumberOfItems;
            this.cultureName = cultureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamStreamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamStreamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamStreamResponseBody Body;
        
        public GetTeamStreamResponse() {
        }
        
        public GetTeamStreamResponse(MotionsRace.WinPhone.MobileService.GetTeamStreamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamStreamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> GetTeamStreamResult;
        
        public GetTeamStreamResponseBody() {
        }
        
        public GetTeamStreamResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> GetTeamStreamResult) {
            this.GetTeamStreamResult = GetTeamStreamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWhatsGoingOnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWhatsGoingOn", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequestBody Body;
        
        public GetWhatsGoingOnRequest() {
        }
        
        public GetWhatsGoingOnRequest(MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetWhatsGoingOnRequestBody {
        
        public GetWhatsGoingOnRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWhatsGoingOnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWhatsGoingOnResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponseBody Body;
        
        public GetWhatsGoingOnResponse() {
        }
        
        public GetWhatsGoingOnResponse(MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetWhatsGoingOnResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetWhatsGoingOnResult;
        
        public GetWhatsGoingOnResponseBody() {
        }
        
        public GetWhatsGoingOnResponseBody(string GetWhatsGoingOnResult) {
            this.GetWhatsGoingOnResult = GetWhatsGoingOnResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyRankingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyRanking", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyRankingRequestBody Body;
        
        public GetMyRankingRequest() {
        }
        
        public GetMyRankingRequest(MotionsRace.WinPhone.MobileService.GetMyRankingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyRankingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int PersonID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int RaceID;
        
        public GetMyRankingRequestBody() {
        }
        
        public GetMyRankingRequestBody(int PersonID, int RaceID) {
            this.PersonID = PersonID;
            this.RaceID = RaceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyRankingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyRankingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyRankingResponseBody Body;
        
        public GetMyRankingResponse() {
        }
        
        public GetMyRankingResponse(MotionsRace.WinPhone.MobileService.GetMyRankingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyRankingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetMyRankingResult;
        
        public GetMyRankingResponseBody() {
        }
        
        public GetMyRankingResponseBody(string GetMyRankingResult) {
            this.GetMyRankingResult = GetMyRankingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRacesAPersonCanLoginToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRacesAPersonCanLoginTo", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequestBody Body;
        
        public GetRacesAPersonCanLoginToRequest() {
        }
        
        public GetRacesAPersonCanLoginToRequest(MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRacesAPersonCanLoginToRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string hostName;
        
        public GetRacesAPersonCanLoginToRequestBody() {
        }
        
        public GetRacesAPersonCanLoginToRequestBody(string applicationID, string loginID, string loginSecret, string hostName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.hostName = hostName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRacesAPersonCanLoginToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRacesAPersonCanLoginToResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponseBody Body;
        
        public GetRacesAPersonCanLoginToResponse() {
        }
        
        public GetRacesAPersonCanLoginToResponse(MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRacesAPersonCanLoginToResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> GetRacesAPersonCanLoginToResult;
        
        public GetRacesAPersonCanLoginToResponseBody() {
        }
        
        public GetRacesAPersonCanLoginToResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> GetRacesAPersonCanLoginToResult) {
            this.GetRacesAPersonCanLoginToResult = GetRacesAPersonCanLoginToResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRacesAvailabilityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRacesAvailability", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequestBody Body;
        
        public GetRacesAvailabilityRequest() {
        }
        
        public GetRacesAvailabilityRequest(MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRacesAvailabilityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        public GetRacesAvailabilityRequestBody() {
        }
        
        public GetRacesAvailabilityRequestBody(string applicationID, string loginID, string loginSecret) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRacesAvailabilityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRacesAvailabilityResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponseBody Body;
        
        public GetRacesAvailabilityResponse() {
        }
        
        public GetRacesAvailabilityResponse(MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRacesAvailabilityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.RacesAvailabilityResult GetRacesAvailabilityResult;
        
        public GetRacesAvailabilityResponseBody() {
        }
        
        public GetRacesAvailabilityResponseBody(MotionsRace.WinPhone.MobileService.RacesAvailabilityResult GetRacesAvailabilityResult) {
            this.GetRacesAvailabilityResult = GetRacesAvailabilityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthenticateLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AuthenticateLogin", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AuthenticateLoginRequestBody Body;
        
        public AuthenticateLoginRequest() {
        }
        
        public AuthenticateLoginRequest(MotionsRace.WinPhone.MobileService.AuthenticateLoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AuthenticateLoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.LoginDetails loginDetails;
        
        public AuthenticateLoginRequestBody() {
        }
        
        public AuthenticateLoginRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.LoginDetails loginDetails) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.loginDetails = loginDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthenticateLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AuthenticateLoginResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AuthenticateLoginResponseBody Body;
        
        public AuthenticateLoginResponse() {
        }
        
        public AuthenticateLoginResponse(MotionsRace.WinPhone.MobileService.AuthenticateLoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AuthenticateLoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.AuthenticationResult AuthenticateLoginResult;
        
        public AuthenticateLoginResponseBody() {
        }
        
        public AuthenticateLoginResponseBody(MotionsRace.WinPhone.MobileService.AuthenticationResult AuthenticateLoginResult) {
            this.AuthenticateLoginResult = AuthenticateLoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceByRaceKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRaceByRaceKey", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequestBody Body;
        
        public GetRaceByRaceKeyRequest() {
        }
        
        public GetRaceByRaceKeyRequest(MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceByRaceKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string intranetSecretKey;
        
        public GetRaceByRaceKeyRequestBody() {
        }
        
        public GetRaceByRaceKeyRequestBody(string applicationID, string loginID, string loginSecret, string intranetSecretKey) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.intranetSecretKey = intranetSecretKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceByRaceKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRaceByRaceKeyResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponseBody Body;
        
        public GetRaceByRaceKeyResponse() {
        }
        
        public GetRaceByRaceKeyResponse(MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceByRaceKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult GetRaceByRaceKeyResult;
        
        public GetRaceByRaceKeyResponseBody() {
        }
        
        public GetRaceByRaceKeyResponseBody(MotionsRace.WinPhone.MobileService.RaceDetailsResult GetRaceByRaceKeyResult) {
            this.GetRaceByRaceKeyResult = GetRaceByRaceKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizeRaceAccessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AuthorizeRaceAccess", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequestBody Body;
        
        public AuthorizeRaceAccessRequest() {
        }
        
        public AuthorizeRaceAccessRequest(MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AuthorizeRaceAccessRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public AuthorizeRaceAccessRequestBody() {
        }
        
        public AuthorizeRaceAccessRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizeRaceAccessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AuthorizeRaceAccessResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponseBody Body;
        
        public AuthorizeRaceAccessResponse() {
        }
        
        public AuthorizeRaceAccessResponse(MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AuthorizeRaceAccessResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult AuthorizeRaceAccessResult;
        
        public AuthorizeRaceAccessResponseBody() {
        }
        
        public AuthorizeRaceAccessResponseBody(MotionsRace.WinPhone.MobileService.RaceDetailsResult AuthorizeRaceAccessResult) {
            this.AuthorizeRaceAccessResult = AuthorizeRaceAccessResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBrandSpecificTranslationStringsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetBrandSpecificTranslationStrings", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequestBody Body;
        
        public GetBrandSpecificTranslationStringsRequest() {
        }
        
        public GetBrandSpecificTranslationStringsRequest(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetBrandSpecificTranslationStringsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetBrandSpecificTranslationStringsRequestBody() {
        }
        
        public GetBrandSpecificTranslationStringsRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBrandSpecificTranslationStringsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetBrandSpecificTranslationStringsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponseBody Body;
        
        public GetBrandSpecificTranslationStringsResponse() {
        }
        
        public GetBrandSpecificTranslationStringsResponse(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetBrandSpecificTranslationStringsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString> GetBrandSpecificTranslationStringsResult;
        
        public GetBrandSpecificTranslationStringsResponseBody() {
        }
        
        public GetBrandSpecificTranslationStringsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString> GetBrandSpecificTranslationStringsResult) {
            this.GetBrandSpecificTranslationStringsResult = GetBrandSpecificTranslationStringsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBrandSpecificTranslationStringsIOSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetBrandSpecificTranslationStringsIOS", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequestBody Body;
        
        public GetBrandSpecificTranslationStringsIOSRequest() {
        }
        
        public GetBrandSpecificTranslationStringsIOSRequest(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetBrandSpecificTranslationStringsIOSRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetBrandSpecificTranslationStringsIOSRequestBody() {
        }
        
        public GetBrandSpecificTranslationStringsIOSRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetBrandSpecificTranslationStringsIOSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetBrandSpecificTranslationStringsIOSResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponseBody Body;
        
        public GetBrandSpecificTranslationStringsIOSResponse() {
        }
        
        public GetBrandSpecificTranslationStringsIOSResponse(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetBrandSpecificTranslationStringsIOSResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.ArrayOfString GetBrandSpecificTranslationStringsIOSResult;
        
        public GetBrandSpecificTranslationStringsIOSResponseBody() {
        }
        
        public GetBrandSpecificTranslationStringsIOSResponseBody(MotionsRace.WinPhone.MobileService.ArrayOfString GetBrandSpecificTranslationStringsIOSResult) {
            this.GetBrandSpecificTranslationStringsIOSResult = GetBrandSpecificTranslationStringsIOSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTraining", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingRequestBody Body;
        
        public GetTrainingRequest() {
        }
        
        public GetTrainingRequest(MotionsRace.WinPhone.MobileService.GetTrainingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int trainingID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int raceID;
        
        public GetTrainingRequestBody() {
        }
        
        public GetTrainingRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int trainingID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.trainingID = trainingID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTrainingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingResponseBody Body;
        
        public GetTrainingResponse() {
        }
        
        public GetTrainingResponse(MotionsRace.WinPhone.MobileService.GetTrainingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.Training GetTrainingResult;
        
        public GetTrainingResponseBody() {
        }
        
        public GetTrainingResponseBody(MotionsRace.WinPhone.MobileService.Training GetTrainingResult) {
            this.GetTrainingResult = GetTrainingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTrainingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteTraining", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeleteTrainingRequestBody Body;
        
        public DeleteTrainingRequest() {
        }
        
        public DeleteTrainingRequest(MotionsRace.WinPhone.MobileService.DeleteTrainingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class DeleteTrainingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int trainingID;
        
        public DeleteTrainingRequestBody() {
        }
        
        public DeleteTrainingRequestBody(string applicationID, string loginID, string loginSecret, int trainingID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.trainingID = trainingID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteTrainingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteTrainingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeleteTrainingResponseBody Body;
        
        public DeleteTrainingResponse() {
        }
        
        public DeleteTrainingResponse(MotionsRace.WinPhone.MobileService.DeleteTrainingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeleteTrainingResponseBody {
        
        public DeleteTrainingResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveTrainingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveTraining", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveTrainingRequestBody Body;
        
        public SaveTrainingRequest() {
        }
        
        public SaveTrainingRequest(MotionsRace.WinPhone.MobileService.SaveTrainingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SaveTrainingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.Training training;
        
        public SaveTrainingRequestBody() {
        }
        
        public SaveTrainingRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Training training) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.training = training;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveTrainingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveTrainingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveTrainingResponseBody Body;
        
        public SaveTrainingResponse() {
        }
        
        public SaveTrainingResponse(MotionsRace.WinPhone.MobileService.SaveTrainingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SaveTrainingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Nullable<int> SaveTrainingResult;
        
        public SaveTrainingResponseBody() {
        }
        
        public SaveTrainingResponseBody(System.Nullable<int> SaveTrainingResult) {
            this.SaveTrainingResult = SaveTrainingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTotalNumberOfPointsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTotalNumberOfPoints", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequestBody Body;
        
        public GetTotalNumberOfPointsRequest() {
        }
        
        public GetTotalNumberOfPointsRequest(MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTotalNumberOfPointsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetTotalNumberOfPointsRequestBody() {
        }
        
        public GetTotalNumberOfPointsRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTotalNumberOfPointsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTotalNumberOfPointsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponseBody Body;
        
        public GetTotalNumberOfPointsResponse() {
        }
        
        public GetTotalNumberOfPointsResponse(MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTotalNumberOfPointsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetTotalNumberOfPointsResult;
        
        public GetTotalNumberOfPointsResponseBody() {
        }
        
        public GetTotalNumberOfPointsResponseBody(int GetTotalNumberOfPointsResult) {
            this.GetTotalNumberOfPointsResult = GetTotalNumberOfPointsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingForCalendarRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTrainingForCalendar", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequestBody Body;
        
        public GetTrainingForCalendarRequest() {
        }
        
        public GetTrainingForCalendarRequest(MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingForCalendarRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime startDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime endDate;
        
        public GetTrainingForCalendarRequestBody() {
        }
        
        public GetTrainingForCalendarRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int personID, int raceID, System.DateTime startDate, System.DateTime endDate) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.personID = personID;
            this.raceID = raceID;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingForCalendarResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTrainingForCalendarResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponseBody Body;
        
        public GetTrainingForCalendarResponse() {
        }
        
        public GetTrainingForCalendarResponse(MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingForCalendarResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult> GetTrainingForCalendarResult;
        
        public GetTrainingForCalendarResponseBody() {
        }
        
        public GetTrainingForCalendarResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult> GetTrainingForCalendarResult) {
            this.GetTrainingForCalendarResult = GetTrainingForCalendarResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTrainingTypes", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingTypesRequestBody Body;
        
        public GetTrainingTypesRequest() {
        }
        
        public GetTrainingTypesRequest(MotionsRace.WinPhone.MobileService.GetTrainingTypesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingTypesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetTrainingTypesRequestBody() {
        }
        
        public GetTrainingTypesRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTrainingTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTrainingTypesResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTrainingTypesResponseBody Body;
        
        public GetTrainingTypesResponse() {
        }
        
        public GetTrainingTypesResponse(MotionsRace.WinPhone.MobileService.GetTrainingTypesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTrainingTypesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> GetTrainingTypesResult;
        
        public GetTrainingTypesResponseBody() {
        }
        
        public GetTrainingTypesResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> GetTrainingTypesResult) {
            this.GetTrainingTypesResult = GetTrainingTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMostRecentTrainingInTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMostRecentTrainingInTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequestBody Body;
        
        public GetMostRecentTrainingInTeamRequest() {
        }
        
        public GetMostRecentTrainingInTeamRequest(MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMostRecentTrainingInTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int teamID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int numberOfItems;
        
        public GetMostRecentTrainingInTeamRequestBody() {
        }
        
        public GetMostRecentTrainingInTeamRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int teamID, int numberOfItems) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.teamID = teamID;
            this.numberOfItems = numberOfItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMostRecentTrainingInTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMostRecentTrainingInTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponseBody Body;
        
        public GetMostRecentTrainingInTeamResponse() {
        }
        
        public GetMostRecentTrainingInTeamResponse(MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMostRecentTrainingInTeamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult> GetMostRecentTrainingInTeamResult;
        
        public GetMostRecentTrainingInTeamResponseBody() {
        }
        
        public GetMostRecentTrainingInTeamResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult> GetMostRecentTrainingInTeamResult) {
            this.GetMostRecentTrainingInTeamResult = GetMostRecentTrainingInTeamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveDailyActivityScoresRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveDailyActivityScores", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequestBody Body;
        
        public SaveDailyActivityScoresRequest() {
        }
        
        public SaveDailyActivityScoresRequest(MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SaveDailyActivityScoresRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string RaceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores;
        
        public SaveDailyActivityScoresRequestBody() {
        }
        
        public SaveDailyActivityScoresRequestBody(string applicationID, string loginID, string RaceID, string loginSecret, System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.RaceID = RaceID;
            this.loginSecret = loginSecret;
            this.scores = scores;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveDailyActivityScoresResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveDailyActivityScoresResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponseBody Body;
        
        public SaveDailyActivityScoresResponse() {
        }
        
        public SaveDailyActivityScoresResponse(MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SaveDailyActivityScoresResponseBody {
        
        public SaveDailyActivityScoresResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestSubTeamsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestSubTeams", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequestBody Body;
        
        public GetHighscores_BestSubTeamsRequest() {
        }
        
        public GetHighscores_BestSubTeamsRequest(MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestSubTeamsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> parentTeamID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool filterByMaxTeamsPerListValue;
        
        public GetHighscores_BestSubTeamsRequestBody() {
        }
        
        public GetHighscores_BestSubTeamsRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.Nullable<int> parentTeamID, bool filterByMaxTeamsPerListValue) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
            this.parentTeamID = parentTeamID;
            this.filterByMaxTeamsPerListValue = filterByMaxTeamsPerListValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestSubTeamsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestSubTeamsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponseBody Body;
        
        public GetHighscores_BestSubTeamsResponse() {
        }
        
        public GetHighscores_BestSubTeamsResponse(MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestSubTeamsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult> GetHighscores_BestSubTeamsResult;
        
        public GetHighscores_BestSubTeamsResponseBody() {
        }
        
        public GetHighscores_BestSubTeamsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult> GetHighscores_BestSubTeamsResult) {
            this.GetHighscores_BestSubTeamsResult = GetHighscores_BestSubTeamsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestPersonsInTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestPersonsInTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequestBody Body;
        
        public GetHighscores_BestPersonsInTeamRequest() {
        }
        
        public GetHighscores_BestPersonsInTeamRequest(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestPersonsInTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int teamID;
        
        public GetHighscores_BestPersonsInTeamRequestBody() {
        }
        
        public GetHighscores_BestPersonsInTeamRequestBody(string applicationID, string loginID, string loginSecret, int teamID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamID = teamID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestPersonsInTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestPersonsInTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponseBody Body;
        
        public GetHighscores_BestPersonsInTeamResponse() {
        }
        
        public GetHighscores_BestPersonsInTeamResponse(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestPersonsInTeamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> GetHighscores_BestPersonsInTeamResult;
        
        public GetHighscores_BestPersonsInTeamResponseBody() {
        }
        
        public GetHighscores_BestPersonsInTeamResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> GetHighscores_BestPersonsInTeamResult) {
            this.GetHighscores_BestPersonsInTeamResult = GetHighscores_BestPersonsInTeamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRisingStarOfTheWeekRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRisingStarOfTheWeek", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequestBody Body;
        
        public GetRisingStarOfTheWeekRequest() {
        }
        
        public GetRisingStarOfTheWeekRequest(MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRisingStarOfTheWeekRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime todaysDateTime;
        
        public GetRisingStarOfTheWeekRequestBody() {
        }
        
        public GetRisingStarOfTheWeekRequestBody(string applicationID, string loginID, string loginSecret, int raceId, System.DateTime todaysDateTime) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceId = raceId;
            this.todaysDateTime = todaysDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRisingStarOfTheWeekResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRisingStarOfTheWeekResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponseBody Body;
        
        public GetRisingStarOfTheWeekResponse() {
        }
        
        public GetRisingStarOfTheWeekResponse(MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRisingStarOfTheWeekResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.PersonScoreResult GetRisingStarOfTheWeekResult;
        
        public GetRisingStarOfTheWeekResponseBody() {
        }
        
        public GetRisingStarOfTheWeekResponseBody(MotionsRace.WinPhone.MobileService.PersonScoreResult GetRisingStarOfTheWeekResult) {
            this.GetRisingStarOfTheWeekResult = GetRisingStarOfTheWeekResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestPersonsInMyListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestPersonsInMyList", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequestBody Body;
        
        public GetHighscores_BestPersonsInMyListRequest() {
        }
        
        public GetHighscores_BestPersonsInMyListRequest(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestPersonsInMyListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetHighscores_BestPersonsInMyListRequestBody() {
        }
        
        public GetHighscores_BestPersonsInMyListRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHighscores_BestPersonsInMyListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetHighscores_BestPersonsInMyListResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponseBody Body;
        
        public GetHighscores_BestPersonsInMyListResponse() {
        }
        
        public GetHighscores_BestPersonsInMyListResponse(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetHighscores_BestPersonsInMyListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> GetHighscores_BestPersonsInMyListResult;
        
        public GetHighscores_BestPersonsInMyListResponseBody() {
        }
        
        public GetHighscores_BestPersonsInMyListResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> GetHighscores_BestPersonsInMyListResult) {
            this.GetHighscores_BestPersonsInMyListResult = GetHighscores_BestPersonsInMyListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsMyFriendRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsMyFriend", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.IsMyFriendRequestBody Body;
        
        public IsMyFriendRequest() {
        }
        
        public IsMyFriendRequest(MotionsRace.WinPhone.MobileService.IsMyFriendRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class IsMyFriendRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public IsMyFriendRequestBody() {
        }
        
        public IsMyFriendRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsMyFriendResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsMyFriendResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.IsMyFriendResponseBody Body;
        
        public IsMyFriendResponse() {
        }
        
        public IsMyFriendResponse(MotionsRace.WinPhone.MobileService.IsMyFriendResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class IsMyFriendResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool IsMyFriendResult;
        
        public IsMyFriendResponseBody() {
        }
        
        public IsMyFriendResponseBody(bool IsMyFriendResult) {
            this.IsMyFriendResult = IsMyFriendResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyFriendsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyFriends", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyFriendsRequestBody Body;
        
        public GetMyFriendsRequest() {
        }
        
        public GetMyFriendsRequest(MotionsRace.WinPhone.MobileService.GetMyFriendsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyFriendsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetMyFriendsRequestBody() {
        }
        
        public GetMyFriendsRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyFriendsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyFriendsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyFriendsResponseBody Body;
        
        public GetMyFriendsResponse() {
        }
        
        public GetMyFriendsResponse(MotionsRace.WinPhone.MobileService.GetMyFriendsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyFriendsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> GetMyFriendsResult;
        
        public GetMyFriendsResponseBody() {
        }
        
        public GetMyFriendsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> GetMyFriendsResult) {
            this.GetMyFriendsResult = GetMyFriendsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFriendRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFriend", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.RemoveFriendRequestBody Body;
        
        public RemoveFriendRequest() {
        }
        
        public RemoveFriendRequest(MotionsRace.WinPhone.MobileService.RemoveFriendRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class RemoveFriendRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public RemoveFriendRequestBody() {
        }
        
        public RemoveFriendRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveFriendResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RemoveFriendResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.RemoveFriendResponseBody Body;
        
        public RemoveFriendResponse() {
        }
        
        public RemoveFriendResponse(MotionsRace.WinPhone.MobileService.RemoveFriendResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RemoveFriendResponseBody {
        
        public RemoveFriendResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddFriendsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddFriends", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AddFriendsRequestBody Body;
        
        public AddFriendsRequest() {
        }
        
        public AddFriendsRequest(MotionsRace.WinPhone.MobileService.AddFriendsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AddFriendsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs;
        
        public AddFriendsRequestBody() {
        }
        
        public AddFriendsRequestBody(string applicationID, string loginID, string loginSecret, int raceID, MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.personIDs = personIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddFriendsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddFriendsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AddFriendsResponseBody Body;
        
        public AddFriendsResponse() {
        }
        
        public AddFriendsResponse(MotionsRace.WinPhone.MobileService.AddFriendsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AddFriendsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AddFriendsResult;
        
        public AddFriendsResponseBody() {
        }
        
        public AddFriendsResponseBody(bool AddFriendsResult) {
            this.AddFriendsResult = AddFriendsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMostRecentTeamActivityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMostRecentTeamActivity", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequestBody Body;
        
        public GetMostRecentTeamActivityRequest() {
        }
        
        public GetMostRecentTeamActivityRequest(MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMostRecentTeamActivityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int maxNumberOfItems;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int teamID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string cultureName;
        
        public GetMostRecentTeamActivityRequestBody() {
        }
        
        public GetMostRecentTeamActivityRequestBody(string applicationID, string loginID, string loginSecret, int maxNumberOfItems, int teamID, string cultureName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.maxNumberOfItems = maxNumberOfItems;
            this.teamID = teamID;
            this.cultureName = cultureName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMostRecentTeamActivityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMostRecentTeamActivityResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponseBody Body;
        
        public GetMostRecentTeamActivityResponse() {
        }
        
        public GetMostRecentTeamActivityResponse(MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMostRecentTeamActivityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream> GetMostRecentTeamActivityResult;
        
        public GetMostRecentTeamActivityResponseBody() {
        }
        
        public GetMostRecentTeamActivityResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream> GetMostRecentTeamActivityResult) {
            this.GetMostRecentTeamActivityResult = GetMostRecentTeamActivityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllPersonsOfTheTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllPersonsOfTheTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequestBody Body;
        
        public GetAllPersonsOfTheTeamRequest() {
        }
        
        public GetAllPersonsOfTheTeamRequest(MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAllPersonsOfTheTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int teamID;
        
        public GetAllPersonsOfTheTeamRequestBody() {
        }
        
        public GetAllPersonsOfTheTeamRequestBody(string applicationID, string loginID, string loginSecret, int teamID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamID = teamID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllPersonsOfTheTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllPersonsOfTheTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponseBody Body;
        
        public GetAllPersonsOfTheTeamResponse() {
        }
        
        public GetAllPersonsOfTheTeamResponse(MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetAllPersonsOfTheTeamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> GetAllPersonsOfTheTeamResult;
        
        public GetAllPersonsOfTheTeamResponseBody() {
        }
        
        public GetAllPersonsOfTheTeamResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> GetAllPersonsOfTheTeamResult) {
            this.GetAllPersonsOfTheTeamResult = GetAllPersonsOfTheTeamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamInfo", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamInfoRequestBody Body;
        
        public GetTeamInfoRequest() {
        }
        
        public GetTeamInfoRequest(MotionsRace.WinPhone.MobileService.GetTeamInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int teamID;
        
        public GetTeamInfoRequestBody() {
        }
        
        public GetTeamInfoRequestBody(string applicationID, string loginID, string loginSecret, int teamID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamID = teamID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamInfoResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamInfoResponseBody Body;
        
        public GetTeamInfoResponse() {
        }
        
        public GetTeamInfoResponse(MotionsRace.WinPhone.MobileService.GetTeamInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.TeamInfoResult GetTeamInfoResult;
        
        public GetTeamInfoResponseBody() {
        }
        
        public GetTeamInfoResponseBody(MotionsRace.WinPhone.MobileService.TeamInfoResult GetTeamInfoResult) {
            this.GetTeamInfoResult = GetTeamInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateTeamRequestBody Body;
        
        public UpdateTeamRequest() {
        }
        
        public UpdateTeamRequest(MotionsRace.WinPhone.MobileService.UpdateTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class UpdateTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult;
        
        public UpdateTeamRequestBody() {
        }
        
        public UpdateTeamRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamInfoResult = teamInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateTeamResponseBody Body;
        
        public UpdateTeamResponse() {
        }
        
        public UpdateTeamResponse(MotionsRace.WinPhone.MobileService.UpdateTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateTeamResponseBody {
        
        public UpdateTeamResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsByRaceIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsByRaceID", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequestBody Body;
        
        public GetTeamsByRaceIDRequest() {
        }
        
        public GetTeamsByRaceIDRequest(MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsByRaceIDRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetTeamsByRaceIDRequestBody() {
        }
        
        public GetTeamsByRaceIDRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsByRaceIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsByRaceIDResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponseBody Body;
        
        public GetTeamsByRaceIDResponse() {
        }
        
        public GetTeamsByRaceIDResponse(MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsByRaceIDResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsByRaceIDResult;
        
        public GetTeamsByRaceIDResponseBody() {
        }
        
        public GetTeamsByRaceIDResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsByRaceIDResult) {
            this.GetTeamsByRaceIDResult = GetTeamsByRaceIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckIfPersonIsManagerOfTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckIfPersonIsManagerOfTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequestBody Body;
        
        public CheckIfPersonIsManagerOfTeamRequest() {
        }
        
        public CheckIfPersonIsManagerOfTeamRequest(MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class CheckIfPersonIsManagerOfTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int teamID;
        
        public CheckIfPersonIsManagerOfTeamRequestBody() {
        }
        
        public CheckIfPersonIsManagerOfTeamRequestBody(string applicationID, string loginID, string loginSecret, int personID, int teamID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.teamID = teamID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckIfPersonIsManagerOfTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckIfPersonIsManagerOfTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponseBody Body;
        
        public CheckIfPersonIsManagerOfTeamResponse() {
        }
        
        public CheckIfPersonIsManagerOfTeamResponse(MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class CheckIfPersonIsManagerOfTeamResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool CheckIfPersonIsManagerOfTeamResult;
        
        public CheckIfPersonIsManagerOfTeamResponseBody() {
        }
        
        public CheckIfPersonIsManagerOfTeamResponseBody(bool CheckIfPersonIsManagerOfTeamResult) {
            this.CheckIfPersonIsManagerOfTeamResult = CheckIfPersonIsManagerOfTeamResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsPersonIsAManagerOfRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsPersonIsAManagerOf", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequestBody Body;
        
        public GetTeamsPersonIsAManagerOfRequest() {
        }
        
        public GetTeamsPersonIsAManagerOfRequest(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsPersonIsAManagerOfRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetTeamsPersonIsAManagerOfRequestBody() {
        }
        
        public GetTeamsPersonIsAManagerOfRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsPersonIsAManagerOfResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsPersonIsAManagerOfResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponseBody Body;
        
        public GetTeamsPersonIsAManagerOfResponse() {
        }
        
        public GetTeamsPersonIsAManagerOfResponse(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsPersonIsAManagerOfResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsPersonIsAManagerOfResult;
        
        public GetTeamsPersonIsAManagerOfResponseBody() {
        }
        
        public GetTeamsPersonIsAManagerOfResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsPersonIsAManagerOfResult) {
            this.GetTeamsPersonIsAManagerOfResult = GetTeamsPersonIsAManagerOfResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsPersonIsAMemberOfRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsPersonIsAMemberOf", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequestBody Body;
        
        public GetTeamsPersonIsAMemberOfRequest() {
        }
        
        public GetTeamsPersonIsAMemberOfRequest(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsPersonIsAMemberOfRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetTeamsPersonIsAMemberOfRequestBody() {
        }
        
        public GetTeamsPersonIsAMemberOfRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamsPersonIsAMemberOfResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamsPersonIsAMemberOfResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponseBody Body;
        
        public GetTeamsPersonIsAMemberOfResponse() {
        }
        
        public GetTeamsPersonIsAMemberOfResponse(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetTeamsPersonIsAMemberOfResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsPersonIsAMemberOfResult;
        
        public GetTeamsPersonIsAMemberOfResponseBody() {
        }
        
        public GetTeamsPersonIsAMemberOfResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetTeamsPersonIsAMemberOfResult) {
            this.GetTeamsPersonIsAMemberOfResult = GetTeamsPersonIsAMemberOfResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyTeamsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyTeams", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyTeamsRequestBody Body;
        
        public GetMyTeamsRequest() {
        }
        
        public GetMyTeamsRequest(MotionsRace.WinPhone.MobileService.GetMyTeamsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyTeamsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetMyTeamsRequestBody() {
        }
        
        public GetMyTeamsRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyTeamsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyTeamsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyTeamsResponseBody Body;
        
        public GetMyTeamsResponse() {
        }
        
        public GetMyTeamsResponse(MotionsRace.WinPhone.MobileService.GetMyTeamsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyTeamsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetMyTeamsResult;
        
        public GetMyTeamsResponseBody() {
        }
        
        public GetMyTeamsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> GetMyTeamsResult) {
            this.GetMyTeamsResult = GetMyTeamsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTeamPictureURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTeamPictureURL", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequestBody Body;
        
        public UpdateTeamPictureURLRequest() {
        }
        
        public UpdateTeamPictureURLRequest(MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class UpdateTeamPictureURLRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int teamID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string pictureURL;
        
        public UpdateTeamPictureURLRequestBody() {
        }
        
        public UpdateTeamPictureURLRequestBody(string applicationID, string loginID, string loginSecret, int teamID, string pictureURL) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.teamID = teamID;
            this.pictureURL = pictureURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateTeamPictureURLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateTeamPictureURLResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponseBody Body;
        
        public UpdateTeamPictureURLResponse() {
        }
        
        public UpdateTeamPictureURLResponse(MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateTeamPictureURLResponseBody {
        
        public UpdateTeamPictureURLResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNumberOfUnreadPersonalMessagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNumberOfUnreadPersonalMessages", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequestBody Body;
        
        public GetNumberOfUnreadPersonalMessagesRequest() {
        }
        
        public GetNumberOfUnreadPersonalMessagesRequest(MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetNumberOfUnreadPersonalMessagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetNumberOfUnreadPersonalMessagesRequestBody() {
        }
        
        public GetNumberOfUnreadPersonalMessagesRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNumberOfUnreadPersonalMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNumberOfUnreadPersonalMessagesResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponseBody Body;
        
        public GetNumberOfUnreadPersonalMessagesResponse() {
        }
        
        public GetNumberOfUnreadPersonalMessagesResponse(MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetNumberOfUnreadPersonalMessagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetNumberOfUnreadPersonalMessagesResult;
        
        public GetNumberOfUnreadPersonalMessagesResponseBody() {
        }
        
        public GetNumberOfUnreadPersonalMessagesResponseBody(int GetNumberOfUnreadPersonalMessagesResult) {
            this.GetNumberOfUnreadPersonalMessagesResult = GetNumberOfUnreadPersonalMessagesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkPersonalMessagesAsReadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkPersonalMessagesAsRead", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequestBody Body;
        
        public MarkPersonalMessagesAsReadRequest() {
        }
        
        public MarkPersonalMessagesAsReadRequest(MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class MarkPersonalMessagesAsReadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int lastReadPersonalMessageID;
        
        public MarkPersonalMessagesAsReadRequestBody() {
        }
        
        public MarkPersonalMessagesAsReadRequestBody(string applicationID, string loginID, string loginSecret, int lastReadPersonalMessageID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.lastReadPersonalMessageID = lastReadPersonalMessageID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkPersonalMessagesAsReadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkPersonalMessagesAsReadResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponseBody Body;
        
        public MarkPersonalMessagesAsReadResponse() {
        }
        
        public MarkPersonalMessagesAsReadResponse(MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class MarkPersonalMessagesAsReadResponseBody {
        
        public MarkPersonalMessagesAsReadResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkOrUnmarkPersonalMessageAsReadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkOrUnmarkPersonalMessageAsRead", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequestBody Body;
        
        public MarkOrUnmarkPersonalMessageAsReadRequest() {
        }
        
        public MarkOrUnmarkPersonalMessageAsReadRequest(MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class MarkOrUnmarkPersonalMessageAsReadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personalMessageID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool isRead;
        
        public MarkOrUnmarkPersonalMessageAsReadRequestBody() {
        }
        
        public MarkOrUnmarkPersonalMessageAsReadRequestBody(string applicationID, string loginID, string loginSecret, int personalMessageID, bool isRead) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personalMessageID = personalMessageID;
            this.isRead = isRead;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkOrUnmarkPersonalMessageAsReadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkOrUnmarkPersonalMessageAsReadResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponseBody Body;
        
        public MarkOrUnmarkPersonalMessageAsReadResponse() {
        }
        
        public MarkOrUnmarkPersonalMessageAsReadResponse(MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class MarkOrUnmarkPersonalMessageAsReadResponseBody {
        
        public MarkOrUnmarkPersonalMessageAsReadResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchivePersonalMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ArchivePersonalMessage", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequestBody Body;
        
        public ArchivePersonalMessageRequest() {
        }
        
        public ArchivePersonalMessageRequest(MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ArchivePersonalMessageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personalMessageID;
        
        public ArchivePersonalMessageRequestBody() {
        }
        
        public ArchivePersonalMessageRequestBody(string applicationID, string loginID, string loginSecret, int personalMessageID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personalMessageID = personalMessageID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchivePersonalMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ArchivePersonalMessageResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponseBody Body;
        
        public ArchivePersonalMessageResponse() {
        }
        
        public ArchivePersonalMessageResponse(MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ArchivePersonalMessageResponseBody {
        
        public ArchivePersonalMessageResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPersonalMessagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPersonalMessages", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequestBody Body;
        
        public GetPersonalMessagesRequest() {
        }
        
        public GetPersonalMessagesRequest(MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPersonalMessagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int pageNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pageSize;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool archive;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool getOnlyPublicMessages;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int raceID;
        
        public GetPersonalMessagesRequestBody() {
        }
        
        public GetPersonalMessagesRequestBody(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, bool archive, bool getOnlyPublicMessages, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.pageNumber = pageNumber;
            this.pageSize = pageSize;
            this.archive = archive;
            this.getOnlyPublicMessages = getOnlyPublicMessages;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPersonalMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPersonalMessagesResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponseBody Body;
        
        public GetPersonalMessagesResponse() {
        }
        
        public GetPersonalMessagesResponse(MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPersonalMessagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> GetPersonalMessagesResult;
        
        public GetPersonalMessagesResponseBody() {
        }
        
        public GetPersonalMessagesResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> GetPersonalMessagesResult) {
            this.GetPersonalMessagesResult = GetPersonalMessagesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSentPersonalMessagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSentPersonalMessages", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequestBody Body;
        
        public GetSentPersonalMessagesRequest() {
        }
        
        public GetSentPersonalMessagesRequest(MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetSentPersonalMessagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int pageNumber;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int pageSize;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int raceID;
        
        public GetSentPersonalMessagesRequestBody() {
        }
        
        public GetSentPersonalMessagesRequestBody(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.pageNumber = pageNumber;
            this.pageSize = pageSize;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSentPersonalMessagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSentPersonalMessagesResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponseBody Body;
        
        public GetSentPersonalMessagesResponse() {
        }
        
        public GetSentPersonalMessagesResponse(MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetSentPersonalMessagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> GetSentPersonalMessagesResult;
        
        public GetSentPersonalMessagesResponseBody() {
        }
        
        public GetSentPersonalMessagesResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> GetSentPersonalMessagesResult) {
            this.GetSentPersonalMessagesResult = GetSentPersonalMessagesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendPersonalMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendPersonalMessage", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SendPersonalMessageRequestBody Body;
        
        public SendPersonalMessageRequest() {
        }
        
        public SendPersonalMessageRequest(MotionsRace.WinPhone.MobileService.SendPersonalMessageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SendPersonalMessageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int toPersonID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string messageText;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool isPublic;
        
        public SendPersonalMessageRequestBody() {
        }
        
        public SendPersonalMessageRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int toPersonID, string messageText, bool isPublic) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.toPersonID = toPersonID;
            this.messageText = messageText;
            this.isPublic = isPublic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendPersonalMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendPersonalMessageResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SendPersonalMessageResponseBody Body;
        
        public SendPersonalMessageResponse() {
        }
        
        public SendPersonalMessageResponse(MotionsRace.WinPhone.MobileService.SendPersonalMessageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SendPersonalMessageResponseBody {
        
        public SendPersonalMessageResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeletePersonalMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeletePersonalMessage", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequestBody Body;
        
        public DeletePersonalMessageRequest() {
        }
        
        public DeletePersonalMessageRequest(MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class DeletePersonalMessageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personalMessageID;
        
        public DeletePersonalMessageRequestBody() {
        }
        
        public DeletePersonalMessageRequestBody(string applicationID, string loginID, string loginSecret, int personalMessageID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personalMessageID = personalMessageID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeletePersonalMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeletePersonalMessageResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponseBody Body;
        
        public DeletePersonalMessageResponse() {
        }
        
        public DeletePersonalMessageResponse(MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeletePersonalMessageResponseBody {
        
        public DeletePersonalMessageResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateReplyToMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateReplyToMessage", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequestBody Body;
        
        public CreateReplyToMessageRequest() {
        }
        
        public CreateReplyToMessageRequest(MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class CreateReplyToMessageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personalMessageID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int columnWidth;
        
        public CreateReplyToMessageRequestBody() {
        }
        
        public CreateReplyToMessageRequestBody(string applicationID, string loginID, string loginSecret, int personalMessageID, int columnWidth) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personalMessageID = personalMessageID;
            this.columnWidth = columnWidth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateReplyToMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateReplyToMessageResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponseBody Body;
        
        public CreateReplyToMessageResponse() {
        }
        
        public CreateReplyToMessageResponse(MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class CreateReplyToMessageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string CreateReplyToMessageResult;
        
        public CreateReplyToMessageResponseBody() {
        }
        
        public CreateReplyToMessageResponseBody(string CreateReplyToMessageResult) {
            this.CreateReplyToMessageResult = CreateReplyToMessageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetThreadsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetThreads", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetThreadsRequestBody Body;
        
        public GetThreadsRequest() {
        }
        
        public GetThreadsRequest(MotionsRace.WinPhone.MobileService.GetThreadsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetThreadsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetThreadsRequestBody() {
        }
        
        public GetThreadsRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetThreadsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetThreadsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetThreadsResponseBody Body;
        
        public GetThreadsResponse() {
        }
        
        public GetThreadsResponse(MotionsRace.WinPhone.MobileService.GetThreadsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetThreadsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult> GetThreadsResult;
        
        public GetThreadsResponseBody() {
        }
        
        public GetThreadsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult> GetThreadsResult) {
            this.GetThreadsResult = GetThreadsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPostingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPosting", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPostingRequestBody Body;
        
        public GetPostingRequest() {
        }
        
        public GetPostingRequest(MotionsRace.WinPhone.MobileService.GetPostingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPostingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int postingID;
        
        public GetPostingRequestBody() {
        }
        
        public GetPostingRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int postingID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.postingID = postingID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPostingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPostingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPostingResponseBody Body;
        
        public GetPostingResponse() {
        }
        
        public GetPostingResponse(MotionsRace.WinPhone.MobileService.GetPostingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPostingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.Posting GetPostingResult;
        
        public GetPostingResponseBody() {
        }
        
        public GetPostingResponseBody(MotionsRace.WinPhone.MobileService.Posting GetPostingResult) {
            this.GetPostingResult = GetPostingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SavePostingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SavePosting", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SavePostingRequestBody Body;
        
        public SavePostingRequest() {
        }
        
        public SavePostingRequest(MotionsRace.WinPhone.MobileService.SavePostingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SavePostingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.Posting posting;
        
        public SavePostingRequestBody() {
        }
        
        public SavePostingRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Posting posting) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.posting = posting;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SavePostingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SavePostingResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SavePostingResponseBody Body;
        
        public SavePostingResponse() {
        }
        
        public SavePostingResponse(MotionsRace.WinPhone.MobileService.SavePostingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SavePostingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SavePostingResult;
        
        public SavePostingResponseBody() {
        }
        
        public SavePostingResponseBody(int SavePostingResult) {
            this.SavePostingResult = SavePostingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkThreadAsReadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkThreadAsRead", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequestBody Body;
        
        public MarkThreadAsReadRequest() {
        }
        
        public MarkThreadAsReadRequest(MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class MarkThreadAsReadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int lastReadPostingID;
        
        public MarkThreadAsReadRequestBody() {
        }
        
        public MarkThreadAsReadRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int lastReadPostingID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.lastReadPostingID = lastReadPostingID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MarkThreadAsReadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MarkThreadAsReadResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponseBody Body;
        
        public MarkThreadAsReadResponse() {
        }
        
        public MarkThreadAsReadResponse(MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class MarkThreadAsReadResponseBody {
        
        public MarkThreadAsReadResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetThreadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetThread", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetThreadRequestBody Body;
        
        public GetThreadRequest() {
        }
        
        public GetThreadRequest(MotionsRace.WinPhone.MobileService.GetThreadRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetThreadRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int threadID;
        
        public GetThreadRequestBody() {
        }
        
        public GetThreadRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int threadID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.threadID = threadID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetThreadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetThreadResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetThreadResponseBody Body;
        
        public GetThreadResponse() {
        }
        
        public GetThreadResponse(MotionsRace.WinPhone.MobileService.GetThreadResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetThreadResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult> GetThreadResult;
        
        public GetThreadResponseBody() {
        }
        
        public GetThreadResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult> GetThreadResult) {
            this.GetThreadResult = GetThreadResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPersonInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPersonInfo", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPersonInfoRequestBody Body;
        
        public GetPersonInfoRequest() {
        }
        
        public GetPersonInfoRequest(MotionsRace.WinPhone.MobileService.GetPersonInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPersonInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int personID;
        
        public GetPersonInfoRequestBody() {
        }
        
        public GetPersonInfoRequestBody(string applicationID, string loginID, string loginSecret, int raceID, int personID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
            this.personID = personID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPersonInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPersonInfoResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetPersonInfoResponseBody Body;
        
        public GetPersonInfoResponse() {
        }
        
        public GetPersonInfoResponse(MotionsRace.WinPhone.MobileService.GetPersonInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetPersonInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.PersonInfo GetPersonInfoResult;
        
        public GetPersonInfoResponseBody() {
        }
        
        public GetPersonInfoResponseBody(MotionsRace.WinPhone.MobileService.PersonInfo GetPersonInfoResult) {
            this.GetPersonInfoResult = GetPersonInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveGoalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveGoal", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveGoalRequestBody Body;
        
        public SaveGoalRequest() {
        }
        
        public SaveGoalRequest(MotionsRace.WinPhone.MobileService.SaveGoalRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SaveGoalRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.Goal goal;
        
        public SaveGoalRequestBody() {
        }
        
        public SaveGoalRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Goal goal) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.goal = goal;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveGoalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SaveGoalResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.SaveGoalResponseBody Body;
        
        public SaveGoalResponse() {
        }
        
        public SaveGoalResponse(MotionsRace.WinPhone.MobileService.SaveGoalResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class SaveGoalResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Nullable<int> SaveGoalResult;
        
        public SaveGoalResponseBody() {
        }
        
        public SaveGoalResponseBody(System.Nullable<int> SaveGoalResult) {
            this.SaveGoalResult = SaveGoalResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoal", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalRequestBody Body;
        
        public GetGoalRequest() {
        }
        
        public GetGoalRequest(MotionsRace.WinPhone.MobileService.GetGoalRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int goalID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int raceID;
        
        public GetGoalRequestBody() {
        }
        
        public GetGoalRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int goalID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.goalID = goalID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoalResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalResponseBody Body;
        
        public GetGoalResponse() {
        }
        
        public GetGoalResponse(MotionsRace.WinPhone.MobileService.GetGoalResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.Goal GetGoalResult;
        
        public GetGoalResponseBody() {
        }
        
        public GetGoalResponseBody(MotionsRace.WinPhone.MobileService.Goal GetGoalResult) {
            this.GetGoalResult = GetGoalResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteGoalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteGoal", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeleteGoalRequestBody Body;
        
        public DeleteGoalRequest() {
        }
        
        public DeleteGoalRequest(MotionsRace.WinPhone.MobileService.DeleteGoalRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class DeleteGoalRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int goalID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public DeleteGoalRequestBody() {
        }
        
        public DeleteGoalRequestBody(string applicationID, string loginID, string loginSecret, int goalID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.goalID = goalID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteGoalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteGoalResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.DeleteGoalResponseBody Body;
        
        public DeleteGoalResponse() {
        }
        
        public DeleteGoalResponse(MotionsRace.WinPhone.MobileService.DeleteGoalResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DeleteGoalResponseBody {
        
        public DeleteGoalResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoals", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalsRequestBody Body;
        
        public GetGoalsRequest() {
        }
        
        public GetGoalsRequest(MotionsRace.WinPhone.MobileService.GetGoalsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool getOnlyPublicGoals;
        
        public GetGoalsRequestBody() {
        }
        
        public GetGoalsRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID, bool getOnlyPublicGoals) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
            this.getOnlyPublicGoals = getOnlyPublicGoals;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoalsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalsResponseBody Body;
        
        public GetGoalsResponse() {
        }
        
        public GetGoalsResponse(MotionsRace.WinPhone.MobileService.GetGoalsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult> GetGoalsResult;
        
        public GetGoalsResponseBody() {
        }
        
        public GetGoalsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult> GetGoalsResult) {
            this.GetGoalsResult = GetGoalsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalPeriodResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoalPeriodResults", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequestBody Body;
        
        public GetGoalPeriodResultsRequest() {
        }
        
        public GetGoalPeriodResultsRequest(MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalPeriodResultsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int goalID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetGoalPeriodResultsRequestBody() {
        }
        
        public GetGoalPeriodResultsRequestBody(string applicationID, string loginID, string loginSecret, int goalID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.goalID = goalID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetGoalPeriodResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetGoalPeriodResultsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponseBody Body;
        
        public GetGoalPeriodResultsResponse() {
        }
        
        public GetGoalPeriodResultsResponse(MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetGoalPeriodResultsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult> GetGoalPeriodResultsResult;
        
        public GetGoalPeriodResultsResponseBody() {
        }
        
        public GetGoalPeriodResultsResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult> GetGoalPeriodResultsResult) {
            this.GetGoalPeriodResultsResult = GetGoalPeriodResultsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateUserNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateUserName", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateUserNameRequestBody Body;
        
        public ValidateUserNameRequest() {
        }
        
        public ValidateUserNameRequest(MotionsRace.WinPhone.MobileService.ValidateUserNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateUserNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string userName;
        
        public ValidateUserNameRequestBody() {
        }
        
        public ValidateUserNameRequestBody(string applicationID, string loginID, string loginSecret, string userName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateUserNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateUserNameResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateUserNameResponseBody Body;
        
        public ValidateUserNameResponse() {
        }
        
        public ValidateUserNameResponse(MotionsRace.WinPhone.MobileService.ValidateUserNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ValidateUserNameResponseBody {
        
        public ValidateUserNameResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateEmailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateEmail", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateEmailRequestBody Body;
        
        public ValidateEmailRequest() {
        }
        
        public ValidateEmailRequest(MotionsRace.WinPhone.MobileService.ValidateEmailRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateEmailRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string email;
        
        public ValidateEmailRequestBody() {
        }
        
        public ValidateEmailRequestBody(string applicationID, string loginID, string loginSecret, string email) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateEmailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateEmailResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateEmailResponseBody Body;
        
        public ValidateEmailResponse() {
        }
        
        public ValidateEmailResponse(MotionsRace.WinPhone.MobileService.ValidateEmailResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ValidateEmailResponseBody {
        
        public ValidateEmailResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceFromSignUpCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRaceFromSignUpCode", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequestBody Body;
        
        public GetRaceFromSignUpCodeRequest() {
        }
        
        public GetRaceFromSignUpCodeRequest(MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceFromSignUpCodeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string signUpCode;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string hostName;
        
        public GetRaceFromSignUpCodeRequestBody() {
        }
        
        public GetRaceFromSignUpCodeRequestBody(string applicationID, string loginID, string loginSecret, string signUpCode, string hostName) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.signUpCode = signUpCode;
            this.hostName = hostName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceFromSignUpCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRaceFromSignUpCodeResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponseBody Body;
        
        public GetRaceFromSignUpCodeResponse() {
        }
        
        public GetRaceFromSignUpCodeResponse(MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceFromSignUpCodeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.RaceShortInfoResult GetRaceFromSignUpCodeResult;
        
        public GetRaceFromSignUpCodeResponseBody() {
        }
        
        public GetRaceFromSignUpCodeResponseBody(MotionsRace.WinPhone.MobileService.RaceShortInfoResult GetRaceFromSignUpCodeResult) {
            this.GetRaceFromSignUpCodeResult = GetRaceFromSignUpCodeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateMySettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateMySettings", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateMySettingsRequestBody Body;
        
        public UpdateMySettingsRequest() {
        }
        
        public UpdateMySettingsRequest(MotionsRace.WinPhone.MobileService.UpdateMySettingsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class UpdateMySettingsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public MotionsRace.WinPhone.MobileService.PersonInfo personInfo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string newPasswordPlainText;
        
        public UpdateMySettingsRequestBody() {
        }
        
        public UpdateMySettingsRequestBody(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.PersonInfo personInfo, string newPasswordPlainText) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personInfo = personInfo;
            this.newPasswordPlainText = newPasswordPlainText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateMySettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateMySettingsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdateMySettingsResponseBody Body;
        
        public UpdateMySettingsResponse() {
        }
        
        public UpdateMySettingsResponse(MotionsRace.WinPhone.MobileService.UpdateMySettingsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateMySettingsResponseBody {
        
        public UpdateMySettingsResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPersonToTeamRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPersonToTeam", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AddPersonToTeamRequestBody Body;
        
        public AddPersonToTeamRequest() {
        }
        
        public AddPersonToTeamRequest(MotionsRace.WinPhone.MobileService.AddPersonToTeamRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class AddPersonToTeamRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int teamID;
        
        public AddPersonToTeamRequestBody() {
        }
        
        public AddPersonToTeamRequestBody(string applicationID, string loginID, string loginSecret, int personID, int teamID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.teamID = teamID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPersonToTeamResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPersonToTeamResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.AddPersonToTeamResponseBody Body;
        
        public AddPersonToTeamResponse() {
        }
        
        public AddPersonToTeamResponse(MotionsRace.WinPhone.MobileService.AddPersonToTeamResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddPersonToTeamResponseBody {
        
        public AddPersonToTeamResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRace", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceRequestBody Body;
        
        public GetRaceRequest() {
        }
        
        public GetRaceRequest(MotionsRace.WinPhone.MobileService.GetRaceRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetRaceRequestBody() {
        }
        
        public GetRaceRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRaceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRaceResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetRaceResponseBody Body;
        
        public GetRaceResponse() {
        }
        
        public GetRaceResponse(MotionsRace.WinPhone.MobileService.GetRaceResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetRaceResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult GetRaceResult;
        
        public GetRaceResponseBody() {
        }
        
        public GetRaceResponseBody(MotionsRace.WinPhone.MobileService.RaceDetailsResult GetRaceResult) {
            this.GetRaceResult = GetRaceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePictureURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePictureURL", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdatePictureURLRequestBody Body;
        
        public UpdatePictureURLRequest() {
        }
        
        public UpdatePictureURLRequest(MotionsRace.WinPhone.MobileService.UpdatePictureURLRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class UpdatePictureURLRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string pictureURL;
        
        public UpdatePictureURLRequestBody() {
        }
        
        public UpdatePictureURLRequestBody(string applicationID, string loginID, string loginSecret, string pictureURL) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.pictureURL = pictureURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePictureURLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdatePictureURLResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.UpdatePictureURLResponseBody Body;
        
        public UpdatePictureURLResponse() {
        }
        
        public UpdatePictureURLResponse(MotionsRace.WinPhone.MobileService.UpdatePictureURLResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdatePictureURLResponseBody {
        
        public UpdatePictureURLResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMySettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMySettings", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMySettingsRequestBody Body;
        
        public GetMySettingsRequest() {
        }
        
        public GetMySettingsRequest(MotionsRace.WinPhone.MobileService.GetMySettingsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMySettingsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int raceID;
        
        public GetMySettingsRequestBody() {
        }
        
        public GetMySettingsRequestBody(string applicationID, string loginID, string loginSecret, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMySettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMySettingsResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMySettingsResponseBody Body;
        
        public GetMySettingsResponse() {
        }
        
        public GetMySettingsResponse(MotionsRace.WinPhone.MobileService.GetMySettingsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMySettingsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.PersonInfo GetMySettingsResult;
        
        public GetMySettingsResponseBody() {
        }
        
        public GetMySettingsResponseBody(MotionsRace.WinPhone.MobileService.PersonInfo GetMySettingsResult) {
            this.GetMySettingsResult = GetMySettingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetParticipantOverviewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetParticipantOverview", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequestBody Body;
        
        public GetParticipantOverviewRequest() {
        }
        
        public GetParticipantOverviewRequest(MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetParticipantOverviewRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int personID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        public GetParticipantOverviewRequestBody() {
        }
        
        public GetParticipantOverviewRequestBody(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.personID = personID;
            this.raceID = raceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetParticipantOverviewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetParticipantOverviewResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponseBody Body;
        
        public GetParticipantOverviewResponse() {
        }
        
        public GetParticipantOverviewResponse(MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetParticipantOverviewResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.ParticipantOverview GetParticipantOverviewResult;
        
        public GetParticipantOverviewResponseBody() {
        }
        
        public GetParticipantOverviewResponseBody(MotionsRace.WinPhone.MobileService.ParticipantOverview GetParticipantOverviewResult) {
            this.GetParticipantOverviewResult = GetParticipantOverviewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TemplateCallHelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TemplateCallHelloWorld", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequestBody Body;
        
        public TemplateCallHelloWorldRequest() {
        }
        
        public TemplateCallHelloWorldRequest(MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TemplateCallHelloWorldRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string who;
        
        public TemplateCallHelloWorldRequestBody() {
        }
        
        public TemplateCallHelloWorldRequestBody(string applicationID, string loginID, string loginSecret, string who) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.who = who;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TemplateCallHelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TemplateCallHelloWorldResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponseBody Body;
        
        public TemplateCallHelloWorldResponse() {
        }
        
        public TemplateCallHelloWorldResponse(MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class TemplateCallHelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string TemplateCallHelloWorldResult;
        
        public TemplateCallHelloWorldResponseBody() {
        }
        
        public TemplateCallHelloWorldResponseBody(string TemplateCallHelloWorldResult) {
            this.TemplateCallHelloWorldResult = TemplateCallHelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateAndCreateSecretRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateAndCreateSecret", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequestBody Body;
        
        public ValidateAndCreateSecretRequest() {
        }
        
        public ValidateAndCreateSecretRequest(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateAndCreateSecretRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string secret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public MotionsRace.WinPhone.MobileService.AuthenticationMethod method;
        
        public ValidateAndCreateSecretRequestBody() {
        }
        
        public ValidateAndCreateSecretRequestBody(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method) {
            this.applicationID = applicationID;
            this.username = username;
            this.secret = secret;
            this.method = method;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateAndCreateSecretResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateAndCreateSecretResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponseBody Body;
        
        public ValidateAndCreateSecretResponse() {
        }
        
        public ValidateAndCreateSecretResponse(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateAndCreateSecretResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidationResult ValidateAndCreateSecretResult;
        
        public ValidateAndCreateSecretResponseBody() {
        }
        
        public ValidateAndCreateSecretResponseBody(MotionsRace.WinPhone.MobileService.ValidationResult ValidateAndCreateSecretResult) {
            this.ValidateAndCreateSecretResult = ValidateAndCreateSecretResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateAndCreateSecret_AlternateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateAndCreateSecret_Alternate", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequestBody Body;
        
        public ValidateAndCreateSecret_AlternateRequest() {
        }
        
        public ValidateAndCreateSecret_AlternateRequest(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateAndCreateSecret_AlternateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string secret;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public MotionsRace.WinPhone.MobileService.AuthenticationMethod method;
        
        public ValidateAndCreateSecret_AlternateRequestBody() {
        }
        
        public ValidateAndCreateSecret_AlternateRequestBody(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method) {
            this.applicationID = applicationID;
            this.username = username;
            this.secret = secret;
            this.method = method;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ValidateAndCreateSecret_AlternateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ValidateAndCreateSecret_AlternateResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponseBody Body;
        
        public ValidateAndCreateSecret_AlternateResponse() {
        }
        
        public ValidateAndCreateSecret_AlternateResponse(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class ValidateAndCreateSecret_AlternateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public MotionsRace.WinPhone.MobileService.ValidationResult ValidateAndCreateSecret_AlternateResult;
        
        public ValidateAndCreateSecret_AlternateResponseBody() {
        }
        
        public ValidateAndCreateSecret_AlternateResponseBody(MotionsRace.WinPhone.MobileService.ValidationResult ValidateAndCreateSecret_AlternateResult) {
            this.ValidateAndCreateSecret_AlternateResult = ValidateAndCreateSecret_AlternateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyNewsFeedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyNewsFeed", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequestBody Body;
        
        public GetMyNewsFeedRequest() {
        }
        
        public GetMyNewsFeedRequest(MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyNewsFeedRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string applicationID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string loginID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string loginSecret;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string cultureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int raceID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> activitiesonly;
        
        public GetMyNewsFeedRequestBody() {
        }
        
        public GetMyNewsFeedRequestBody(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.Nullable<int> activitiesonly) {
            this.applicationID = applicationID;
            this.loginID = loginID;
            this.loginSecret = loginSecret;
            this.cultureName = cultureName;
            this.raceID = raceID;
            this.activitiesonly = activitiesonly;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMyNewsFeedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMyNewsFeedResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponseBody Body;
        
        public GetMyNewsFeedResponse() {
        }
        
        public GetMyNewsFeedResponse(MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetMyNewsFeedResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed> GetMyNewsFeedResult;
        
        public GetMyNewsFeedResponseBody() {
        }
        
        public GetMyNewsFeedResponseBody(System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed> GetMyNewsFeedResult) {
            this.GetMyNewsFeedResult = GetMyNewsFeedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerDateTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerDateTime", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetServerDateTimeRequestBody Body;
        
        public GetServerDateTimeRequest() {
        }
        
        public GetServerDateTimeRequest(MotionsRace.WinPhone.MobileService.GetServerDateTimeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetServerDateTimeRequestBody {
        
        public GetServerDateTimeRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerDateTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerDateTimeResponse", Namespace="http://service.funbeatrace.com/MobileService.asmx", Order=0)]
        public MotionsRace.WinPhone.MobileService.GetServerDateTimeResponseBody Body;
        
        public GetServerDateTimeResponse() {
        }
        
        public GetServerDateTimeResponse(MotionsRace.WinPhone.MobileService.GetServerDateTimeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://service.funbeatrace.com/MobileService.asmx")]
    public partial class GetServerDateTimeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetServerDateTimeResult;
        
        public GetServerDateTimeResponseBody() {
        }
        
        public GetServerDateTimeResponseBody(string GetServerDateTimeResult) {
            this.GetServerDateTimeResult = GetServerDateTimeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MobileServiceSoapChannel : MotionsRace.WinPhone.MobileService.MobileServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableMedalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableMedalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableMedalsTranslatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableMedalsTranslatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EarnMedalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EarnMedalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.MedalResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.MedalResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EarnMedalTranslatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EarnMedalTranslatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.MedalResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.MedalResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNumberOfMedalsPerPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNumberOfMedalsPerPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyNewsStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyNewsStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWhatsGoingOnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWhatsGoingOnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyRankingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyRankingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRacesAPersonCanLoginToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRacesAPersonCanLoginToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRacesAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRacesAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.RacesAvailabilityResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.RacesAvailabilityResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.AuthenticationResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.AuthenticationResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRaceByRaceKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRaceByRaceKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.RaceDetailsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizeRaceAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthorizeRaceAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.RaceDetailsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrandSpecificTranslationStringsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrandSpecificTranslationStringsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrandSpecificTranslationStringsIOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrandSpecificTranslationStringsIOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.Training Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.Training)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTotalNumberOfPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTotalNumberOfPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrainingForCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrainingForCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTrainingTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrainingTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMostRecentTrainingInTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMostRecentTrainingInTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHighscores_BestSubTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHighscores_BestSubTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHighscores_BestPersonsInTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHighscores_BestPersonsInTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRisingStarOfTheWeekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRisingStarOfTheWeekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.PersonScoreResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.PersonScoreResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHighscores_BestPersonsInMyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHighscores_BestPersonsInMyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsMyFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsMyFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMostRecentTeamActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMostRecentTeamActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPersonsOfTheTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPersonsOfTheTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.TeamInfoResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.TeamInfoResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamsByRaceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamsByRaceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckIfPersonIsManagerOfTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckIfPersonIsManagerOfTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamsPersonIsAManagerOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamsPersonIsAManagerOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamsPersonIsAMemberOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamsPersonIsAMemberOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNumberOfUnreadPersonalMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNumberOfUnreadPersonalMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonalMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonalMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSentPersonalMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSentPersonalMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateReplyToMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateReplyToMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.Posting Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.Posting)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePostingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePostingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.PersonInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.PersonInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveGoalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveGoalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGoalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGoalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.Goal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.Goal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGoalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGoalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGoalPeriodResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGoalPeriodResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRaceFromSignUpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRaceFromSignUpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.RaceShortInfoResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.RaceShortInfoResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.RaceDetailsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.RaceDetailsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.PersonInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.PersonInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetParticipantOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetParticipantOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.ParticipantOverview Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.ParticipantOverview)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemplateCallHelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TemplateCallHelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateAndCreateSecretCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateAndCreateSecretCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.ValidationResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.ValidationResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateAndCreateSecret_AlternateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateAndCreateSecret_AlternateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MotionsRace.WinPhone.MobileService.ValidationResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MotionsRace.WinPhone.MobileService.ValidationResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyNewsFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyNewsFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MobileServiceSoapClient : System.ServiceModel.ClientBase<MotionsRace.WinPhone.MobileService.MobileServiceSoap>, MotionsRace.WinPhone.MobileService.MobileServiceSoap {
        
        private BeginOperationDelegate onBeginGetAvailableMedalsDelegate;
        
        private EndOperationDelegate onEndGetAvailableMedalsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableMedalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableMedalsTranslatedDelegate;
        
        private EndOperationDelegate onEndGetAvailableMedalsTranslatedDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableMedalsTranslatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginEarnMedalDelegate;
        
        private EndOperationDelegate onEndEarnMedalDelegate;
        
        private System.Threading.SendOrPostCallback onEarnMedalCompletedDelegate;
        
        private BeginOperationDelegate onBeginEarnMedalTranslatedDelegate;
        
        private EndOperationDelegate onEndEarnMedalTranslatedDelegate;
        
        private System.Threading.SendOrPostCallback onEarnMedalTranslatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnearnMedalDelegate;
        
        private EndOperationDelegate onEndUnearnMedalDelegate;
        
        private System.Threading.SendOrPostCallback onUnearnMedalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNumberOfMedalsPerPersonDelegate;
        
        private EndOperationDelegate onEndGetNumberOfMedalsPerPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetNumberOfMedalsPerPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyNewsStreamDelegate;
        
        private EndOperationDelegate onEndGetMyNewsStreamDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyNewsStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamStreamDelegate;
        
        private EndOperationDelegate onEndGetTeamStreamDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWhatsGoingOnDelegate;
        
        private EndOperationDelegate onEndGetWhatsGoingOnDelegate;
        
        private System.Threading.SendOrPostCallback onGetWhatsGoingOnCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyRankingDelegate;
        
        private EndOperationDelegate onEndGetMyRankingDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyRankingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRacesAPersonCanLoginToDelegate;
        
        private EndOperationDelegate onEndGetRacesAPersonCanLoginToDelegate;
        
        private System.Threading.SendOrPostCallback onGetRacesAPersonCanLoginToCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRacesAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetRacesAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetRacesAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateLoginDelegate;
        
        private EndOperationDelegate onEndAuthenticateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRaceByRaceKeyDelegate;
        
        private EndOperationDelegate onEndGetRaceByRaceKeyDelegate;
        
        private System.Threading.SendOrPostCallback onGetRaceByRaceKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthorizeRaceAccessDelegate;
        
        private EndOperationDelegate onEndAuthorizeRaceAccessDelegate;
        
        private System.Threading.SendOrPostCallback onAuthorizeRaceAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrandSpecificTranslationStringsDelegate;
        
        private EndOperationDelegate onEndGetBrandSpecificTranslationStringsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrandSpecificTranslationStringsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrandSpecificTranslationStringsIOSDelegate;
        
        private EndOperationDelegate onEndGetBrandSpecificTranslationStringsIOSDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrandSpecificTranslationStringsIOSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrainingDelegate;
        
        private EndOperationDelegate onEndGetTrainingDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrainingCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTrainingDelegate;
        
        private EndOperationDelegate onEndDeleteTrainingDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTrainingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTrainingDelegate;
        
        private EndOperationDelegate onEndSaveTrainingDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTrainingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTotalNumberOfPointsDelegate;
        
        private EndOperationDelegate onEndGetTotalNumberOfPointsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTotalNumberOfPointsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrainingForCalendarDelegate;
        
        private EndOperationDelegate onEndGetTrainingForCalendarDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrainingForCalendarCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrainingTypesDelegate;
        
        private EndOperationDelegate onEndGetTrainingTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrainingTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMostRecentTrainingInTeamDelegate;
        
        private EndOperationDelegate onEndGetMostRecentTrainingInTeamDelegate;
        
        private System.Threading.SendOrPostCallback onGetMostRecentTrainingInTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDailyActivityScoresDelegate;
        
        private EndOperationDelegate onEndSaveDailyActivityScoresDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDailyActivityScoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHighscores_BestSubTeamsDelegate;
        
        private EndOperationDelegate onEndGetHighscores_BestSubTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetHighscores_BestSubTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHighscores_BestPersonsInTeamDelegate;
        
        private EndOperationDelegate onEndGetHighscores_BestPersonsInTeamDelegate;
        
        private System.Threading.SendOrPostCallback onGetHighscores_BestPersonsInTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRisingStarOfTheWeekDelegate;
        
        private EndOperationDelegate onEndGetRisingStarOfTheWeekDelegate;
        
        private System.Threading.SendOrPostCallback onGetRisingStarOfTheWeekCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHighscores_BestPersonsInMyListDelegate;
        
        private EndOperationDelegate onEndGetHighscores_BestPersonsInMyListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHighscores_BestPersonsInMyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsMyFriendDelegate;
        
        private EndOperationDelegate onEndIsMyFriendDelegate;
        
        private System.Threading.SendOrPostCallback onIsMyFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyFriendsDelegate;
        
        private EndOperationDelegate onEndGetMyFriendsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyFriendsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFriendDelegate;
        
        private EndOperationDelegate onEndRemoveFriendDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFriendsDelegate;
        
        private EndOperationDelegate onEndAddFriendsDelegate;
        
        private System.Threading.SendOrPostCallback onAddFriendsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMostRecentTeamActivityDelegate;
        
        private EndOperationDelegate onEndGetMostRecentTeamActivityDelegate;
        
        private System.Threading.SendOrPostCallback onGetMostRecentTeamActivityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPersonsOfTheTeamDelegate;
        
        private EndOperationDelegate onEndGetAllPersonsOfTheTeamDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPersonsOfTheTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamInfoDelegate;
        
        private EndOperationDelegate onEndGetTeamInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTeamDelegate;
        
        private EndOperationDelegate onEndUpdateTeamDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamsByRaceIDDelegate;
        
        private EndOperationDelegate onEndGetTeamsByRaceIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamsByRaceIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckIfPersonIsManagerOfTeamDelegate;
        
        private EndOperationDelegate onEndCheckIfPersonIsManagerOfTeamDelegate;
        
        private System.Threading.SendOrPostCallback onCheckIfPersonIsManagerOfTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamsPersonIsAManagerOfDelegate;
        
        private EndOperationDelegate onEndGetTeamsPersonIsAManagerOfDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamsPersonIsAManagerOfCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamsPersonIsAMemberOfDelegate;
        
        private EndOperationDelegate onEndGetTeamsPersonIsAMemberOfDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamsPersonIsAMemberOfCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyTeamsDelegate;
        
        private EndOperationDelegate onEndGetMyTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTeamPictureURLDelegate;
        
        private EndOperationDelegate onEndUpdateTeamPictureURLDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTeamPictureURLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNumberOfUnreadPersonalMessagesDelegate;
        
        private EndOperationDelegate onEndGetNumberOfUnreadPersonalMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNumberOfUnreadPersonalMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkPersonalMessagesAsReadDelegate;
        
        private EndOperationDelegate onEndMarkPersonalMessagesAsReadDelegate;
        
        private System.Threading.SendOrPostCallback onMarkPersonalMessagesAsReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkOrUnmarkPersonalMessageAsReadDelegate;
        
        private EndOperationDelegate onEndMarkOrUnmarkPersonalMessageAsReadDelegate;
        
        private System.Threading.SendOrPostCallback onMarkOrUnmarkPersonalMessageAsReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginArchivePersonalMessageDelegate;
        
        private EndOperationDelegate onEndArchivePersonalMessageDelegate;
        
        private System.Threading.SendOrPostCallback onArchivePersonalMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonalMessagesDelegate;
        
        private EndOperationDelegate onEndGetPersonalMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonalMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSentPersonalMessagesDelegate;
        
        private EndOperationDelegate onEndGetSentPersonalMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSentPersonalMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendPersonalMessageDelegate;
        
        private EndOperationDelegate onEndSendPersonalMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendPersonalMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePersonalMessageDelegate;
        
        private EndOperationDelegate onEndDeletePersonalMessageDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePersonalMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateReplyToMessageDelegate;
        
        private EndOperationDelegate onEndCreateReplyToMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCreateReplyToMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetThreadsDelegate;
        
        private EndOperationDelegate onEndGetThreadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetThreadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPostingDelegate;
        
        private EndOperationDelegate onEndGetPostingDelegate;
        
        private System.Threading.SendOrPostCallback onGetPostingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePostingDelegate;
        
        private EndOperationDelegate onEndSavePostingDelegate;
        
        private System.Threading.SendOrPostCallback onSavePostingCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkThreadAsReadDelegate;
        
        private EndOperationDelegate onEndMarkThreadAsReadDelegate;
        
        private System.Threading.SendOrPostCallback onMarkThreadAsReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetThreadDelegate;
        
        private EndOperationDelegate onEndGetThreadDelegate;
        
        private System.Threading.SendOrPostCallback onGetThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonInfoDelegate;
        
        private EndOperationDelegate onEndGetPersonInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveGoalDelegate;
        
        private EndOperationDelegate onEndSaveGoalDelegate;
        
        private System.Threading.SendOrPostCallback onSaveGoalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGoalDelegate;
        
        private EndOperationDelegate onEndGetGoalDelegate;
        
        private System.Threading.SendOrPostCallback onGetGoalCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteGoalDelegate;
        
        private EndOperationDelegate onEndDeleteGoalDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteGoalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGoalsDelegate;
        
        private EndOperationDelegate onEndGetGoalsDelegate;
        
        private System.Threading.SendOrPostCallback onGetGoalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGoalPeriodResultsDelegate;
        
        private EndOperationDelegate onEndGetGoalPeriodResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetGoalPeriodResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateUserNameDelegate;
        
        private EndOperationDelegate onEndValidateUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateEmailDelegate;
        
        private EndOperationDelegate onEndValidateEmailDelegate;
        
        private System.Threading.SendOrPostCallback onValidateEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRaceFromSignUpCodeDelegate;
        
        private EndOperationDelegate onEndGetRaceFromSignUpCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRaceFromSignUpCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateMySettingsDelegate;
        
        private EndOperationDelegate onEndUpdateMySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateMySettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPersonToTeamDelegate;
        
        private EndOperationDelegate onEndAddPersonToTeamDelegate;
        
        private System.Threading.SendOrPostCallback onAddPersonToTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRaceDelegate;
        
        private EndOperationDelegate onEndGetRaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetRaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePictureURLDelegate;
        
        private EndOperationDelegate onEndUpdatePictureURLDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePictureURLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMySettingsDelegate;
        
        private EndOperationDelegate onEndGetMySettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMySettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetParticipantOverviewDelegate;
        
        private EndOperationDelegate onEndGetParticipantOverviewDelegate;
        
        private System.Threading.SendOrPostCallback onGetParticipantOverviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginTemplateCallHelloWorldDelegate;
        
        private EndOperationDelegate onEndTemplateCallHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onTemplateCallHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateAndCreateSecretDelegate;
        
        private EndOperationDelegate onEndValidateAndCreateSecretDelegate;
        
        private System.Threading.SendOrPostCallback onValidateAndCreateSecretCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateAndCreateSecret_AlternateDelegate;
        
        private EndOperationDelegate onEndValidateAndCreateSecret_AlternateDelegate;
        
        private System.Threading.SendOrPostCallback onValidateAndCreateSecret_AlternateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyNewsFeedDelegate;
        
        private EndOperationDelegate onEndGetMyNewsFeedDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyNewsFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetServerDateTimeDelegate;
        
        private EndOperationDelegate onEndGetServerDateTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerDateTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MobileServiceSoapClient() {
        }
        
        public MobileServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MobileServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAvailableMedalsCompletedEventArgs> GetAvailableMedalsCompleted;
        
        public event System.EventHandler<GetAvailableMedalsTranslatedCompletedEventArgs> GetAvailableMedalsTranslatedCompleted;
        
        public event System.EventHandler<EarnMedalCompletedEventArgs> EarnMedalCompleted;
        
        public event System.EventHandler<EarnMedalTranslatedCompletedEventArgs> EarnMedalTranslatedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnearnMedalCompleted;
        
        public event System.EventHandler<GetNumberOfMedalsPerPersonCompletedEventArgs> GetNumberOfMedalsPerPersonCompleted;
        
        public event System.EventHandler<GetMyNewsStreamCompletedEventArgs> GetMyNewsStreamCompleted;
        
        public event System.EventHandler<GetTeamStreamCompletedEventArgs> GetTeamStreamCompleted;
        
        public event System.EventHandler<GetWhatsGoingOnCompletedEventArgs> GetWhatsGoingOnCompleted;
        
        public event System.EventHandler<GetMyRankingCompletedEventArgs> GetMyRankingCompleted;
        
        public event System.EventHandler<GetRacesAPersonCanLoginToCompletedEventArgs> GetRacesAPersonCanLoginToCompleted;
        
        public event System.EventHandler<GetRacesAvailabilityCompletedEventArgs> GetRacesAvailabilityCompleted;
        
        public event System.EventHandler<AuthenticateLoginCompletedEventArgs> AuthenticateLoginCompleted;
        
        public event System.EventHandler<GetRaceByRaceKeyCompletedEventArgs> GetRaceByRaceKeyCompleted;
        
        public event System.EventHandler<AuthorizeRaceAccessCompletedEventArgs> AuthorizeRaceAccessCompleted;
        
        public event System.EventHandler<GetBrandSpecificTranslationStringsCompletedEventArgs> GetBrandSpecificTranslationStringsCompleted;
        
        public event System.EventHandler<GetBrandSpecificTranslationStringsIOSCompletedEventArgs> GetBrandSpecificTranslationStringsIOSCompleted;
        
        public event System.EventHandler<GetTrainingCompletedEventArgs> GetTrainingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteTrainingCompleted;
        
        public event System.EventHandler<SaveTrainingCompletedEventArgs> SaveTrainingCompleted;
        
        public event System.EventHandler<GetTotalNumberOfPointsCompletedEventArgs> GetTotalNumberOfPointsCompleted;
        
        public event System.EventHandler<GetTrainingForCalendarCompletedEventArgs> GetTrainingForCalendarCompleted;
        
        public event System.EventHandler<GetTrainingTypesCompletedEventArgs> GetTrainingTypesCompleted;
        
        public event System.EventHandler<GetMostRecentTrainingInTeamCompletedEventArgs> GetMostRecentTrainingInTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveDailyActivityScoresCompleted;
        
        public event System.EventHandler<GetHighscores_BestSubTeamsCompletedEventArgs> GetHighscores_BestSubTeamsCompleted;
        
        public event System.EventHandler<GetHighscores_BestPersonsInTeamCompletedEventArgs> GetHighscores_BestPersonsInTeamCompleted;
        
        public event System.EventHandler<GetRisingStarOfTheWeekCompletedEventArgs> GetRisingStarOfTheWeekCompleted;
        
        public event System.EventHandler<GetHighscores_BestPersonsInMyListCompletedEventArgs> GetHighscores_BestPersonsInMyListCompleted;
        
        public event System.EventHandler<IsMyFriendCompletedEventArgs> IsMyFriendCompleted;
        
        public event System.EventHandler<GetMyFriendsCompletedEventArgs> GetMyFriendsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveFriendCompleted;
        
        public event System.EventHandler<AddFriendsCompletedEventArgs> AddFriendsCompleted;
        
        public event System.EventHandler<GetMostRecentTeamActivityCompletedEventArgs> GetMostRecentTeamActivityCompleted;
        
        public event System.EventHandler<GetAllPersonsOfTheTeamCompletedEventArgs> GetAllPersonsOfTheTeamCompleted;
        
        public event System.EventHandler<GetTeamInfoCompletedEventArgs> GetTeamInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTeamCompleted;
        
        public event System.EventHandler<GetTeamsByRaceIDCompletedEventArgs> GetTeamsByRaceIDCompleted;
        
        public event System.EventHandler<CheckIfPersonIsManagerOfTeamCompletedEventArgs> CheckIfPersonIsManagerOfTeamCompleted;
        
        public event System.EventHandler<GetTeamsPersonIsAManagerOfCompletedEventArgs> GetTeamsPersonIsAManagerOfCompleted;
        
        public event System.EventHandler<GetTeamsPersonIsAMemberOfCompletedEventArgs> GetTeamsPersonIsAMemberOfCompleted;
        
        public event System.EventHandler<GetMyTeamsCompletedEventArgs> GetMyTeamsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateTeamPictureURLCompleted;
        
        public event System.EventHandler<GetNumberOfUnreadPersonalMessagesCompletedEventArgs> GetNumberOfUnreadPersonalMessagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkPersonalMessagesAsReadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkOrUnmarkPersonalMessageAsReadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ArchivePersonalMessageCompleted;
        
        public event System.EventHandler<GetPersonalMessagesCompletedEventArgs> GetPersonalMessagesCompleted;
        
        public event System.EventHandler<GetSentPersonalMessagesCompletedEventArgs> GetSentPersonalMessagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendPersonalMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePersonalMessageCompleted;
        
        public event System.EventHandler<CreateReplyToMessageCompletedEventArgs> CreateReplyToMessageCompleted;
        
        public event System.EventHandler<GetThreadsCompletedEventArgs> GetThreadsCompleted;
        
        public event System.EventHandler<GetPostingCompletedEventArgs> GetPostingCompleted;
        
        public event System.EventHandler<SavePostingCompletedEventArgs> SavePostingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkThreadAsReadCompleted;
        
        public event System.EventHandler<GetThreadCompletedEventArgs> GetThreadCompleted;
        
        public event System.EventHandler<GetPersonInfoCompletedEventArgs> GetPersonInfoCompleted;
        
        public event System.EventHandler<SaveGoalCompletedEventArgs> SaveGoalCompleted;
        
        public event System.EventHandler<GetGoalCompletedEventArgs> GetGoalCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteGoalCompleted;
        
        public event System.EventHandler<GetGoalsCompletedEventArgs> GetGoalsCompleted;
        
        public event System.EventHandler<GetGoalPeriodResultsCompletedEventArgs> GetGoalPeriodResultsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ValidateUserNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ValidateEmailCompleted;
        
        public event System.EventHandler<GetRaceFromSignUpCodeCompletedEventArgs> GetRaceFromSignUpCodeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateMySettingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPersonToTeamCompleted;
        
        public event System.EventHandler<GetRaceCompletedEventArgs> GetRaceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePictureURLCompleted;
        
        public event System.EventHandler<GetMySettingsCompletedEventArgs> GetMySettingsCompleted;
        
        public event System.EventHandler<GetParticipantOverviewCompletedEventArgs> GetParticipantOverviewCompleted;
        
        public event System.EventHandler<TemplateCallHelloWorldCompletedEventArgs> TemplateCallHelloWorldCompleted;
        
        public event System.EventHandler<ValidateAndCreateSecretCompletedEventArgs> ValidateAndCreateSecretCompleted;
        
        public event System.EventHandler<ValidateAndCreateSecret_AlternateCompletedEventArgs> ValidateAndCreateSecret_AlternateCompleted;
        
        public event System.EventHandler<GetMyNewsFeedCompletedEventArgs> GetMyNewsFeedCompleted;
        
        public event System.EventHandler<GetServerDateTimeCompletedEventArgs> GetServerDateTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetAvailableMedals(MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableMedals(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAvailableMedals(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequest inValue = new MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetAvailableMedals(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetAvailableMedals(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableMedals(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> EndGetAvailableMedals(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetAvailableMedals(result);
            return retVal.Body.GetAvailableMedalsResult;
        }
        
        private System.IAsyncResult OnBeginGetAvailableMedals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetAvailableMedals(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetAvailableMedals(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> retVal = this.EndGetAvailableMedals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableMedalsCompleted(object state) {
            if ((this.GetAvailableMedalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableMedalsCompleted(this, new GetAvailableMedalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableMedalsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.GetAvailableMedalsAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void GetAvailableMedalsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginGetAvailableMedalsDelegate == null)) {
                this.onBeginGetAvailableMedalsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableMedals);
            }
            if ((this.onEndGetAvailableMedalsDelegate == null)) {
                this.onEndGetAvailableMedalsDelegate = new EndOperationDelegate(this.OnEndGetAvailableMedals);
            }
            if ((this.onGetAvailableMedalsCompletedDelegate == null)) {
                this.onGetAvailableMedalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableMedalsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableMedalsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndGetAvailableMedalsDelegate, this.onGetAvailableMedalsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetAvailableMedalsTranslated(MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableMedalsTranslated(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAvailableMedalsTranslated(string applicationID, string loginID, string loginSecret, int personID, int raceID, string cultureName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequest inValue = new MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            inValue.Body.cultureName = cultureName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetAvailableMedalsTranslated(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetAvailableMedalsTranslated(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableMedalsTranslated(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> EndGetAvailableMedalsTranslated(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetAvailableMedalsTranslated(result);
            return retVal.Body.GetAvailableMedalsTranslatedResult;
        }
        
        private System.IAsyncResult OnBeginGetAvailableMedalsTranslated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            string cultureName = ((string)(inValues[5]));
            return this.BeginGetAvailableMedalsTranslated(applicationID, loginID, loginSecret, personID, raceID, cultureName, callback, asyncState);
        }
        
        private object[] OnEndGetAvailableMedalsTranslated(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MedalResult> retVal = this.EndGetAvailableMedalsTranslated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableMedalsTranslatedCompleted(object state) {
            if ((this.GetAvailableMedalsTranslatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableMedalsTranslatedCompleted(this, new GetAvailableMedalsTranslatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableMedalsTranslatedAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, string cultureName) {
            this.GetAvailableMedalsTranslatedAsync(applicationID, loginID, loginSecret, personID, raceID, cultureName, null);
        }
        
        public void GetAvailableMedalsTranslatedAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, string cultureName, object userState) {
            if ((this.onBeginGetAvailableMedalsTranslatedDelegate == null)) {
                this.onBeginGetAvailableMedalsTranslatedDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableMedalsTranslated);
            }
            if ((this.onEndGetAvailableMedalsTranslatedDelegate == null)) {
                this.onEndGetAvailableMedalsTranslatedDelegate = new EndOperationDelegate(this.OnEndGetAvailableMedalsTranslated);
            }
            if ((this.onGetAvailableMedalsTranslatedCompletedDelegate == null)) {
                this.onGetAvailableMedalsTranslatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableMedalsTranslatedCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableMedalsTranslatedDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID,
                        cultureName}, this.onEndGetAvailableMedalsTranslatedDelegate, this.onGetAvailableMedalsTranslatedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginEarnMedal(MotionsRace.WinPhone.MobileService.EarnMedalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEarnMedal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginEarnMedal(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.EarnMedalRequest inValue = new MotionsRace.WinPhone.MobileService.EarnMedalRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.EarnMedalRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.medalTypeID = medalTypeID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginEarnMedal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.EarnMedalResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndEarnMedal(System.IAsyncResult result) {
            return base.Channel.EndEarnMedal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.MedalResult EndEarnMedal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.EarnMedalResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndEarnMedal(result);
            return retVal.Body.EarnMedalResult;
        }
        
        private System.IAsyncResult OnBeginEarnMedal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int medalTypeID = ((int)(inValues[4]));
            return this.BeginEarnMedal(applicationID, loginID, loginSecret, raceID, medalTypeID, callback, asyncState);
        }
        
        private object[] OnEndEarnMedal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.MedalResult retVal = this.EndEarnMedal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEarnMedalCompleted(object state) {
            if ((this.EarnMedalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EarnMedalCompleted(this, new EarnMedalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EarnMedalAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID) {
            this.EarnMedalAsync(applicationID, loginID, loginSecret, raceID, medalTypeID, null);
        }
        
        public void EarnMedalAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, object userState) {
            if ((this.onBeginEarnMedalDelegate == null)) {
                this.onBeginEarnMedalDelegate = new BeginOperationDelegate(this.OnBeginEarnMedal);
            }
            if ((this.onEndEarnMedalDelegate == null)) {
                this.onEndEarnMedalDelegate = new EndOperationDelegate(this.OnEndEarnMedal);
            }
            if ((this.onEarnMedalCompletedDelegate == null)) {
                this.onEarnMedalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEarnMedalCompleted);
            }
            base.InvokeAsync(this.onBeginEarnMedalDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        medalTypeID}, this.onEndEarnMedalDelegate, this.onEarnMedalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginEarnMedalTranslated(MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEarnMedalTranslated(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginEarnMedalTranslated(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, string cultureName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequest inValue = new MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.medalTypeID = medalTypeID;
            inValue.Body.cultureName = cultureName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginEarnMedalTranslated(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndEarnMedalTranslated(System.IAsyncResult result) {
            return base.Channel.EndEarnMedalTranslated(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.MedalResult EndEarnMedalTranslated(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndEarnMedalTranslated(result);
            return retVal.Body.EarnMedalTranslatedResult;
        }
        
        private System.IAsyncResult OnBeginEarnMedalTranslated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int medalTypeID = ((int)(inValues[4]));
            string cultureName = ((string)(inValues[5]));
            return this.BeginEarnMedalTranslated(applicationID, loginID, loginSecret, raceID, medalTypeID, cultureName, callback, asyncState);
        }
        
        private object[] OnEndEarnMedalTranslated(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.MedalResult retVal = this.EndEarnMedalTranslated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEarnMedalTranslatedCompleted(object state) {
            if ((this.EarnMedalTranslatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EarnMedalTranslatedCompleted(this, new EarnMedalTranslatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EarnMedalTranslatedAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, string cultureName) {
            this.EarnMedalTranslatedAsync(applicationID, loginID, loginSecret, raceID, medalTypeID, cultureName, null);
        }
        
        public void EarnMedalTranslatedAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, string cultureName, object userState) {
            if ((this.onBeginEarnMedalTranslatedDelegate == null)) {
                this.onBeginEarnMedalTranslatedDelegate = new BeginOperationDelegate(this.OnBeginEarnMedalTranslated);
            }
            if ((this.onEndEarnMedalTranslatedDelegate == null)) {
                this.onEndEarnMedalTranslatedDelegate = new EndOperationDelegate(this.OnEndEarnMedalTranslated);
            }
            if ((this.onEarnMedalTranslatedCompletedDelegate == null)) {
                this.onEarnMedalTranslatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEarnMedalTranslatedCompleted);
            }
            base.InvokeAsync(this.onBeginEarnMedalTranslatedDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        medalTypeID,
                        cultureName}, this.onEndEarnMedalTranslatedDelegate, this.onEarnMedalTranslatedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginUnearnMedal(MotionsRace.WinPhone.MobileService.UnearnMedalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnearnMedal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUnearnMedal(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.UnearnMedalRequest inValue = new MotionsRace.WinPhone.MobileService.UnearnMedalRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.UnearnMedalRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.medalTypeID = medalTypeID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginUnearnMedal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.UnearnMedalResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndUnearnMedal(System.IAsyncResult result) {
            return base.Channel.EndUnearnMedal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUnearnMedal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.UnearnMedalResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndUnearnMedal(result);
        }
        
        private System.IAsyncResult OnBeginUnearnMedal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int medalTypeID = ((int)(inValues[4]));
            return this.BeginUnearnMedal(applicationID, loginID, loginSecret, raceID, medalTypeID, callback, asyncState);
        }
        
        private object[] OnEndUnearnMedal(System.IAsyncResult result) {
            this.EndUnearnMedal(result);
            return null;
        }
        
        private void OnUnearnMedalCompleted(object state) {
            if ((this.UnearnMedalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnearnMedalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnearnMedalAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID) {
            this.UnearnMedalAsync(applicationID, loginID, loginSecret, raceID, medalTypeID, null);
        }
        
        public void UnearnMedalAsync(string applicationID, string loginID, string loginSecret, int raceID, int medalTypeID, object userState) {
            if ((this.onBeginUnearnMedalDelegate == null)) {
                this.onBeginUnearnMedalDelegate = new BeginOperationDelegate(this.OnBeginUnearnMedal);
            }
            if ((this.onEndUnearnMedalDelegate == null)) {
                this.onEndUnearnMedalDelegate = new EndOperationDelegate(this.OnEndUnearnMedal);
            }
            if ((this.onUnearnMedalCompletedDelegate == null)) {
                this.onUnearnMedalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnearnMedalCompleted);
            }
            base.InvokeAsync(this.onBeginUnearnMedalDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        medalTypeID}, this.onEndUnearnMedalDelegate, this.onUnearnMedalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetNumberOfMedalsPerPerson(MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNumberOfMedalsPerPerson(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetNumberOfMedalsPerPerson(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequest inValue = new MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetNumberOfMedalsPerPerson(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetNumberOfMedalsPerPerson(System.IAsyncResult result) {
            return base.Channel.EndGetNumberOfMedalsPerPerson(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult> EndGetNumberOfMedalsPerPerson(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetNumberOfMedalsPerPerson(result);
            return retVal.Body.GetNumberOfMedalsPerPersonResult;
        }
        
        private System.IAsyncResult OnBeginGetNumberOfMedalsPerPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetNumberOfMedalsPerPerson(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetNumberOfMedalsPerPerson(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NumberOfMedalsResult> retVal = this.EndGetNumberOfMedalsPerPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNumberOfMedalsPerPersonCompleted(object state) {
            if ((this.GetNumberOfMedalsPerPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNumberOfMedalsPerPersonCompleted(this, new GetNumberOfMedalsPerPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNumberOfMedalsPerPersonAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetNumberOfMedalsPerPersonAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetNumberOfMedalsPerPersonAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetNumberOfMedalsPerPersonDelegate == null)) {
                this.onBeginGetNumberOfMedalsPerPersonDelegate = new BeginOperationDelegate(this.OnBeginGetNumberOfMedalsPerPerson);
            }
            if ((this.onEndGetNumberOfMedalsPerPersonDelegate == null)) {
                this.onEndGetNumberOfMedalsPerPersonDelegate = new EndOperationDelegate(this.OnEndGetNumberOfMedalsPerPerson);
            }
            if ((this.onGetNumberOfMedalsPerPersonCompletedDelegate == null)) {
                this.onGetNumberOfMedalsPerPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNumberOfMedalsPerPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetNumberOfMedalsPerPersonDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetNumberOfMedalsPerPersonDelegate, this.onGetNumberOfMedalsPerPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMyNewsStream(MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyNewsStream(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMyNewsStream(string applicationID, string loginID, string loginSecret, int raceID, byte maxNumberOfItems, string cultureName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequest inValue = new MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.maxNumberOfItems = maxNumberOfItems;
            inValue.Body.cultureName = cultureName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMyNewsStream(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMyNewsStream(System.IAsyncResult result) {
            return base.Channel.EndGetMyNewsStream(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> EndGetMyNewsStream(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMyNewsStream(result);
            return retVal.Body.GetMyNewsStreamResult;
        }
        
        private System.IAsyncResult OnBeginGetMyNewsStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            byte maxNumberOfItems = ((byte)(inValues[4]));
            string cultureName = ((string)(inValues[5]));
            return this.BeginGetMyNewsStream(applicationID, loginID, loginSecret, raceID, maxNumberOfItems, cultureName, callback, asyncState);
        }
        
        private object[] OnEndGetMyNewsStream(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> retVal = this.EndGetMyNewsStream(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyNewsStreamCompleted(object state) {
            if ((this.GetMyNewsStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyNewsStreamCompleted(this, new GetMyNewsStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyNewsStreamAsync(string applicationID, string loginID, string loginSecret, int raceID, byte maxNumberOfItems, string cultureName) {
            this.GetMyNewsStreamAsync(applicationID, loginID, loginSecret, raceID, maxNumberOfItems, cultureName, null);
        }
        
        public void GetMyNewsStreamAsync(string applicationID, string loginID, string loginSecret, int raceID, byte maxNumberOfItems, string cultureName, object userState) {
            if ((this.onBeginGetMyNewsStreamDelegate == null)) {
                this.onBeginGetMyNewsStreamDelegate = new BeginOperationDelegate(this.OnBeginGetMyNewsStream);
            }
            if ((this.onEndGetMyNewsStreamDelegate == null)) {
                this.onEndGetMyNewsStreamDelegate = new EndOperationDelegate(this.OnEndGetMyNewsStream);
            }
            if ((this.onGetMyNewsStreamCompletedDelegate == null)) {
                this.onGetMyNewsStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyNewsStreamCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyNewsStreamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        maxNumberOfItems,
                        cultureName}, this.onEndGetMyNewsStreamDelegate, this.onGetMyNewsStreamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTeamStream(MotionsRace.WinPhone.MobileService.GetTeamStreamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamStream(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTeamStream(string applicationID, string loginID, string loginSecret, int teamID, byte maxNumberOfItems, string cultureName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTeamStreamRequest inValue = new MotionsRace.WinPhone.MobileService.GetTeamStreamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTeamStreamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamID = teamID;
            inValue.Body.maxNumberOfItems = maxNumberOfItems;
            inValue.Body.cultureName = cultureName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTeamStream(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTeamStreamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTeamStream(System.IAsyncResult result) {
            return base.Channel.EndGetTeamStream(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> EndGetTeamStream(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTeamStreamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTeamStream(result);
            return retVal.Body.GetTeamStreamResult;
        }
        
        private System.IAsyncResult OnBeginGetTeamStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int teamID = ((int)(inValues[3]));
            byte maxNumberOfItems = ((byte)(inValues[4]));
            string cultureName = ((string)(inValues[5]));
            return this.BeginGetTeamStream(applicationID, loginID, loginSecret, teamID, maxNumberOfItems, cultureName, callback, asyncState);
        }
        
        private object[] OnEndGetTeamStream(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.NewsStreamItem> retVal = this.EndGetTeamStream(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamStreamCompleted(object state) {
            if ((this.GetTeamStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamStreamCompleted(this, new GetTeamStreamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamStreamAsync(string applicationID, string loginID, string loginSecret, int teamID, byte maxNumberOfItems, string cultureName) {
            this.GetTeamStreamAsync(applicationID, loginID, loginSecret, teamID, maxNumberOfItems, cultureName, null);
        }
        
        public void GetTeamStreamAsync(string applicationID, string loginID, string loginSecret, int teamID, byte maxNumberOfItems, string cultureName, object userState) {
            if ((this.onBeginGetTeamStreamDelegate == null)) {
                this.onBeginGetTeamStreamDelegate = new BeginOperationDelegate(this.OnBeginGetTeamStream);
            }
            if ((this.onEndGetTeamStreamDelegate == null)) {
                this.onEndGetTeamStreamDelegate = new EndOperationDelegate(this.OnEndGetTeamStream);
            }
            if ((this.onGetTeamStreamCompletedDelegate == null)) {
                this.onGetTeamStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamStreamCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamStreamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamID,
                        maxNumberOfItems,
                        cultureName}, this.onEndGetTeamStreamDelegate, this.onGetTeamStreamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetWhatsGoingOn(MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWhatsGoingOn(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetWhatsGoingOn(System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequest inValue = new MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequestBody();
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetWhatsGoingOn(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetWhatsGoingOn(System.IAsyncResult result) {
            return base.Channel.EndGetWhatsGoingOn(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetWhatsGoingOn(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetWhatsGoingOn(result);
            return retVal.Body.GetWhatsGoingOnResult;
        }
        
        private System.IAsyncResult OnBeginGetWhatsGoingOn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetWhatsGoingOn(callback, asyncState);
        }
        
        private object[] OnEndGetWhatsGoingOn(System.IAsyncResult result) {
            string retVal = this.EndGetWhatsGoingOn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWhatsGoingOnCompleted(object state) {
            if ((this.GetWhatsGoingOnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWhatsGoingOnCompleted(this, new GetWhatsGoingOnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWhatsGoingOnAsync() {
            this.GetWhatsGoingOnAsync(null);
        }
        
        public void GetWhatsGoingOnAsync(object userState) {
            if ((this.onBeginGetWhatsGoingOnDelegate == null)) {
                this.onBeginGetWhatsGoingOnDelegate = new BeginOperationDelegate(this.OnBeginGetWhatsGoingOn);
            }
            if ((this.onEndGetWhatsGoingOnDelegate == null)) {
                this.onEndGetWhatsGoingOnDelegate = new EndOperationDelegate(this.OnEndGetWhatsGoingOn);
            }
            if ((this.onGetWhatsGoingOnCompletedDelegate == null)) {
                this.onGetWhatsGoingOnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWhatsGoingOnCompleted);
            }
            base.InvokeAsync(this.onBeginGetWhatsGoingOnDelegate, null, this.onEndGetWhatsGoingOnDelegate, this.onGetWhatsGoingOnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMyRanking(MotionsRace.WinPhone.MobileService.GetMyRankingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyRanking(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMyRanking(int PersonID, int RaceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMyRankingRequest inValue = new MotionsRace.WinPhone.MobileService.GetMyRankingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMyRankingRequestBody();
            inValue.Body.PersonID = PersonID;
            inValue.Body.RaceID = RaceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMyRanking(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMyRankingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMyRanking(System.IAsyncResult result) {
            return base.Channel.EndGetMyRanking(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetMyRanking(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMyRankingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMyRanking(result);
            return retVal.Body.GetMyRankingResult;
        }
        
        private System.IAsyncResult OnBeginGetMyRanking(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PersonID = ((int)(inValues[0]));
            int RaceID = ((int)(inValues[1]));
            return this.BeginGetMyRanking(PersonID, RaceID, callback, asyncState);
        }
        
        private object[] OnEndGetMyRanking(System.IAsyncResult result) {
            string retVal = this.EndGetMyRanking(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyRankingCompleted(object state) {
            if ((this.GetMyRankingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyRankingCompleted(this, new GetMyRankingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyRankingAsync(int PersonID, int RaceID) {
            this.GetMyRankingAsync(PersonID, RaceID, null);
        }
        
        public void GetMyRankingAsync(int PersonID, int RaceID, object userState) {
            if ((this.onBeginGetMyRankingDelegate == null)) {
                this.onBeginGetMyRankingDelegate = new BeginOperationDelegate(this.OnBeginGetMyRanking);
            }
            if ((this.onEndGetMyRankingDelegate == null)) {
                this.onEndGetMyRankingDelegate = new EndOperationDelegate(this.OnEndGetMyRanking);
            }
            if ((this.onGetMyRankingCompletedDelegate == null)) {
                this.onGetMyRankingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyRankingCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyRankingDelegate, new object[] {
                        PersonID,
                        RaceID}, this.onEndGetMyRankingDelegate, this.onGetMyRankingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRacesAPersonCanLoginTo(MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRacesAPersonCanLoginTo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRacesAPersonCanLoginTo(string applicationID, string loginID, string loginSecret, string hostName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequest inValue = new MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.hostName = hostName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRacesAPersonCanLoginTo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRacesAPersonCanLoginTo(System.IAsyncResult result) {
            return base.Channel.EndGetRacesAPersonCanLoginTo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> EndGetRacesAPersonCanLoginTo(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRacesAPersonCanLoginTo(result);
            return retVal.Body.GetRacesAPersonCanLoginToResult;
        }
        
        private System.IAsyncResult OnBeginGetRacesAPersonCanLoginTo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string hostName = ((string)(inValues[3]));
            return this.BeginGetRacesAPersonCanLoginTo(applicationID, loginID, loginSecret, hostName, callback, asyncState);
        }
        
        private object[] OnEndGetRacesAPersonCanLoginTo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.RaceAvailableForLoginResult> retVal = this.EndGetRacesAPersonCanLoginTo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRacesAPersonCanLoginToCompleted(object state) {
            if ((this.GetRacesAPersonCanLoginToCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRacesAPersonCanLoginToCompleted(this, new GetRacesAPersonCanLoginToCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRacesAPersonCanLoginToAsync(string applicationID, string loginID, string loginSecret, string hostName) {
            this.GetRacesAPersonCanLoginToAsync(applicationID, loginID, loginSecret, hostName, null);
        }
        
        public void GetRacesAPersonCanLoginToAsync(string applicationID, string loginID, string loginSecret, string hostName, object userState) {
            if ((this.onBeginGetRacesAPersonCanLoginToDelegate == null)) {
                this.onBeginGetRacesAPersonCanLoginToDelegate = new BeginOperationDelegate(this.OnBeginGetRacesAPersonCanLoginTo);
            }
            if ((this.onEndGetRacesAPersonCanLoginToDelegate == null)) {
                this.onEndGetRacesAPersonCanLoginToDelegate = new EndOperationDelegate(this.OnEndGetRacesAPersonCanLoginTo);
            }
            if ((this.onGetRacesAPersonCanLoginToCompletedDelegate == null)) {
                this.onGetRacesAPersonCanLoginToCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRacesAPersonCanLoginToCompleted);
            }
            base.InvokeAsync(this.onBeginGetRacesAPersonCanLoginToDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        hostName}, this.onEndGetRacesAPersonCanLoginToDelegate, this.onGetRacesAPersonCanLoginToCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRacesAvailability(MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRacesAvailability(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRacesAvailability(string applicationID, string loginID, string loginSecret, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequest inValue = new MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRacesAvailability(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRacesAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetRacesAvailability(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.RacesAvailabilityResult EndGetRacesAvailability(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRacesAvailability(result);
            return retVal.Body.GetRacesAvailabilityResult;
        }
        
        private System.IAsyncResult OnBeginGetRacesAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            return this.BeginGetRacesAvailability(applicationID, loginID, loginSecret, callback, asyncState);
        }
        
        private object[] OnEndGetRacesAvailability(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RacesAvailabilityResult retVal = this.EndGetRacesAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRacesAvailabilityCompleted(object state) {
            if ((this.GetRacesAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRacesAvailabilityCompleted(this, new GetRacesAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRacesAvailabilityAsync(string applicationID, string loginID, string loginSecret) {
            this.GetRacesAvailabilityAsync(applicationID, loginID, loginSecret, null);
        }
        
        public void GetRacesAvailabilityAsync(string applicationID, string loginID, string loginSecret, object userState) {
            if ((this.onBeginGetRacesAvailabilityDelegate == null)) {
                this.onBeginGetRacesAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetRacesAvailability);
            }
            if ((this.onEndGetRacesAvailabilityDelegate == null)) {
                this.onEndGetRacesAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetRacesAvailability);
            }
            if ((this.onGetRacesAvailabilityCompletedDelegate == null)) {
                this.onGetRacesAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRacesAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetRacesAvailabilityDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret}, this.onEndGetRacesAvailabilityDelegate, this.onGetRacesAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginAuthenticateLogin(MotionsRace.WinPhone.MobileService.AuthenticateLoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAuthenticateLogin(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.LoginDetails loginDetails, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.AuthenticateLoginRequest inValue = new MotionsRace.WinPhone.MobileService.AuthenticateLoginRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.AuthenticateLoginRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.loginDetails = loginDetails;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginAuthenticateLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndAuthenticateLogin(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.AuthenticationResult EndAuthenticateLogin(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndAuthenticateLogin(result);
            return retVal.Body.AuthenticateLoginResult;
        }
        
        private System.IAsyncResult OnBeginAuthenticateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.LoginDetails loginDetails = ((MotionsRace.WinPhone.MobileService.LoginDetails)(inValues[3]));
            return this.BeginAuthenticateLogin(applicationID, loginID, loginSecret, loginDetails, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateLogin(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.AuthenticationResult retVal = this.EndAuthenticateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateLoginCompleted(object state) {
            if ((this.AuthenticateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateLoginCompleted(this, new AuthenticateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateLoginAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.LoginDetails loginDetails) {
            this.AuthenticateLoginAsync(applicationID, loginID, loginSecret, loginDetails, null);
        }
        
        public void AuthenticateLoginAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.LoginDetails loginDetails, object userState) {
            if ((this.onBeginAuthenticateLoginDelegate == null)) {
                this.onBeginAuthenticateLoginDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateLogin);
            }
            if ((this.onEndAuthenticateLoginDelegate == null)) {
                this.onEndAuthenticateLoginDelegate = new EndOperationDelegate(this.OnEndAuthenticateLogin);
            }
            if ((this.onAuthenticateLoginCompletedDelegate == null)) {
                this.onAuthenticateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateLoginDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        loginDetails}, this.onEndAuthenticateLoginDelegate, this.onAuthenticateLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRaceByRaceKey(MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRaceByRaceKey(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRaceByRaceKey(string applicationID, string loginID, string loginSecret, string intranetSecretKey, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequest inValue = new MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.intranetSecretKey = intranetSecretKey;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRaceByRaceKey(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRaceByRaceKey(System.IAsyncResult result) {
            return base.Channel.EndGetRaceByRaceKey(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.RaceDetailsResult EndGetRaceByRaceKey(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRaceByRaceKey(result);
            return retVal.Body.GetRaceByRaceKeyResult;
        }
        
        private System.IAsyncResult OnBeginGetRaceByRaceKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string intranetSecretKey = ((string)(inValues[3]));
            return this.BeginGetRaceByRaceKey(applicationID, loginID, loginSecret, intranetSecretKey, callback, asyncState);
        }
        
        private object[] OnEndGetRaceByRaceKey(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RaceDetailsResult retVal = this.EndGetRaceByRaceKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRaceByRaceKeyCompleted(object state) {
            if ((this.GetRaceByRaceKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRaceByRaceKeyCompleted(this, new GetRaceByRaceKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRaceByRaceKeyAsync(string applicationID, string loginID, string loginSecret, string intranetSecretKey) {
            this.GetRaceByRaceKeyAsync(applicationID, loginID, loginSecret, intranetSecretKey, null);
        }
        
        public void GetRaceByRaceKeyAsync(string applicationID, string loginID, string loginSecret, string intranetSecretKey, object userState) {
            if ((this.onBeginGetRaceByRaceKeyDelegate == null)) {
                this.onBeginGetRaceByRaceKeyDelegate = new BeginOperationDelegate(this.OnBeginGetRaceByRaceKey);
            }
            if ((this.onEndGetRaceByRaceKeyDelegate == null)) {
                this.onEndGetRaceByRaceKeyDelegate = new EndOperationDelegate(this.OnEndGetRaceByRaceKey);
            }
            if ((this.onGetRaceByRaceKeyCompletedDelegate == null)) {
                this.onGetRaceByRaceKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRaceByRaceKeyCompleted);
            }
            base.InvokeAsync(this.onBeginGetRaceByRaceKeyDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        intranetSecretKey}, this.onEndGetRaceByRaceKeyDelegate, this.onGetRaceByRaceKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginAuthorizeRaceAccess(MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthorizeRaceAccess(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAuthorizeRaceAccess(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequest inValue = new MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginAuthorizeRaceAccess(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndAuthorizeRaceAccess(System.IAsyncResult result) {
            return base.Channel.EndAuthorizeRaceAccess(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.RaceDetailsResult EndAuthorizeRaceAccess(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndAuthorizeRaceAccess(result);
            return retVal.Body.AuthorizeRaceAccessResult;
        }
        
        private System.IAsyncResult OnBeginAuthorizeRaceAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginAuthorizeRaceAccess(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndAuthorizeRaceAccess(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RaceDetailsResult retVal = this.EndAuthorizeRaceAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthorizeRaceAccessCompleted(object state) {
            if ((this.AuthorizeRaceAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthorizeRaceAccessCompleted(this, new AuthorizeRaceAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthorizeRaceAccessAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.AuthorizeRaceAccessAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void AuthorizeRaceAccessAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginAuthorizeRaceAccessDelegate == null)) {
                this.onBeginAuthorizeRaceAccessDelegate = new BeginOperationDelegate(this.OnBeginAuthorizeRaceAccess);
            }
            if ((this.onEndAuthorizeRaceAccessDelegate == null)) {
                this.onEndAuthorizeRaceAccessDelegate = new EndOperationDelegate(this.OnEndAuthorizeRaceAccess);
            }
            if ((this.onAuthorizeRaceAccessCompletedDelegate == null)) {
                this.onAuthorizeRaceAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthorizeRaceAccessCompleted);
            }
            base.InvokeAsync(this.onBeginAuthorizeRaceAccessDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndAuthorizeRaceAccessDelegate, this.onAuthorizeRaceAccessCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetBrandSpecificTranslationStrings(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrandSpecificTranslationStrings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetBrandSpecificTranslationStrings(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequest inValue = new MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetBrandSpecificTranslationStrings(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetBrandSpecificTranslationStrings(System.IAsyncResult result) {
            return base.Channel.EndGetBrandSpecificTranslationStrings(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString> EndGetBrandSpecificTranslationStrings(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetBrandSpecificTranslationStrings(result);
            return retVal.Body.GetBrandSpecificTranslationStringsResult;
        }
        
        private System.IAsyncResult OnBeginGetBrandSpecificTranslationStrings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetBrandSpecificTranslationStrings(applicationID, loginID, loginSecret, cultureName, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetBrandSpecificTranslationStrings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.KeyValuePairOfStringString> retVal = this.EndGetBrandSpecificTranslationStrings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrandSpecificTranslationStringsCompleted(object state) {
            if ((this.GetBrandSpecificTranslationStringsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrandSpecificTranslationStringsCompleted(this, new GetBrandSpecificTranslationStringsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrandSpecificTranslationStringsAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.GetBrandSpecificTranslationStringsAsync(applicationID, loginID, loginSecret, cultureName, raceID, null);
        }
        
        public void GetBrandSpecificTranslationStringsAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, object userState) {
            if ((this.onBeginGetBrandSpecificTranslationStringsDelegate == null)) {
                this.onBeginGetBrandSpecificTranslationStringsDelegate = new BeginOperationDelegate(this.OnBeginGetBrandSpecificTranslationStrings);
            }
            if ((this.onEndGetBrandSpecificTranslationStringsDelegate == null)) {
                this.onEndGetBrandSpecificTranslationStringsDelegate = new EndOperationDelegate(this.OnEndGetBrandSpecificTranslationStrings);
            }
            if ((this.onGetBrandSpecificTranslationStringsCompletedDelegate == null)) {
                this.onGetBrandSpecificTranslationStringsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrandSpecificTranslationStringsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrandSpecificTranslationStringsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        raceID}, this.onEndGetBrandSpecificTranslationStringsDelegate, this.onGetBrandSpecificTranslationStringsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetBrandSpecificTranslationStringsIOS(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrandSpecificTranslationStringsIOS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetBrandSpecificTranslationStringsIOS(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequest inValue = new MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetBrandSpecificTranslationStringsIOS(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetBrandSpecificTranslationStringsIOS(System.IAsyncResult result) {
            return base.Channel.EndGetBrandSpecificTranslationStringsIOS(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.ArrayOfString EndGetBrandSpecificTranslationStringsIOS(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetBrandSpecificTranslationStringsIOS(result);
            return retVal.Body.GetBrandSpecificTranslationStringsIOSResult;
        }
        
        private System.IAsyncResult OnBeginGetBrandSpecificTranslationStringsIOS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetBrandSpecificTranslationStringsIOS(applicationID, loginID, loginSecret, cultureName, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetBrandSpecificTranslationStringsIOS(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ArrayOfString retVal = this.EndGetBrandSpecificTranslationStringsIOS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrandSpecificTranslationStringsIOSCompleted(object state) {
            if ((this.GetBrandSpecificTranslationStringsIOSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrandSpecificTranslationStringsIOSCompleted(this, new GetBrandSpecificTranslationStringsIOSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrandSpecificTranslationStringsIOSAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.GetBrandSpecificTranslationStringsIOSAsync(applicationID, loginID, loginSecret, cultureName, raceID, null);
        }
        
        public void GetBrandSpecificTranslationStringsIOSAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, object userState) {
            if ((this.onBeginGetBrandSpecificTranslationStringsIOSDelegate == null)) {
                this.onBeginGetBrandSpecificTranslationStringsIOSDelegate = new BeginOperationDelegate(this.OnBeginGetBrandSpecificTranslationStringsIOS);
            }
            if ((this.onEndGetBrandSpecificTranslationStringsIOSDelegate == null)) {
                this.onEndGetBrandSpecificTranslationStringsIOSDelegate = new EndOperationDelegate(this.OnEndGetBrandSpecificTranslationStringsIOS);
            }
            if ((this.onGetBrandSpecificTranslationStringsIOSCompletedDelegate == null)) {
                this.onGetBrandSpecificTranslationStringsIOSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrandSpecificTranslationStringsIOSCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrandSpecificTranslationStringsIOSDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        raceID}, this.onEndGetBrandSpecificTranslationStringsIOSDelegate, this.onGetBrandSpecificTranslationStringsIOSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTraining(MotionsRace.WinPhone.MobileService.GetTrainingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTraining(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTraining(string applicationID, string loginID, string loginSecret, string cultureName, int trainingID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTrainingRequest inValue = new MotionsRace.WinPhone.MobileService.GetTrainingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTrainingRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.trainingID = trainingID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTraining(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTrainingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTraining(System.IAsyncResult result) {
            return base.Channel.EndGetTraining(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.Training EndGetTraining(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTrainingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTraining(result);
            return retVal.Body.GetTrainingResult;
        }
        
        private System.IAsyncResult OnBeginGetTraining(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int trainingID = ((int)(inValues[4]));
            int raceID = ((int)(inValues[5]));
            return this.BeginGetTraining(applicationID, loginID, loginSecret, cultureName, trainingID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTraining(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.Training retVal = this.EndGetTraining(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrainingCompleted(object state) {
            if ((this.GetTrainingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrainingCompleted(this, new GetTrainingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrainingAsync(string applicationID, string loginID, string loginSecret, string cultureName, int trainingID, int raceID) {
            this.GetTrainingAsync(applicationID, loginID, loginSecret, cultureName, trainingID, raceID, null);
        }
        
        public void GetTrainingAsync(string applicationID, string loginID, string loginSecret, string cultureName, int trainingID, int raceID, object userState) {
            if ((this.onBeginGetTrainingDelegate == null)) {
                this.onBeginGetTrainingDelegate = new BeginOperationDelegate(this.OnBeginGetTraining);
            }
            if ((this.onEndGetTrainingDelegate == null)) {
                this.onEndGetTrainingDelegate = new EndOperationDelegate(this.OnEndGetTraining);
            }
            if ((this.onGetTrainingCompletedDelegate == null)) {
                this.onGetTrainingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrainingCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrainingDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        trainingID,
                        raceID}, this.onEndGetTrainingDelegate, this.onGetTrainingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginDeleteTraining(MotionsRace.WinPhone.MobileService.DeleteTrainingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTraining(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeleteTraining(string applicationID, string loginID, string loginSecret, int trainingID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.DeleteTrainingRequest inValue = new MotionsRace.WinPhone.MobileService.DeleteTrainingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.DeleteTrainingRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.trainingID = trainingID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginDeleteTraining(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.DeleteTrainingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndDeleteTraining(System.IAsyncResult result) {
            return base.Channel.EndDeleteTraining(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndDeleteTraining(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.DeleteTrainingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndDeleteTraining(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTraining(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int trainingID = ((int)(inValues[3]));
            return this.BeginDeleteTraining(applicationID, loginID, loginSecret, trainingID, callback, asyncState);
        }
        
        private object[] OnEndDeleteTraining(System.IAsyncResult result) {
            this.EndDeleteTraining(result);
            return null;
        }
        
        private void OnDeleteTrainingCompleted(object state) {
            if ((this.DeleteTrainingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTrainingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID) {
            this.DeleteTrainingAsync(applicationID, loginID, loginSecret, trainingID, null);
        }
        
        public void DeleteTrainingAsync(string applicationID, string loginID, string loginSecret, int trainingID, object userState) {
            if ((this.onBeginDeleteTrainingDelegate == null)) {
                this.onBeginDeleteTrainingDelegate = new BeginOperationDelegate(this.OnBeginDeleteTraining);
            }
            if ((this.onEndDeleteTrainingDelegate == null)) {
                this.onEndDeleteTrainingDelegate = new EndOperationDelegate(this.OnEndDeleteTraining);
            }
            if ((this.onDeleteTrainingCompletedDelegate == null)) {
                this.onDeleteTrainingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTrainingDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        trainingID}, this.onEndDeleteTrainingDelegate, this.onDeleteTrainingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginSaveTraining(MotionsRace.WinPhone.MobileService.SaveTrainingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTraining(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveTraining(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Training training, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.SaveTrainingRequest inValue = new MotionsRace.WinPhone.MobileService.SaveTrainingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.SaveTrainingRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.training = training;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginSaveTraining(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.SaveTrainingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndSaveTraining(System.IAsyncResult result) {
            return base.Channel.EndSaveTraining(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Nullable<int> EndSaveTraining(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.SaveTrainingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndSaveTraining(result);
            return retVal.Body.SaveTrainingResult;
        }
        
        private System.IAsyncResult OnBeginSaveTraining(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.Training training = ((MotionsRace.WinPhone.MobileService.Training)(inValues[3]));
            return this.BeginSaveTraining(applicationID, loginID, loginSecret, training, callback, asyncState);
        }
        
        private object[] OnEndSaveTraining(System.IAsyncResult result) {
            System.Nullable<int> retVal = this.EndSaveTraining(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTrainingCompleted(object state) {
            if ((this.SaveTrainingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTrainingCompleted(this, new SaveTrainingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTrainingAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Training training) {
            this.SaveTrainingAsync(applicationID, loginID, loginSecret, training, null);
        }
        
        public void SaveTrainingAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Training training, object userState) {
            if ((this.onBeginSaveTrainingDelegate == null)) {
                this.onBeginSaveTrainingDelegate = new BeginOperationDelegate(this.OnBeginSaveTraining);
            }
            if ((this.onEndSaveTrainingDelegate == null)) {
                this.onEndSaveTrainingDelegate = new EndOperationDelegate(this.OnEndSaveTraining);
            }
            if ((this.onSaveTrainingCompletedDelegate == null)) {
                this.onSaveTrainingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTrainingCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTrainingDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        training}, this.onEndSaveTrainingDelegate, this.onSaveTrainingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTotalNumberOfPoints(MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTotalNumberOfPoints(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTotalNumberOfPoints(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequest inValue = new MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTotalNumberOfPoints(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTotalNumberOfPoints(System.IAsyncResult result) {
            return base.Channel.EndGetTotalNumberOfPoints(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndGetTotalNumberOfPoints(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTotalNumberOfPoints(result);
            return retVal.Body.GetTotalNumberOfPointsResult;
        }
        
        private System.IAsyncResult OnBeginGetTotalNumberOfPoints(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetTotalNumberOfPoints(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTotalNumberOfPoints(System.IAsyncResult result) {
            int retVal = this.EndGetTotalNumberOfPoints(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTotalNumberOfPointsCompleted(object state) {
            if ((this.GetTotalNumberOfPointsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTotalNumberOfPointsCompleted(this, new GetTotalNumberOfPointsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTotalNumberOfPointsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.GetTotalNumberOfPointsAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void GetTotalNumberOfPointsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginGetTotalNumberOfPointsDelegate == null)) {
                this.onBeginGetTotalNumberOfPointsDelegate = new BeginOperationDelegate(this.OnBeginGetTotalNumberOfPoints);
            }
            if ((this.onEndGetTotalNumberOfPointsDelegate == null)) {
                this.onEndGetTotalNumberOfPointsDelegate = new EndOperationDelegate(this.OnEndGetTotalNumberOfPoints);
            }
            if ((this.onGetTotalNumberOfPointsCompletedDelegate == null)) {
                this.onGetTotalNumberOfPointsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTotalNumberOfPointsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTotalNumberOfPointsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndGetTotalNumberOfPointsDelegate, this.onGetTotalNumberOfPointsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTrainingForCalendar(MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrainingForCalendar(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTrainingForCalendar(string applicationID, string loginID, string loginSecret, string cultureName, int personID, int raceID, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequest inValue = new MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            inValue.Body.startDate = startDate;
            inValue.Body.endDate = endDate;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTrainingForCalendar(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTrainingForCalendar(System.IAsyncResult result) {
            return base.Channel.EndGetTrainingForCalendar(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult> EndGetTrainingForCalendar(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTrainingForCalendar(result);
            return retVal.Body.GetTrainingForCalendarResult;
        }
        
        private System.IAsyncResult OnBeginGetTrainingForCalendar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int personID = ((int)(inValues[4]));
            int raceID = ((int)(inValues[5]));
            System.DateTime startDate = ((System.DateTime)(inValues[6]));
            System.DateTime endDate = ((System.DateTime)(inValues[7]));
            return this.BeginGetTrainingForCalendar(applicationID, loginID, loginSecret, cultureName, personID, raceID, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTrainingForCalendar(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingBriefInfoResult> retVal = this.EndGetTrainingForCalendar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrainingForCalendarCompleted(object state) {
            if ((this.GetTrainingForCalendarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrainingForCalendarCompleted(this, new GetTrainingForCalendarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrainingForCalendarAsync(string applicationID, string loginID, string loginSecret, string cultureName, int personID, int raceID, System.DateTime startDate, System.DateTime endDate) {
            this.GetTrainingForCalendarAsync(applicationID, loginID, loginSecret, cultureName, personID, raceID, startDate, endDate, null);
        }
        
        public void GetTrainingForCalendarAsync(string applicationID, string loginID, string loginSecret, string cultureName, int personID, int raceID, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTrainingForCalendarDelegate == null)) {
                this.onBeginGetTrainingForCalendarDelegate = new BeginOperationDelegate(this.OnBeginGetTrainingForCalendar);
            }
            if ((this.onEndGetTrainingForCalendarDelegate == null)) {
                this.onEndGetTrainingForCalendarDelegate = new EndOperationDelegate(this.OnEndGetTrainingForCalendar);
            }
            if ((this.onGetTrainingForCalendarCompletedDelegate == null)) {
                this.onGetTrainingForCalendarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrainingForCalendarCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrainingForCalendarDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        personID,
                        raceID,
                        startDate,
                        endDate}, this.onEndGetTrainingForCalendarDelegate, this.onGetTrainingForCalendarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTrainingTypes(MotionsRace.WinPhone.MobileService.GetTrainingTypesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrainingTypes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTrainingTypes(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTrainingTypesRequest inValue = new MotionsRace.WinPhone.MobileService.GetTrainingTypesRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTrainingTypesRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTrainingTypes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTrainingTypes(System.IAsyncResult result) {
            return base.Channel.EndGetTrainingTypes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> EndGetTrainingTypes(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTrainingTypes(result);
            return retVal.Body.GetTrainingTypesResult;
        }
        
        private System.IAsyncResult OnBeginGetTrainingTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetTrainingTypes(applicationID, loginID, loginSecret, cultureName, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTrainingTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingType> retVal = this.EndGetTrainingTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrainingTypesCompleted(object state) {
            if ((this.GetTrainingTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrainingTypesCompleted(this, new GetTrainingTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrainingTypesAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID) {
            this.GetTrainingTypesAsync(applicationID, loginID, loginSecret, cultureName, raceID, null);
        }
        
        public void GetTrainingTypesAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, object userState) {
            if ((this.onBeginGetTrainingTypesDelegate == null)) {
                this.onBeginGetTrainingTypesDelegate = new BeginOperationDelegate(this.OnBeginGetTrainingTypes);
            }
            if ((this.onEndGetTrainingTypesDelegate == null)) {
                this.onEndGetTrainingTypesDelegate = new EndOperationDelegate(this.OnEndGetTrainingTypes);
            }
            if ((this.onGetTrainingTypesCompletedDelegate == null)) {
                this.onGetTrainingTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrainingTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrainingTypesDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        raceID}, this.onEndGetTrainingTypesDelegate, this.onGetTrainingTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMostRecentTrainingInTeam(MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMostRecentTrainingInTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMostRecentTrainingInTeam(string applicationID, string loginID, string loginSecret, string cultureName, int teamID, int numberOfItems, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequest inValue = new MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.teamID = teamID;
            inValue.Body.numberOfItems = numberOfItems;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMostRecentTrainingInTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMostRecentTrainingInTeam(System.IAsyncResult result) {
            return base.Channel.EndGetMostRecentTrainingInTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult> EndGetMostRecentTrainingInTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMostRecentTrainingInTeam(result);
            return retVal.Body.GetMostRecentTrainingInTeamResult;
        }
        
        private System.IAsyncResult OnBeginGetMostRecentTrainingInTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int teamID = ((int)(inValues[4]));
            int numberOfItems = ((int)(inValues[5]));
            return this.BeginGetMostRecentTrainingInTeam(applicationID, loginID, loginSecret, cultureName, teamID, numberOfItems, callback, asyncState);
        }
        
        private object[] OnEndGetMostRecentTrainingInTeam(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TrainingAndPersonBriefInfoResult> retVal = this.EndGetMostRecentTrainingInTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMostRecentTrainingInTeamCompleted(object state) {
            if ((this.GetMostRecentTrainingInTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMostRecentTrainingInTeamCompleted(this, new GetMostRecentTrainingInTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMostRecentTrainingInTeamAsync(string applicationID, string loginID, string loginSecret, string cultureName, int teamID, int numberOfItems) {
            this.GetMostRecentTrainingInTeamAsync(applicationID, loginID, loginSecret, cultureName, teamID, numberOfItems, null);
        }
        
        public void GetMostRecentTrainingInTeamAsync(string applicationID, string loginID, string loginSecret, string cultureName, int teamID, int numberOfItems, object userState) {
            if ((this.onBeginGetMostRecentTrainingInTeamDelegate == null)) {
                this.onBeginGetMostRecentTrainingInTeamDelegate = new BeginOperationDelegate(this.OnBeginGetMostRecentTrainingInTeam);
            }
            if ((this.onEndGetMostRecentTrainingInTeamDelegate == null)) {
                this.onEndGetMostRecentTrainingInTeamDelegate = new EndOperationDelegate(this.OnEndGetMostRecentTrainingInTeam);
            }
            if ((this.onGetMostRecentTrainingInTeamCompletedDelegate == null)) {
                this.onGetMostRecentTrainingInTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMostRecentTrainingInTeamCompleted);
            }
            base.InvokeAsync(this.onBeginGetMostRecentTrainingInTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        teamID,
                        numberOfItems}, this.onEndGetMostRecentTrainingInTeamDelegate, this.onGetMostRecentTrainingInTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginSaveDailyActivityScores(MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveDailyActivityScores(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveDailyActivityScores(string applicationID, string loginID, string RaceID, string loginSecret, System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequest inValue = new MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.RaceID = RaceID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.scores = scores;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginSaveDailyActivityScores(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndSaveDailyActivityScores(System.IAsyncResult result) {
            return base.Channel.EndSaveDailyActivityScores(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndSaveDailyActivityScores(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndSaveDailyActivityScores(result);
        }
        
        private System.IAsyncResult OnBeginSaveDailyActivityScores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string RaceID = ((string)(inValues[2]));
            string loginSecret = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores = ((System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore>)(inValues[4]));
            return this.BeginSaveDailyActivityScores(applicationID, loginID, RaceID, loginSecret, scores, callback, asyncState);
        }
        
        private object[] OnEndSaveDailyActivityScores(System.IAsyncResult result) {
            this.EndSaveDailyActivityScores(result);
            return null;
        }
        
        private void OnSaveDailyActivityScoresCompleted(object state) {
            if ((this.SaveDailyActivityScoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDailyActivityScoresCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDailyActivityScoresAsync(string applicationID, string loginID, string RaceID, string loginSecret, System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores) {
            this.SaveDailyActivityScoresAsync(applicationID, loginID, RaceID, loginSecret, scores, null);
        }
        
        public void SaveDailyActivityScoresAsync(string applicationID, string loginID, string RaceID, string loginSecret, System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.DailyActivityScore> scores, object userState) {
            if ((this.onBeginSaveDailyActivityScoresDelegate == null)) {
                this.onBeginSaveDailyActivityScoresDelegate = new BeginOperationDelegate(this.OnBeginSaveDailyActivityScores);
            }
            if ((this.onEndSaveDailyActivityScoresDelegate == null)) {
                this.onEndSaveDailyActivityScoresDelegate = new EndOperationDelegate(this.OnEndSaveDailyActivityScores);
            }
            if ((this.onSaveDailyActivityScoresCompletedDelegate == null)) {
                this.onSaveDailyActivityScoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDailyActivityScoresCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDailyActivityScoresDelegate, new object[] {
                        applicationID,
                        loginID,
                        RaceID,
                        loginSecret,
                        scores}, this.onEndSaveDailyActivityScoresDelegate, this.onSaveDailyActivityScoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetHighscores_BestSubTeams(MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHighscores_BestSubTeams(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetHighscores_BestSubTeams(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.Nullable<int> parentTeamID, bool filterByMaxTeamsPerListValue, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequest inValue = new MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            inValue.Body.parentTeamID = parentTeamID;
            inValue.Body.filterByMaxTeamsPerListValue = filterByMaxTeamsPerListValue;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetHighscores_BestSubTeams(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetHighscores_BestSubTeams(System.IAsyncResult result) {
            return base.Channel.EndGetHighscores_BestSubTeams(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult> EndGetHighscores_BestSubTeams(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetHighscores_BestSubTeams(result);
            return retVal.Body.GetHighscores_BestSubTeamsResult;
        }
        
        private System.IAsyncResult OnBeginGetHighscores_BestSubTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            System.Nullable<int> parentTeamID = ((System.Nullable<int>)(inValues[5]));
            bool filterByMaxTeamsPerListValue = ((bool)(inValues[6]));
            return this.BeginGetHighscores_BestSubTeams(applicationID, loginID, loginSecret, personID, raceID, parentTeamID, filterByMaxTeamsPerListValue, callback, asyncState);
        }
        
        private object[] OnEndGetHighscores_BestSubTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamScoreResult> retVal = this.EndGetHighscores_BestSubTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHighscores_BestSubTeamsCompleted(object state) {
            if ((this.GetHighscores_BestSubTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHighscores_BestSubTeamsCompleted(this, new GetHighscores_BestSubTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHighscores_BestSubTeamsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.Nullable<int> parentTeamID, bool filterByMaxTeamsPerListValue) {
            this.GetHighscores_BestSubTeamsAsync(applicationID, loginID, loginSecret, personID, raceID, parentTeamID, filterByMaxTeamsPerListValue, null);
        }
        
        public void GetHighscores_BestSubTeamsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.Nullable<int> parentTeamID, bool filterByMaxTeamsPerListValue, object userState) {
            if ((this.onBeginGetHighscores_BestSubTeamsDelegate == null)) {
                this.onBeginGetHighscores_BestSubTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetHighscores_BestSubTeams);
            }
            if ((this.onEndGetHighscores_BestSubTeamsDelegate == null)) {
                this.onEndGetHighscores_BestSubTeamsDelegate = new EndOperationDelegate(this.OnEndGetHighscores_BestSubTeams);
            }
            if ((this.onGetHighscores_BestSubTeamsCompletedDelegate == null)) {
                this.onGetHighscores_BestSubTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHighscores_BestSubTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetHighscores_BestSubTeamsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID,
                        parentTeamID,
                        filterByMaxTeamsPerListValue}, this.onEndGetHighscores_BestSubTeamsDelegate, this.onGetHighscores_BestSubTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetHighscores_BestPersonsInTeam(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHighscores_BestPersonsInTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetHighscores_BestPersonsInTeam(string applicationID, string loginID, string loginSecret, int teamID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequest inValue = new MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamID = teamID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetHighscores_BestPersonsInTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetHighscores_BestPersonsInTeam(System.IAsyncResult result) {
            return base.Channel.EndGetHighscores_BestPersonsInTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> EndGetHighscores_BestPersonsInTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetHighscores_BestPersonsInTeam(result);
            return retVal.Body.GetHighscores_BestPersonsInTeamResult;
        }
        
        private System.IAsyncResult OnBeginGetHighscores_BestPersonsInTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int teamID = ((int)(inValues[3]));
            return this.BeginGetHighscores_BestPersonsInTeam(applicationID, loginID, loginSecret, teamID, callback, asyncState);
        }
        
        private object[] OnEndGetHighscores_BestPersonsInTeam(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> retVal = this.EndGetHighscores_BestPersonsInTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHighscores_BestPersonsInTeamCompleted(object state) {
            if ((this.GetHighscores_BestPersonsInTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHighscores_BestPersonsInTeamCompleted(this, new GetHighscores_BestPersonsInTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHighscores_BestPersonsInTeamAsync(string applicationID, string loginID, string loginSecret, int teamID) {
            this.GetHighscores_BestPersonsInTeamAsync(applicationID, loginID, loginSecret, teamID, null);
        }
        
        public void GetHighscores_BestPersonsInTeamAsync(string applicationID, string loginID, string loginSecret, int teamID, object userState) {
            if ((this.onBeginGetHighscores_BestPersonsInTeamDelegate == null)) {
                this.onBeginGetHighscores_BestPersonsInTeamDelegate = new BeginOperationDelegate(this.OnBeginGetHighscores_BestPersonsInTeam);
            }
            if ((this.onEndGetHighscores_BestPersonsInTeamDelegate == null)) {
                this.onEndGetHighscores_BestPersonsInTeamDelegate = new EndOperationDelegate(this.OnEndGetHighscores_BestPersonsInTeam);
            }
            if ((this.onGetHighscores_BestPersonsInTeamCompletedDelegate == null)) {
                this.onGetHighscores_BestPersonsInTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHighscores_BestPersonsInTeamCompleted);
            }
            base.InvokeAsync(this.onBeginGetHighscores_BestPersonsInTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamID}, this.onEndGetHighscores_BestPersonsInTeamDelegate, this.onGetHighscores_BestPersonsInTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRisingStarOfTheWeek(MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRisingStarOfTheWeek(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRisingStarOfTheWeek(string applicationID, string loginID, string loginSecret, int raceId, System.DateTime todaysDateTime, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequest inValue = new MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceId = raceId;
            inValue.Body.todaysDateTime = todaysDateTime;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRisingStarOfTheWeek(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRisingStarOfTheWeek(System.IAsyncResult result) {
            return base.Channel.EndGetRisingStarOfTheWeek(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.PersonScoreResult EndGetRisingStarOfTheWeek(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRisingStarOfTheWeek(result);
            return retVal.Body.GetRisingStarOfTheWeekResult;
        }
        
        private System.IAsyncResult OnBeginGetRisingStarOfTheWeek(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceId = ((int)(inValues[3]));
            System.DateTime todaysDateTime = ((System.DateTime)(inValues[4]));
            return this.BeginGetRisingStarOfTheWeek(applicationID, loginID, loginSecret, raceId, todaysDateTime, callback, asyncState);
        }
        
        private object[] OnEndGetRisingStarOfTheWeek(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.PersonScoreResult retVal = this.EndGetRisingStarOfTheWeek(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRisingStarOfTheWeekCompleted(object state) {
            if ((this.GetRisingStarOfTheWeekCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRisingStarOfTheWeekCompleted(this, new GetRisingStarOfTheWeekCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRisingStarOfTheWeekAsync(string applicationID, string loginID, string loginSecret, int raceId, System.DateTime todaysDateTime) {
            this.GetRisingStarOfTheWeekAsync(applicationID, loginID, loginSecret, raceId, todaysDateTime, null);
        }
        
        public void GetRisingStarOfTheWeekAsync(string applicationID, string loginID, string loginSecret, int raceId, System.DateTime todaysDateTime, object userState) {
            if ((this.onBeginGetRisingStarOfTheWeekDelegate == null)) {
                this.onBeginGetRisingStarOfTheWeekDelegate = new BeginOperationDelegate(this.OnBeginGetRisingStarOfTheWeek);
            }
            if ((this.onEndGetRisingStarOfTheWeekDelegate == null)) {
                this.onEndGetRisingStarOfTheWeekDelegate = new EndOperationDelegate(this.OnEndGetRisingStarOfTheWeek);
            }
            if ((this.onGetRisingStarOfTheWeekCompletedDelegate == null)) {
                this.onGetRisingStarOfTheWeekCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRisingStarOfTheWeekCompleted);
            }
            base.InvokeAsync(this.onBeginGetRisingStarOfTheWeekDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceId,
                        todaysDateTime}, this.onEndGetRisingStarOfTheWeekDelegate, this.onGetRisingStarOfTheWeekCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetHighscores_BestPersonsInMyList(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHighscores_BestPersonsInMyList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetHighscores_BestPersonsInMyList(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequest inValue = new MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetHighscores_BestPersonsInMyList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetHighscores_BestPersonsInMyList(System.IAsyncResult result) {
            return base.Channel.EndGetHighscores_BestPersonsInMyList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> EndGetHighscores_BestPersonsInMyList(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetHighscores_BestPersonsInMyList(result);
            return retVal.Body.GetHighscores_BestPersonsInMyListResult;
        }
        
        private System.IAsyncResult OnBeginGetHighscores_BestPersonsInMyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetHighscores_BestPersonsInMyList(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetHighscores_BestPersonsInMyList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonScoreResult> retVal = this.EndGetHighscores_BestPersonsInMyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHighscores_BestPersonsInMyListCompleted(object state) {
            if ((this.GetHighscores_BestPersonsInMyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHighscores_BestPersonsInMyListCompleted(this, new GetHighscores_BestPersonsInMyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHighscores_BestPersonsInMyListAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetHighscores_BestPersonsInMyListAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetHighscores_BestPersonsInMyListAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetHighscores_BestPersonsInMyListDelegate == null)) {
                this.onBeginGetHighscores_BestPersonsInMyListDelegate = new BeginOperationDelegate(this.OnBeginGetHighscores_BestPersonsInMyList);
            }
            if ((this.onEndGetHighscores_BestPersonsInMyListDelegate == null)) {
                this.onEndGetHighscores_BestPersonsInMyListDelegate = new EndOperationDelegate(this.OnEndGetHighscores_BestPersonsInMyList);
            }
            if ((this.onGetHighscores_BestPersonsInMyListCompletedDelegate == null)) {
                this.onGetHighscores_BestPersonsInMyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHighscores_BestPersonsInMyListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHighscores_BestPersonsInMyListDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetHighscores_BestPersonsInMyListDelegate, this.onGetHighscores_BestPersonsInMyListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginIsMyFriend(MotionsRace.WinPhone.MobileService.IsMyFriendRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsMyFriend(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginIsMyFriend(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.IsMyFriendRequest inValue = new MotionsRace.WinPhone.MobileService.IsMyFriendRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.IsMyFriendRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginIsMyFriend(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.IsMyFriendResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndIsMyFriend(System.IAsyncResult result) {
            return base.Channel.EndIsMyFriend(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndIsMyFriend(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.IsMyFriendResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndIsMyFriend(result);
            return retVal.Body.IsMyFriendResult;
        }
        
        private System.IAsyncResult OnBeginIsMyFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginIsMyFriend(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndIsMyFriend(System.IAsyncResult result) {
            bool retVal = this.EndIsMyFriend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsMyFriendCompleted(object state) {
            if ((this.IsMyFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsMyFriendCompleted(this, new IsMyFriendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsMyFriendAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.IsMyFriendAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void IsMyFriendAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginIsMyFriendDelegate == null)) {
                this.onBeginIsMyFriendDelegate = new BeginOperationDelegate(this.OnBeginIsMyFriend);
            }
            if ((this.onEndIsMyFriendDelegate == null)) {
                this.onEndIsMyFriendDelegate = new EndOperationDelegate(this.OnEndIsMyFriend);
            }
            if ((this.onIsMyFriendCompletedDelegate == null)) {
                this.onIsMyFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsMyFriendCompleted);
            }
            base.InvokeAsync(this.onBeginIsMyFriendDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndIsMyFriendDelegate, this.onIsMyFriendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMyFriends(MotionsRace.WinPhone.MobileService.GetMyFriendsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyFriends(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMyFriends(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMyFriendsRequest inValue = new MotionsRace.WinPhone.MobileService.GetMyFriendsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMyFriendsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMyFriends(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMyFriendsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMyFriends(System.IAsyncResult result) {
            return base.Channel.EndGetMyFriends(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> EndGetMyFriends(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMyFriendsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMyFriends(result);
            return retVal.Body.GetMyFriendsResult;
        }
        
        private System.IAsyncResult OnBeginGetMyFriends(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetMyFriends(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetMyFriends(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> retVal = this.EndGetMyFriends(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyFriendsCompleted(object state) {
            if ((this.GetMyFriendsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyFriendsCompleted(this, new GetMyFriendsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyFriendsAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetMyFriendsAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetMyFriendsAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetMyFriendsDelegate == null)) {
                this.onBeginGetMyFriendsDelegate = new BeginOperationDelegate(this.OnBeginGetMyFriends);
            }
            if ((this.onEndGetMyFriendsDelegate == null)) {
                this.onEndGetMyFriendsDelegate = new EndOperationDelegate(this.OnEndGetMyFriends);
            }
            if ((this.onGetMyFriendsCompletedDelegate == null)) {
                this.onGetMyFriendsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyFriendsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyFriendsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetMyFriendsDelegate, this.onGetMyFriendsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginRemoveFriend(MotionsRace.WinPhone.MobileService.RemoveFriendRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFriend(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRemoveFriend(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.RemoveFriendRequest inValue = new MotionsRace.WinPhone.MobileService.RemoveFriendRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.RemoveFriendRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginRemoveFriend(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.RemoveFriendResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndRemoveFriend(System.IAsyncResult result) {
            return base.Channel.EndRemoveFriend(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndRemoveFriend(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RemoveFriendResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndRemoveFriend(result);
        }
        
        private System.IAsyncResult OnBeginRemoveFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginRemoveFriend(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndRemoveFriend(System.IAsyncResult result) {
            this.EndRemoveFriend(result);
            return null;
        }
        
        private void OnRemoveFriendCompleted(object state) {
            if ((this.RemoveFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFriendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFriendAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.RemoveFriendAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void RemoveFriendAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginRemoveFriendDelegate == null)) {
                this.onBeginRemoveFriendDelegate = new BeginOperationDelegate(this.OnBeginRemoveFriend);
            }
            if ((this.onEndRemoveFriendDelegate == null)) {
                this.onEndRemoveFriendDelegate = new EndOperationDelegate(this.OnEndRemoveFriend);
            }
            if ((this.onRemoveFriendCompletedDelegate == null)) {
                this.onRemoveFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFriendCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFriendDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndRemoveFriendDelegate, this.onRemoveFriendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginAddFriends(MotionsRace.WinPhone.MobileService.AddFriendsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFriends(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddFriends(string applicationID, string loginID, string loginSecret, int raceID, MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.AddFriendsRequest inValue = new MotionsRace.WinPhone.MobileService.AddFriendsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.AddFriendsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.personIDs = personIDs;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginAddFriends(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.AddFriendsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndAddFriends(System.IAsyncResult result) {
            return base.Channel.EndAddFriends(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndAddFriends(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.AddFriendsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndAddFriends(result);
            return retVal.Body.AddFriendsResult;
        }
        
        private System.IAsyncResult OnBeginAddFriends(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs = ((MotionsRace.WinPhone.MobileService.ArrayOfInt)(inValues[4]));
            return this.BeginAddFriends(applicationID, loginID, loginSecret, raceID, personIDs, callback, asyncState);
        }
        
        private object[] OnEndAddFriends(System.IAsyncResult result) {
            bool retVal = this.EndAddFriends(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddFriendsCompleted(object state) {
            if ((this.AddFriendsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFriendsCompleted(this, new AddFriendsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFriendsAsync(string applicationID, string loginID, string loginSecret, int raceID, MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs) {
            this.AddFriendsAsync(applicationID, loginID, loginSecret, raceID, personIDs, null);
        }
        
        public void AddFriendsAsync(string applicationID, string loginID, string loginSecret, int raceID, MotionsRace.WinPhone.MobileService.ArrayOfInt personIDs, object userState) {
            if ((this.onBeginAddFriendsDelegate == null)) {
                this.onBeginAddFriendsDelegate = new BeginOperationDelegate(this.OnBeginAddFriends);
            }
            if ((this.onEndAddFriendsDelegate == null)) {
                this.onEndAddFriendsDelegate = new EndOperationDelegate(this.OnEndAddFriends);
            }
            if ((this.onAddFriendsCompletedDelegate == null)) {
                this.onAddFriendsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFriendsCompleted);
            }
            base.InvokeAsync(this.onBeginAddFriendsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        personIDs}, this.onEndAddFriendsDelegate, this.onAddFriendsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMostRecentTeamActivity(MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMostRecentTeamActivity(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMostRecentTeamActivity(string applicationID, string loginID, string loginSecret, int maxNumberOfItems, int teamID, string cultureName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequest inValue = new MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.maxNumberOfItems = maxNumberOfItems;
            inValue.Body.teamID = teamID;
            inValue.Body.cultureName = cultureName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMostRecentTeamActivity(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMostRecentTeamActivity(System.IAsyncResult result) {
            return base.Channel.EndGetMostRecentTeamActivity(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream> EndGetMostRecentTeamActivity(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMostRecentTeamActivity(result);
            return retVal.Body.GetMostRecentTeamActivityResult;
        }
        
        private System.IAsyncResult OnBeginGetMostRecentTeamActivity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int maxNumberOfItems = ((int)(inValues[3]));
            int teamID = ((int)(inValues[4]));
            string cultureName = ((string)(inValues[5]));
            return this.BeginGetMostRecentTeamActivity(applicationID, loginID, loginSecret, maxNumberOfItems, teamID, cultureName, callback, asyncState);
        }
        
        private object[] OnEndGetMostRecentTeamActivity(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ActivityStream> retVal = this.EndGetMostRecentTeamActivity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMostRecentTeamActivityCompleted(object state) {
            if ((this.GetMostRecentTeamActivityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMostRecentTeamActivityCompleted(this, new GetMostRecentTeamActivityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMostRecentTeamActivityAsync(string applicationID, string loginID, string loginSecret, int maxNumberOfItems, int teamID, string cultureName) {
            this.GetMostRecentTeamActivityAsync(applicationID, loginID, loginSecret, maxNumberOfItems, teamID, cultureName, null);
        }
        
        public void GetMostRecentTeamActivityAsync(string applicationID, string loginID, string loginSecret, int maxNumberOfItems, int teamID, string cultureName, object userState) {
            if ((this.onBeginGetMostRecentTeamActivityDelegate == null)) {
                this.onBeginGetMostRecentTeamActivityDelegate = new BeginOperationDelegate(this.OnBeginGetMostRecentTeamActivity);
            }
            if ((this.onEndGetMostRecentTeamActivityDelegate == null)) {
                this.onEndGetMostRecentTeamActivityDelegate = new EndOperationDelegate(this.OnEndGetMostRecentTeamActivity);
            }
            if ((this.onGetMostRecentTeamActivityCompletedDelegate == null)) {
                this.onGetMostRecentTeamActivityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMostRecentTeamActivityCompleted);
            }
            base.InvokeAsync(this.onBeginGetMostRecentTeamActivityDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        maxNumberOfItems,
                        teamID,
                        cultureName}, this.onEndGetMostRecentTeamActivityDelegate, this.onGetMostRecentTeamActivityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetAllPersonsOfTheTeam(MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPersonsOfTheTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAllPersonsOfTheTeam(string applicationID, string loginID, string loginSecret, int teamID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequest inValue = new MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamID = teamID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetAllPersonsOfTheTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetAllPersonsOfTheTeam(System.IAsyncResult result) {
            return base.Channel.EndGetAllPersonsOfTheTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> EndGetAllPersonsOfTheTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetAllPersonsOfTheTeam(result);
            return retVal.Body.GetAllPersonsOfTheTeamResult;
        }
        
        private System.IAsyncResult OnBeginGetAllPersonsOfTheTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int teamID = ((int)(inValues[3]));
            return this.BeginGetAllPersonsOfTheTeam(applicationID, loginID, loginSecret, teamID, callback, asyncState);
        }
        
        private object[] OnEndGetAllPersonsOfTheTeam(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonBriefInfoResult> retVal = this.EndGetAllPersonsOfTheTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPersonsOfTheTeamCompleted(object state) {
            if ((this.GetAllPersonsOfTheTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPersonsOfTheTeamCompleted(this, new GetAllPersonsOfTheTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPersonsOfTheTeamAsync(string applicationID, string loginID, string loginSecret, int teamID) {
            this.GetAllPersonsOfTheTeamAsync(applicationID, loginID, loginSecret, teamID, null);
        }
        
        public void GetAllPersonsOfTheTeamAsync(string applicationID, string loginID, string loginSecret, int teamID, object userState) {
            if ((this.onBeginGetAllPersonsOfTheTeamDelegate == null)) {
                this.onBeginGetAllPersonsOfTheTeamDelegate = new BeginOperationDelegate(this.OnBeginGetAllPersonsOfTheTeam);
            }
            if ((this.onEndGetAllPersonsOfTheTeamDelegate == null)) {
                this.onEndGetAllPersonsOfTheTeamDelegate = new EndOperationDelegate(this.OnEndGetAllPersonsOfTheTeam);
            }
            if ((this.onGetAllPersonsOfTheTeamCompletedDelegate == null)) {
                this.onGetAllPersonsOfTheTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPersonsOfTheTeamCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPersonsOfTheTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamID}, this.onEndGetAllPersonsOfTheTeamDelegate, this.onGetAllPersonsOfTheTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTeamInfo(MotionsRace.WinPhone.MobileService.GetTeamInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTeamInfo(string applicationID, string loginID, string loginSecret, int teamID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTeamInfoRequest inValue = new MotionsRace.WinPhone.MobileService.GetTeamInfoRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTeamInfoRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamID = teamID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTeamInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTeamInfoResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTeamInfo(System.IAsyncResult result) {
            return base.Channel.EndGetTeamInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.TeamInfoResult EndGetTeamInfo(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTeamInfoResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTeamInfo(result);
            return retVal.Body.GetTeamInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetTeamInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int teamID = ((int)(inValues[3]));
            return this.BeginGetTeamInfo(applicationID, loginID, loginSecret, teamID, callback, asyncState);
        }
        
        private object[] OnEndGetTeamInfo(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.TeamInfoResult retVal = this.EndGetTeamInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamInfoCompleted(object state) {
            if ((this.GetTeamInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamInfoCompleted(this, new GetTeamInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamInfoAsync(string applicationID, string loginID, string loginSecret, int teamID) {
            this.GetTeamInfoAsync(applicationID, loginID, loginSecret, teamID, null);
        }
        
        public void GetTeamInfoAsync(string applicationID, string loginID, string loginSecret, int teamID, object userState) {
            if ((this.onBeginGetTeamInfoDelegate == null)) {
                this.onBeginGetTeamInfoDelegate = new BeginOperationDelegate(this.OnBeginGetTeamInfo);
            }
            if ((this.onEndGetTeamInfoDelegate == null)) {
                this.onEndGetTeamInfoDelegate = new EndOperationDelegate(this.OnEndGetTeamInfo);
            }
            if ((this.onGetTeamInfoCompletedDelegate == null)) {
                this.onGetTeamInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamInfoDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamID}, this.onEndGetTeamInfoDelegate, this.onGetTeamInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginUpdateTeam(MotionsRace.WinPhone.MobileService.UpdateTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateTeam(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.UpdateTeamRequest inValue = new MotionsRace.WinPhone.MobileService.UpdateTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.UpdateTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamInfoResult = teamInfoResult;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginUpdateTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.UpdateTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndUpdateTeam(System.IAsyncResult result) {
            return base.Channel.EndUpdateTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUpdateTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.UpdateTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndUpdateTeam(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult = ((MotionsRace.WinPhone.MobileService.TeamInfoResult)(inValues[3]));
            return this.BeginUpdateTeam(applicationID, loginID, loginSecret, teamInfoResult, callback, asyncState);
        }
        
        private object[] OnEndUpdateTeam(System.IAsyncResult result) {
            this.EndUpdateTeam(result);
            return null;
        }
        
        private void OnUpdateTeamCompleted(object state) {
            if ((this.UpdateTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTeamAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult) {
            this.UpdateTeamAsync(applicationID, loginID, loginSecret, teamInfoResult, null);
        }
        
        public void UpdateTeamAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.TeamInfoResult teamInfoResult, object userState) {
            if ((this.onBeginUpdateTeamDelegate == null)) {
                this.onBeginUpdateTeamDelegate = new BeginOperationDelegate(this.OnBeginUpdateTeam);
            }
            if ((this.onEndUpdateTeamDelegate == null)) {
                this.onEndUpdateTeamDelegate = new EndOperationDelegate(this.OnEndUpdateTeam);
            }
            if ((this.onUpdateTeamCompletedDelegate == null)) {
                this.onUpdateTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTeamCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamInfoResult}, this.onEndUpdateTeamDelegate, this.onUpdateTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTeamsByRaceID(MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamsByRaceID(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTeamsByRaceID(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequest inValue = new MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTeamsByRaceID(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTeamsByRaceID(System.IAsyncResult result) {
            return base.Channel.EndGetTeamsByRaceID(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> EndGetTeamsByRaceID(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTeamsByRaceID(result);
            return retVal.Body.GetTeamsByRaceIDResult;
        }
        
        private System.IAsyncResult OnBeginGetTeamsByRaceID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetTeamsByRaceID(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTeamsByRaceID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> retVal = this.EndGetTeamsByRaceID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamsByRaceIDCompleted(object state) {
            if ((this.GetTeamsByRaceIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamsByRaceIDCompleted(this, new GetTeamsByRaceIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamsByRaceIDAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetTeamsByRaceIDAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetTeamsByRaceIDAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetTeamsByRaceIDDelegate == null)) {
                this.onBeginGetTeamsByRaceIDDelegate = new BeginOperationDelegate(this.OnBeginGetTeamsByRaceID);
            }
            if ((this.onEndGetTeamsByRaceIDDelegate == null)) {
                this.onEndGetTeamsByRaceIDDelegate = new EndOperationDelegate(this.OnEndGetTeamsByRaceID);
            }
            if ((this.onGetTeamsByRaceIDCompletedDelegate == null)) {
                this.onGetTeamsByRaceIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamsByRaceIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamsByRaceIDDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetTeamsByRaceIDDelegate, this.onGetTeamsByRaceIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginCheckIfPersonIsManagerOfTeam(MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckIfPersonIsManagerOfTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCheckIfPersonIsManagerOfTeam(string applicationID, string loginID, string loginSecret, int personID, int teamID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequest inValue = new MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.teamID = teamID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginCheckIfPersonIsManagerOfTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndCheckIfPersonIsManagerOfTeam(System.IAsyncResult result) {
            return base.Channel.EndCheckIfPersonIsManagerOfTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndCheckIfPersonIsManagerOfTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndCheckIfPersonIsManagerOfTeam(result);
            return retVal.Body.CheckIfPersonIsManagerOfTeamResult;
        }
        
        private System.IAsyncResult OnBeginCheckIfPersonIsManagerOfTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int teamID = ((int)(inValues[4]));
            return this.BeginCheckIfPersonIsManagerOfTeam(applicationID, loginID, loginSecret, personID, teamID, callback, asyncState);
        }
        
        private object[] OnEndCheckIfPersonIsManagerOfTeam(System.IAsyncResult result) {
            bool retVal = this.EndCheckIfPersonIsManagerOfTeam(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckIfPersonIsManagerOfTeamCompleted(object state) {
            if ((this.CheckIfPersonIsManagerOfTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckIfPersonIsManagerOfTeamCompleted(this, new CheckIfPersonIsManagerOfTeamCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckIfPersonIsManagerOfTeamAsync(string applicationID, string loginID, string loginSecret, int personID, int teamID) {
            this.CheckIfPersonIsManagerOfTeamAsync(applicationID, loginID, loginSecret, personID, teamID, null);
        }
        
        public void CheckIfPersonIsManagerOfTeamAsync(string applicationID, string loginID, string loginSecret, int personID, int teamID, object userState) {
            if ((this.onBeginCheckIfPersonIsManagerOfTeamDelegate == null)) {
                this.onBeginCheckIfPersonIsManagerOfTeamDelegate = new BeginOperationDelegate(this.OnBeginCheckIfPersonIsManagerOfTeam);
            }
            if ((this.onEndCheckIfPersonIsManagerOfTeamDelegate == null)) {
                this.onEndCheckIfPersonIsManagerOfTeamDelegate = new EndOperationDelegate(this.OnEndCheckIfPersonIsManagerOfTeam);
            }
            if ((this.onCheckIfPersonIsManagerOfTeamCompletedDelegate == null)) {
                this.onCheckIfPersonIsManagerOfTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckIfPersonIsManagerOfTeamCompleted);
            }
            base.InvokeAsync(this.onBeginCheckIfPersonIsManagerOfTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        teamID}, this.onEndCheckIfPersonIsManagerOfTeamDelegate, this.onCheckIfPersonIsManagerOfTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTeamsPersonIsAManagerOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamsPersonIsAManagerOf(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTeamsPersonIsAManagerOf(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequest inValue = new MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTeamsPersonIsAManagerOf(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTeamsPersonIsAManagerOf(System.IAsyncResult result) {
            return base.Channel.EndGetTeamsPersonIsAManagerOf(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> EndGetTeamsPersonIsAManagerOf(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTeamsPersonIsAManagerOf(result);
            return retVal.Body.GetTeamsPersonIsAManagerOfResult;
        }
        
        private System.IAsyncResult OnBeginGetTeamsPersonIsAManagerOf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetTeamsPersonIsAManagerOf(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTeamsPersonIsAManagerOf(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> retVal = this.EndGetTeamsPersonIsAManagerOf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamsPersonIsAManagerOfCompleted(object state) {
            if ((this.GetTeamsPersonIsAManagerOfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamsPersonIsAManagerOfCompleted(this, new GetTeamsPersonIsAManagerOfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamsPersonIsAManagerOfAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.GetTeamsPersonIsAManagerOfAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void GetTeamsPersonIsAManagerOfAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginGetTeamsPersonIsAManagerOfDelegate == null)) {
                this.onBeginGetTeamsPersonIsAManagerOfDelegate = new BeginOperationDelegate(this.OnBeginGetTeamsPersonIsAManagerOf);
            }
            if ((this.onEndGetTeamsPersonIsAManagerOfDelegate == null)) {
                this.onEndGetTeamsPersonIsAManagerOfDelegate = new EndOperationDelegate(this.OnEndGetTeamsPersonIsAManagerOf);
            }
            if ((this.onGetTeamsPersonIsAManagerOfCompletedDelegate == null)) {
                this.onGetTeamsPersonIsAManagerOfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamsPersonIsAManagerOfCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamsPersonIsAManagerOfDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndGetTeamsPersonIsAManagerOfDelegate, this.onGetTeamsPersonIsAManagerOfCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetTeamsPersonIsAMemberOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamsPersonIsAMemberOf(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetTeamsPersonIsAMemberOf(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequest inValue = new MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetTeamsPersonIsAMemberOf(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetTeamsPersonIsAMemberOf(System.IAsyncResult result) {
            return base.Channel.EndGetTeamsPersonIsAMemberOf(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> EndGetTeamsPersonIsAMemberOf(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetTeamsPersonIsAMemberOf(result);
            return retVal.Body.GetTeamsPersonIsAMemberOfResult;
        }
        
        private System.IAsyncResult OnBeginGetTeamsPersonIsAMemberOf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetTeamsPersonIsAMemberOf(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetTeamsPersonIsAMemberOf(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> retVal = this.EndGetTeamsPersonIsAMemberOf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamsPersonIsAMemberOfCompleted(object state) {
            if ((this.GetTeamsPersonIsAMemberOfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamsPersonIsAMemberOfCompleted(this, new GetTeamsPersonIsAMemberOfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamsPersonIsAMemberOfAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.GetTeamsPersonIsAMemberOfAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void GetTeamsPersonIsAMemberOfAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginGetTeamsPersonIsAMemberOfDelegate == null)) {
                this.onBeginGetTeamsPersonIsAMemberOfDelegate = new BeginOperationDelegate(this.OnBeginGetTeamsPersonIsAMemberOf);
            }
            if ((this.onEndGetTeamsPersonIsAMemberOfDelegate == null)) {
                this.onEndGetTeamsPersonIsAMemberOfDelegate = new EndOperationDelegate(this.OnEndGetTeamsPersonIsAMemberOf);
            }
            if ((this.onGetTeamsPersonIsAMemberOfCompletedDelegate == null)) {
                this.onGetTeamsPersonIsAMemberOfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamsPersonIsAMemberOfCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamsPersonIsAMemberOfDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndGetTeamsPersonIsAMemberOfDelegate, this.onGetTeamsPersonIsAMemberOfCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMyTeams(MotionsRace.WinPhone.MobileService.GetMyTeamsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyTeams(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMyTeams(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMyTeamsRequest inValue = new MotionsRace.WinPhone.MobileService.GetMyTeamsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMyTeamsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMyTeams(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMyTeamsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMyTeams(System.IAsyncResult result) {
            return base.Channel.EndGetMyTeams(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> EndGetMyTeams(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMyTeamsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMyTeams(result);
            return retVal.Body.GetMyTeamsResult;
        }
        
        private System.IAsyncResult OnBeginGetMyTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetMyTeams(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetMyTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.TeamInfoResult> retVal = this.EndGetMyTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyTeamsCompleted(object state) {
            if ((this.GetMyTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyTeamsCompleted(this, new GetMyTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyTeamsAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetMyTeamsAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetMyTeamsAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetMyTeamsDelegate == null)) {
                this.onBeginGetMyTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetMyTeams);
            }
            if ((this.onEndGetMyTeamsDelegate == null)) {
                this.onEndGetMyTeamsDelegate = new EndOperationDelegate(this.OnEndGetMyTeams);
            }
            if ((this.onGetMyTeamsCompletedDelegate == null)) {
                this.onGetMyTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyTeamsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetMyTeamsDelegate, this.onGetMyTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginUpdateTeamPictureURL(MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTeamPictureURL(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateTeamPictureURL(string applicationID, string loginID, string loginSecret, int teamID, string pictureURL, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequest inValue = new MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.teamID = teamID;
            inValue.Body.pictureURL = pictureURL;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginUpdateTeamPictureURL(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndUpdateTeamPictureURL(System.IAsyncResult result) {
            return base.Channel.EndUpdateTeamPictureURL(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUpdateTeamPictureURL(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndUpdateTeamPictureURL(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTeamPictureURL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int teamID = ((int)(inValues[3]));
            string pictureURL = ((string)(inValues[4]));
            return this.BeginUpdateTeamPictureURL(applicationID, loginID, loginSecret, teamID, pictureURL, callback, asyncState);
        }
        
        private object[] OnEndUpdateTeamPictureURL(System.IAsyncResult result) {
            this.EndUpdateTeamPictureURL(result);
            return null;
        }
        
        private void OnUpdateTeamPictureURLCompleted(object state) {
            if ((this.UpdateTeamPictureURLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTeamPictureURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTeamPictureURLAsync(string applicationID, string loginID, string loginSecret, int teamID, string pictureURL) {
            this.UpdateTeamPictureURLAsync(applicationID, loginID, loginSecret, teamID, pictureURL, null);
        }
        
        public void UpdateTeamPictureURLAsync(string applicationID, string loginID, string loginSecret, int teamID, string pictureURL, object userState) {
            if ((this.onBeginUpdateTeamPictureURLDelegate == null)) {
                this.onBeginUpdateTeamPictureURLDelegate = new BeginOperationDelegate(this.OnBeginUpdateTeamPictureURL);
            }
            if ((this.onEndUpdateTeamPictureURLDelegate == null)) {
                this.onEndUpdateTeamPictureURLDelegate = new EndOperationDelegate(this.OnEndUpdateTeamPictureURL);
            }
            if ((this.onUpdateTeamPictureURLCompletedDelegate == null)) {
                this.onUpdateTeamPictureURLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTeamPictureURLCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTeamPictureURLDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        teamID,
                        pictureURL}, this.onEndUpdateTeamPictureURLDelegate, this.onUpdateTeamPictureURLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetNumberOfUnreadPersonalMessages(MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNumberOfUnreadPersonalMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetNumberOfUnreadPersonalMessages(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequest inValue = new MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetNumberOfUnreadPersonalMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetNumberOfUnreadPersonalMessages(System.IAsyncResult result) {
            return base.Channel.EndGetNumberOfUnreadPersonalMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndGetNumberOfUnreadPersonalMessages(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetNumberOfUnreadPersonalMessages(result);
            return retVal.Body.GetNumberOfUnreadPersonalMessagesResult;
        }
        
        private System.IAsyncResult OnBeginGetNumberOfUnreadPersonalMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetNumberOfUnreadPersonalMessages(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetNumberOfUnreadPersonalMessages(System.IAsyncResult result) {
            int retVal = this.EndGetNumberOfUnreadPersonalMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNumberOfUnreadPersonalMessagesCompleted(object state) {
            if ((this.GetNumberOfUnreadPersonalMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNumberOfUnreadPersonalMessagesCompleted(this, new GetNumberOfUnreadPersonalMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNumberOfUnreadPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetNumberOfUnreadPersonalMessagesAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetNumberOfUnreadPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetNumberOfUnreadPersonalMessagesDelegate == null)) {
                this.onBeginGetNumberOfUnreadPersonalMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetNumberOfUnreadPersonalMessages);
            }
            if ((this.onEndGetNumberOfUnreadPersonalMessagesDelegate == null)) {
                this.onEndGetNumberOfUnreadPersonalMessagesDelegate = new EndOperationDelegate(this.OnEndGetNumberOfUnreadPersonalMessages);
            }
            if ((this.onGetNumberOfUnreadPersonalMessagesCompletedDelegate == null)) {
                this.onGetNumberOfUnreadPersonalMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNumberOfUnreadPersonalMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNumberOfUnreadPersonalMessagesDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetNumberOfUnreadPersonalMessagesDelegate, this.onGetNumberOfUnreadPersonalMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginMarkPersonalMessagesAsRead(MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkPersonalMessagesAsRead(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMarkPersonalMessagesAsRead(string applicationID, string loginID, string loginSecret, int lastReadPersonalMessageID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequest inValue = new MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.lastReadPersonalMessageID = lastReadPersonalMessageID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginMarkPersonalMessagesAsRead(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndMarkPersonalMessagesAsRead(System.IAsyncResult result) {
            return base.Channel.EndMarkPersonalMessagesAsRead(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndMarkPersonalMessagesAsRead(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndMarkPersonalMessagesAsRead(result);
        }
        
        private System.IAsyncResult OnBeginMarkPersonalMessagesAsRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int lastReadPersonalMessageID = ((int)(inValues[3]));
            return this.BeginMarkPersonalMessagesAsRead(applicationID, loginID, loginSecret, lastReadPersonalMessageID, callback, asyncState);
        }
        
        private object[] OnEndMarkPersonalMessagesAsRead(System.IAsyncResult result) {
            this.EndMarkPersonalMessagesAsRead(result);
            return null;
        }
        
        private void OnMarkPersonalMessagesAsReadCompleted(object state) {
            if ((this.MarkPersonalMessagesAsReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkPersonalMessagesAsReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkPersonalMessagesAsReadAsync(string applicationID, string loginID, string loginSecret, int lastReadPersonalMessageID) {
            this.MarkPersonalMessagesAsReadAsync(applicationID, loginID, loginSecret, lastReadPersonalMessageID, null);
        }
        
        public void MarkPersonalMessagesAsReadAsync(string applicationID, string loginID, string loginSecret, int lastReadPersonalMessageID, object userState) {
            if ((this.onBeginMarkPersonalMessagesAsReadDelegate == null)) {
                this.onBeginMarkPersonalMessagesAsReadDelegate = new BeginOperationDelegate(this.OnBeginMarkPersonalMessagesAsRead);
            }
            if ((this.onEndMarkPersonalMessagesAsReadDelegate == null)) {
                this.onEndMarkPersonalMessagesAsReadDelegate = new EndOperationDelegate(this.OnEndMarkPersonalMessagesAsRead);
            }
            if ((this.onMarkPersonalMessagesAsReadCompletedDelegate == null)) {
                this.onMarkPersonalMessagesAsReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkPersonalMessagesAsReadCompleted);
            }
            base.InvokeAsync(this.onBeginMarkPersonalMessagesAsReadDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        lastReadPersonalMessageID}, this.onEndMarkPersonalMessagesAsReadDelegate, this.onMarkPersonalMessagesAsReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginMarkOrUnmarkPersonalMessageAsRead(MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkOrUnmarkPersonalMessageAsRead(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMarkOrUnmarkPersonalMessageAsRead(string applicationID, string loginID, string loginSecret, int personalMessageID, bool isRead, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequest inValue = new MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personalMessageID = personalMessageID;
            inValue.Body.isRead = isRead;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginMarkOrUnmarkPersonalMessageAsRead(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndMarkOrUnmarkPersonalMessageAsRead(System.IAsyncResult result) {
            return base.Channel.EndMarkOrUnmarkPersonalMessageAsRead(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndMarkOrUnmarkPersonalMessageAsRead(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndMarkOrUnmarkPersonalMessageAsRead(result);
        }
        
        private System.IAsyncResult OnBeginMarkOrUnmarkPersonalMessageAsRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personalMessageID = ((int)(inValues[3]));
            bool isRead = ((bool)(inValues[4]));
            return this.BeginMarkOrUnmarkPersonalMessageAsRead(applicationID, loginID, loginSecret, personalMessageID, isRead, callback, asyncState);
        }
        
        private object[] OnEndMarkOrUnmarkPersonalMessageAsRead(System.IAsyncResult result) {
            this.EndMarkOrUnmarkPersonalMessageAsRead(result);
            return null;
        }
        
        private void OnMarkOrUnmarkPersonalMessageAsReadCompleted(object state) {
            if ((this.MarkOrUnmarkPersonalMessageAsReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkOrUnmarkPersonalMessageAsReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkOrUnmarkPersonalMessageAsReadAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, bool isRead) {
            this.MarkOrUnmarkPersonalMessageAsReadAsync(applicationID, loginID, loginSecret, personalMessageID, isRead, null);
        }
        
        public void MarkOrUnmarkPersonalMessageAsReadAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, bool isRead, object userState) {
            if ((this.onBeginMarkOrUnmarkPersonalMessageAsReadDelegate == null)) {
                this.onBeginMarkOrUnmarkPersonalMessageAsReadDelegate = new BeginOperationDelegate(this.OnBeginMarkOrUnmarkPersonalMessageAsRead);
            }
            if ((this.onEndMarkOrUnmarkPersonalMessageAsReadDelegate == null)) {
                this.onEndMarkOrUnmarkPersonalMessageAsReadDelegate = new EndOperationDelegate(this.OnEndMarkOrUnmarkPersonalMessageAsRead);
            }
            if ((this.onMarkOrUnmarkPersonalMessageAsReadCompletedDelegate == null)) {
                this.onMarkOrUnmarkPersonalMessageAsReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkOrUnmarkPersonalMessageAsReadCompleted);
            }
            base.InvokeAsync(this.onBeginMarkOrUnmarkPersonalMessageAsReadDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personalMessageID,
                        isRead}, this.onEndMarkOrUnmarkPersonalMessageAsReadDelegate, this.onMarkOrUnmarkPersonalMessageAsReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginArchivePersonalMessage(MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginArchivePersonalMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginArchivePersonalMessage(string applicationID, string loginID, string loginSecret, int personalMessageID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequest inValue = new MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personalMessageID = personalMessageID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginArchivePersonalMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndArchivePersonalMessage(System.IAsyncResult result) {
            return base.Channel.EndArchivePersonalMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndArchivePersonalMessage(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndArchivePersonalMessage(result);
        }
        
        private System.IAsyncResult OnBeginArchivePersonalMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personalMessageID = ((int)(inValues[3]));
            return this.BeginArchivePersonalMessage(applicationID, loginID, loginSecret, personalMessageID, callback, asyncState);
        }
        
        private object[] OnEndArchivePersonalMessage(System.IAsyncResult result) {
            this.EndArchivePersonalMessage(result);
            return null;
        }
        
        private void OnArchivePersonalMessageCompleted(object state) {
            if ((this.ArchivePersonalMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ArchivePersonalMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ArchivePersonalMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID) {
            this.ArchivePersonalMessageAsync(applicationID, loginID, loginSecret, personalMessageID, null);
        }
        
        public void ArchivePersonalMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, object userState) {
            if ((this.onBeginArchivePersonalMessageDelegate == null)) {
                this.onBeginArchivePersonalMessageDelegate = new BeginOperationDelegate(this.OnBeginArchivePersonalMessage);
            }
            if ((this.onEndArchivePersonalMessageDelegate == null)) {
                this.onEndArchivePersonalMessageDelegate = new EndOperationDelegate(this.OnEndArchivePersonalMessage);
            }
            if ((this.onArchivePersonalMessageCompletedDelegate == null)) {
                this.onArchivePersonalMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnArchivePersonalMessageCompleted);
            }
            base.InvokeAsync(this.onBeginArchivePersonalMessageDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personalMessageID}, this.onEndArchivePersonalMessageDelegate, this.onArchivePersonalMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetPersonalMessages(MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPersonalMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPersonalMessages(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, bool archive, bool getOnlyPublicMessages, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequest inValue = new MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.pageNumber = pageNumber;
            inValue.Body.pageSize = pageSize;
            inValue.Body.archive = archive;
            inValue.Body.getOnlyPublicMessages = getOnlyPublicMessages;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetPersonalMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetPersonalMessages(System.IAsyncResult result) {
            return base.Channel.EndGetPersonalMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> EndGetPersonalMessages(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetPersonalMessages(result);
            return retVal.Body.GetPersonalMessagesResult;
        }
        
        private System.IAsyncResult OnBeginGetPersonalMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int pageNumber = ((int)(inValues[3]));
            int pageSize = ((int)(inValues[4]));
            bool archive = ((bool)(inValues[5]));
            bool getOnlyPublicMessages = ((bool)(inValues[6]));
            int raceID = ((int)(inValues[7]));
            return this.BeginGetPersonalMessages(applicationID, loginID, loginSecret, pageNumber, pageSize, archive, getOnlyPublicMessages, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetPersonalMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> retVal = this.EndGetPersonalMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonalMessagesCompleted(object state) {
            if ((this.GetPersonalMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonalMessagesCompleted(this, new GetPersonalMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, bool archive, bool getOnlyPublicMessages, int raceID) {
            this.GetPersonalMessagesAsync(applicationID, loginID, loginSecret, pageNumber, pageSize, archive, getOnlyPublicMessages, raceID, null);
        }
        
        public void GetPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, bool archive, bool getOnlyPublicMessages, int raceID, object userState) {
            if ((this.onBeginGetPersonalMessagesDelegate == null)) {
                this.onBeginGetPersonalMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetPersonalMessages);
            }
            if ((this.onEndGetPersonalMessagesDelegate == null)) {
                this.onEndGetPersonalMessagesDelegate = new EndOperationDelegate(this.OnEndGetPersonalMessages);
            }
            if ((this.onGetPersonalMessagesCompletedDelegate == null)) {
                this.onGetPersonalMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonalMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonalMessagesDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        pageNumber,
                        pageSize,
                        archive,
                        getOnlyPublicMessages,
                        raceID}, this.onEndGetPersonalMessagesDelegate, this.onGetPersonalMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetSentPersonalMessages(MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSentPersonalMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetSentPersonalMessages(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequest inValue = new MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.pageNumber = pageNumber;
            inValue.Body.pageSize = pageSize;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetSentPersonalMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetSentPersonalMessages(System.IAsyncResult result) {
            return base.Channel.EndGetSentPersonalMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> EndGetSentPersonalMessages(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetSentPersonalMessages(result);
            return retVal.Body.GetSentPersonalMessagesResult;
        }
        
        private System.IAsyncResult OnBeginGetSentPersonalMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int pageNumber = ((int)(inValues[3]));
            int pageSize = ((int)(inValues[4]));
            int raceID = ((int)(inValues[5]));
            return this.BeginGetSentPersonalMessages(applicationID, loginID, loginSecret, pageNumber, pageSize, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetSentPersonalMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PersonalMessageInfoResult> retVal = this.EndGetSentPersonalMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSentPersonalMessagesCompleted(object state) {
            if ((this.GetSentPersonalMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSentPersonalMessagesCompleted(this, new GetSentPersonalMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSentPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, int raceID) {
            this.GetSentPersonalMessagesAsync(applicationID, loginID, loginSecret, pageNumber, pageSize, raceID, null);
        }
        
        public void GetSentPersonalMessagesAsync(string applicationID, string loginID, string loginSecret, int pageNumber, int pageSize, int raceID, object userState) {
            if ((this.onBeginGetSentPersonalMessagesDelegate == null)) {
                this.onBeginGetSentPersonalMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetSentPersonalMessages);
            }
            if ((this.onEndGetSentPersonalMessagesDelegate == null)) {
                this.onEndGetSentPersonalMessagesDelegate = new EndOperationDelegate(this.OnEndGetSentPersonalMessages);
            }
            if ((this.onGetSentPersonalMessagesCompletedDelegate == null)) {
                this.onGetSentPersonalMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSentPersonalMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSentPersonalMessagesDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        pageNumber,
                        pageSize,
                        raceID}, this.onEndGetSentPersonalMessagesDelegate, this.onGetSentPersonalMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginSendPersonalMessage(MotionsRace.WinPhone.MobileService.SendPersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendPersonalMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSendPersonalMessage(string applicationID, string loginID, string loginSecret, int raceID, int toPersonID, string messageText, bool isPublic, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.SendPersonalMessageRequest inValue = new MotionsRace.WinPhone.MobileService.SendPersonalMessageRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.SendPersonalMessageRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.toPersonID = toPersonID;
            inValue.Body.messageText = messageText;
            inValue.Body.isPublic = isPublic;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginSendPersonalMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndSendPersonalMessage(System.IAsyncResult result) {
            return base.Channel.EndSendPersonalMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndSendPersonalMessage(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndSendPersonalMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendPersonalMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int toPersonID = ((int)(inValues[4]));
            string messageText = ((string)(inValues[5]));
            bool isPublic = ((bool)(inValues[6]));
            return this.BeginSendPersonalMessage(applicationID, loginID, loginSecret, raceID, toPersonID, messageText, isPublic, callback, asyncState);
        }
        
        private object[] OnEndSendPersonalMessage(System.IAsyncResult result) {
            this.EndSendPersonalMessage(result);
            return null;
        }
        
        private void OnSendPersonalMessageCompleted(object state) {
            if ((this.SendPersonalMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendPersonalMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendPersonalMessageAsync(string applicationID, string loginID, string loginSecret, int raceID, int toPersonID, string messageText, bool isPublic) {
            this.SendPersonalMessageAsync(applicationID, loginID, loginSecret, raceID, toPersonID, messageText, isPublic, null);
        }
        
        public void SendPersonalMessageAsync(string applicationID, string loginID, string loginSecret, int raceID, int toPersonID, string messageText, bool isPublic, object userState) {
            if ((this.onBeginSendPersonalMessageDelegate == null)) {
                this.onBeginSendPersonalMessageDelegate = new BeginOperationDelegate(this.OnBeginSendPersonalMessage);
            }
            if ((this.onEndSendPersonalMessageDelegate == null)) {
                this.onEndSendPersonalMessageDelegate = new EndOperationDelegate(this.OnEndSendPersonalMessage);
            }
            if ((this.onSendPersonalMessageCompletedDelegate == null)) {
                this.onSendPersonalMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendPersonalMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendPersonalMessageDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        toPersonID,
                        messageText,
                        isPublic}, this.onEndSendPersonalMessageDelegate, this.onSendPersonalMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginDeletePersonalMessage(MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePersonalMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeletePersonalMessage(string applicationID, string loginID, string loginSecret, int personalMessageID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequest inValue = new MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personalMessageID = personalMessageID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginDeletePersonalMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndDeletePersonalMessage(System.IAsyncResult result) {
            return base.Channel.EndDeletePersonalMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndDeletePersonalMessage(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndDeletePersonalMessage(result);
        }
        
        private System.IAsyncResult OnBeginDeletePersonalMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personalMessageID = ((int)(inValues[3]));
            return this.BeginDeletePersonalMessage(applicationID, loginID, loginSecret, personalMessageID, callback, asyncState);
        }
        
        private object[] OnEndDeletePersonalMessage(System.IAsyncResult result) {
            this.EndDeletePersonalMessage(result);
            return null;
        }
        
        private void OnDeletePersonalMessageCompleted(object state) {
            if ((this.DeletePersonalMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePersonalMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePersonalMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID) {
            this.DeletePersonalMessageAsync(applicationID, loginID, loginSecret, personalMessageID, null);
        }
        
        public void DeletePersonalMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, object userState) {
            if ((this.onBeginDeletePersonalMessageDelegate == null)) {
                this.onBeginDeletePersonalMessageDelegate = new BeginOperationDelegate(this.OnBeginDeletePersonalMessage);
            }
            if ((this.onEndDeletePersonalMessageDelegate == null)) {
                this.onEndDeletePersonalMessageDelegate = new EndOperationDelegate(this.OnEndDeletePersonalMessage);
            }
            if ((this.onDeletePersonalMessageCompletedDelegate == null)) {
                this.onDeletePersonalMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePersonalMessageCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePersonalMessageDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personalMessageID}, this.onEndDeletePersonalMessageDelegate, this.onDeletePersonalMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginCreateReplyToMessage(MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateReplyToMessage(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCreateReplyToMessage(string applicationID, string loginID, string loginSecret, int personalMessageID, int columnWidth, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequest inValue = new MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personalMessageID = personalMessageID;
            inValue.Body.columnWidth = columnWidth;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginCreateReplyToMessage(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndCreateReplyToMessage(System.IAsyncResult result) {
            return base.Channel.EndCreateReplyToMessage(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndCreateReplyToMessage(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndCreateReplyToMessage(result);
            return retVal.Body.CreateReplyToMessageResult;
        }
        
        private System.IAsyncResult OnBeginCreateReplyToMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personalMessageID = ((int)(inValues[3]));
            int columnWidth = ((int)(inValues[4]));
            return this.BeginCreateReplyToMessage(applicationID, loginID, loginSecret, personalMessageID, columnWidth, callback, asyncState);
        }
        
        private object[] OnEndCreateReplyToMessage(System.IAsyncResult result) {
            string retVal = this.EndCreateReplyToMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateReplyToMessageCompleted(object state) {
            if ((this.CreateReplyToMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateReplyToMessageCompleted(this, new CreateReplyToMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateReplyToMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, int columnWidth) {
            this.CreateReplyToMessageAsync(applicationID, loginID, loginSecret, personalMessageID, columnWidth, null);
        }
        
        public void CreateReplyToMessageAsync(string applicationID, string loginID, string loginSecret, int personalMessageID, int columnWidth, object userState) {
            if ((this.onBeginCreateReplyToMessageDelegate == null)) {
                this.onBeginCreateReplyToMessageDelegate = new BeginOperationDelegate(this.OnBeginCreateReplyToMessage);
            }
            if ((this.onEndCreateReplyToMessageDelegate == null)) {
                this.onEndCreateReplyToMessageDelegate = new EndOperationDelegate(this.OnEndCreateReplyToMessage);
            }
            if ((this.onCreateReplyToMessageCompletedDelegate == null)) {
                this.onCreateReplyToMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateReplyToMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCreateReplyToMessageDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personalMessageID,
                        columnWidth}, this.onEndCreateReplyToMessageDelegate, this.onCreateReplyToMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetThreads(MotionsRace.WinPhone.MobileService.GetThreadsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetThreads(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetThreads(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetThreadsRequest inValue = new MotionsRace.WinPhone.MobileService.GetThreadsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetThreadsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetThreads(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetThreadsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetThreads(System.IAsyncResult result) {
            return base.Channel.EndGetThreads(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult> EndGetThreads(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetThreadsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetThreads(result);
            return retVal.Body.GetThreadsResult;
        }
        
        private System.IAsyncResult OnBeginGetThreads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetThreads(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetThreads(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.ThreadInfoResult> retVal = this.EndGetThreads(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetThreadsCompleted(object state) {
            if ((this.GetThreadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetThreadsCompleted(this, new GetThreadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetThreadsAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetThreadsAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetThreadsAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetThreadsDelegate == null)) {
                this.onBeginGetThreadsDelegate = new BeginOperationDelegate(this.OnBeginGetThreads);
            }
            if ((this.onEndGetThreadsDelegate == null)) {
                this.onEndGetThreadsDelegate = new EndOperationDelegate(this.OnEndGetThreads);
            }
            if ((this.onGetThreadsCompletedDelegate == null)) {
                this.onGetThreadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetThreadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetThreadsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetThreadsDelegate, this.onGetThreadsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetPosting(MotionsRace.WinPhone.MobileService.GetPostingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPosting(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPosting(string applicationID, string loginID, string loginSecret, int raceID, int postingID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetPostingRequest inValue = new MotionsRace.WinPhone.MobileService.GetPostingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetPostingRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.postingID = postingID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetPosting(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetPostingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetPosting(System.IAsyncResult result) {
            return base.Channel.EndGetPosting(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.Posting EndGetPosting(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetPostingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetPosting(result);
            return retVal.Body.GetPostingResult;
        }
        
        private System.IAsyncResult OnBeginGetPosting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int postingID = ((int)(inValues[4]));
            return this.BeginGetPosting(applicationID, loginID, loginSecret, raceID, postingID, callback, asyncState);
        }
        
        private object[] OnEndGetPosting(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.Posting retVal = this.EndGetPosting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPostingCompleted(object state) {
            if ((this.GetPostingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPostingCompleted(this, new GetPostingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPostingAsync(string applicationID, string loginID, string loginSecret, int raceID, int postingID) {
            this.GetPostingAsync(applicationID, loginID, loginSecret, raceID, postingID, null);
        }
        
        public void GetPostingAsync(string applicationID, string loginID, string loginSecret, int raceID, int postingID, object userState) {
            if ((this.onBeginGetPostingDelegate == null)) {
                this.onBeginGetPostingDelegate = new BeginOperationDelegate(this.OnBeginGetPosting);
            }
            if ((this.onEndGetPostingDelegate == null)) {
                this.onEndGetPostingDelegate = new EndOperationDelegate(this.OnEndGetPosting);
            }
            if ((this.onGetPostingCompletedDelegate == null)) {
                this.onGetPostingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPostingCompleted);
            }
            base.InvokeAsync(this.onBeginGetPostingDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        postingID}, this.onEndGetPostingDelegate, this.onGetPostingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginSavePosting(MotionsRace.WinPhone.MobileService.SavePostingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePosting(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSavePosting(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Posting posting, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.SavePostingRequest inValue = new MotionsRace.WinPhone.MobileService.SavePostingRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.SavePostingRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.posting = posting;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginSavePosting(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.SavePostingResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndSavePosting(System.IAsyncResult result) {
            return base.Channel.EndSavePosting(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private int EndSavePosting(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.SavePostingResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndSavePosting(result);
            return retVal.Body.SavePostingResult;
        }
        
        private System.IAsyncResult OnBeginSavePosting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.Posting posting = ((MotionsRace.WinPhone.MobileService.Posting)(inValues[3]));
            return this.BeginSavePosting(applicationID, loginID, loginSecret, posting, callback, asyncState);
        }
        
        private object[] OnEndSavePosting(System.IAsyncResult result) {
            int retVal = this.EndSavePosting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePostingCompleted(object state) {
            if ((this.SavePostingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePostingCompleted(this, new SavePostingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePostingAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Posting posting) {
            this.SavePostingAsync(applicationID, loginID, loginSecret, posting, null);
        }
        
        public void SavePostingAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Posting posting, object userState) {
            if ((this.onBeginSavePostingDelegate == null)) {
                this.onBeginSavePostingDelegate = new BeginOperationDelegate(this.OnBeginSavePosting);
            }
            if ((this.onEndSavePostingDelegate == null)) {
                this.onEndSavePostingDelegate = new EndOperationDelegate(this.OnEndSavePosting);
            }
            if ((this.onSavePostingCompletedDelegate == null)) {
                this.onSavePostingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePostingCompleted);
            }
            base.InvokeAsync(this.onBeginSavePostingDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        posting}, this.onEndSavePostingDelegate, this.onSavePostingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginMarkThreadAsRead(MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkThreadAsRead(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginMarkThreadAsRead(string applicationID, string loginID, string loginSecret, int raceID, int lastReadPostingID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequest inValue = new MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.lastReadPostingID = lastReadPostingID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginMarkThreadAsRead(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndMarkThreadAsRead(System.IAsyncResult result) {
            return base.Channel.EndMarkThreadAsRead(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndMarkThreadAsRead(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndMarkThreadAsRead(result);
        }
        
        private System.IAsyncResult OnBeginMarkThreadAsRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int lastReadPostingID = ((int)(inValues[4]));
            return this.BeginMarkThreadAsRead(applicationID, loginID, loginSecret, raceID, lastReadPostingID, callback, asyncState);
        }
        
        private object[] OnEndMarkThreadAsRead(System.IAsyncResult result) {
            this.EndMarkThreadAsRead(result);
            return null;
        }
        
        private void OnMarkThreadAsReadCompleted(object state) {
            if ((this.MarkThreadAsReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkThreadAsReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkThreadAsReadAsync(string applicationID, string loginID, string loginSecret, int raceID, int lastReadPostingID) {
            this.MarkThreadAsReadAsync(applicationID, loginID, loginSecret, raceID, lastReadPostingID, null);
        }
        
        public void MarkThreadAsReadAsync(string applicationID, string loginID, string loginSecret, int raceID, int lastReadPostingID, object userState) {
            if ((this.onBeginMarkThreadAsReadDelegate == null)) {
                this.onBeginMarkThreadAsReadDelegate = new BeginOperationDelegate(this.OnBeginMarkThreadAsRead);
            }
            if ((this.onEndMarkThreadAsReadDelegate == null)) {
                this.onEndMarkThreadAsReadDelegate = new EndOperationDelegate(this.OnEndMarkThreadAsRead);
            }
            if ((this.onMarkThreadAsReadCompletedDelegate == null)) {
                this.onMarkThreadAsReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkThreadAsReadCompleted);
            }
            base.InvokeAsync(this.onBeginMarkThreadAsReadDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        lastReadPostingID}, this.onEndMarkThreadAsReadDelegate, this.onMarkThreadAsReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetThread(MotionsRace.WinPhone.MobileService.GetThreadRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetThread(string applicationID, string loginID, string loginSecret, int raceID, int threadID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetThreadRequest inValue = new MotionsRace.WinPhone.MobileService.GetThreadRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetThreadRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.threadID = threadID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetThreadResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetThread(System.IAsyncResult result) {
            return base.Channel.EndGetThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult> EndGetThread(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetThreadResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetThread(result);
            return retVal.Body.GetThreadResult;
        }
        
        private System.IAsyncResult OnBeginGetThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int threadID = ((int)(inValues[4]));
            return this.BeginGetThread(applicationID, loginID, loginSecret, raceID, threadID, callback, asyncState);
        }
        
        private object[] OnEndGetThread(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.PostingInfoResult> retVal = this.EndGetThread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetThreadCompleted(object state) {
            if ((this.GetThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetThreadCompleted(this, new GetThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetThreadAsync(string applicationID, string loginID, string loginSecret, int raceID, int threadID) {
            this.GetThreadAsync(applicationID, loginID, loginSecret, raceID, threadID, null);
        }
        
        public void GetThreadAsync(string applicationID, string loginID, string loginSecret, int raceID, int threadID, object userState) {
            if ((this.onBeginGetThreadDelegate == null)) {
                this.onBeginGetThreadDelegate = new BeginOperationDelegate(this.OnBeginGetThread);
            }
            if ((this.onEndGetThreadDelegate == null)) {
                this.onEndGetThreadDelegate = new EndOperationDelegate(this.OnEndGetThread);
            }
            if ((this.onGetThreadCompletedDelegate == null)) {
                this.onGetThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetThreadCompleted);
            }
            base.InvokeAsync(this.onBeginGetThreadDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        threadID}, this.onEndGetThreadDelegate, this.onGetThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetPersonInfo(MotionsRace.WinPhone.MobileService.GetPersonInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPersonInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPersonInfo(string applicationID, string loginID, string loginSecret, int raceID, int personID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetPersonInfoRequest inValue = new MotionsRace.WinPhone.MobileService.GetPersonInfoRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetPersonInfoRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            inValue.Body.personID = personID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetPersonInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetPersonInfoResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetPersonInfo(System.IAsyncResult result) {
            return base.Channel.EndGetPersonInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.PersonInfo EndGetPersonInfo(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetPersonInfoResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetPersonInfo(result);
            return retVal.Body.GetPersonInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetPersonInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            int personID = ((int)(inValues[4]));
            return this.BeginGetPersonInfo(applicationID, loginID, loginSecret, raceID, personID, callback, asyncState);
        }
        
        private object[] OnEndGetPersonInfo(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.PersonInfo retVal = this.EndGetPersonInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonInfoCompleted(object state) {
            if ((this.GetPersonInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonInfoCompleted(this, new GetPersonInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonInfoAsync(string applicationID, string loginID, string loginSecret, int raceID, int personID) {
            this.GetPersonInfoAsync(applicationID, loginID, loginSecret, raceID, personID, null);
        }
        
        public void GetPersonInfoAsync(string applicationID, string loginID, string loginSecret, int raceID, int personID, object userState) {
            if ((this.onBeginGetPersonInfoDelegate == null)) {
                this.onBeginGetPersonInfoDelegate = new BeginOperationDelegate(this.OnBeginGetPersonInfo);
            }
            if ((this.onEndGetPersonInfoDelegate == null)) {
                this.onEndGetPersonInfoDelegate = new EndOperationDelegate(this.OnEndGetPersonInfo);
            }
            if ((this.onGetPersonInfoCompletedDelegate == null)) {
                this.onGetPersonInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonInfoDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID,
                        personID}, this.onEndGetPersonInfoDelegate, this.onGetPersonInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginSaveGoal(MotionsRace.WinPhone.MobileService.SaveGoalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveGoal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSaveGoal(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Goal goal, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.SaveGoalRequest inValue = new MotionsRace.WinPhone.MobileService.SaveGoalRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.SaveGoalRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.goal = goal;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginSaveGoal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.SaveGoalResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndSaveGoal(System.IAsyncResult result) {
            return base.Channel.EndSaveGoal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Nullable<int> EndSaveGoal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.SaveGoalResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndSaveGoal(result);
            return retVal.Body.SaveGoalResult;
        }
        
        private System.IAsyncResult OnBeginSaveGoal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.Goal goal = ((MotionsRace.WinPhone.MobileService.Goal)(inValues[3]));
            return this.BeginSaveGoal(applicationID, loginID, loginSecret, goal, callback, asyncState);
        }
        
        private object[] OnEndSaveGoal(System.IAsyncResult result) {
            System.Nullable<int> retVal = this.EndSaveGoal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveGoalCompleted(object state) {
            if ((this.SaveGoalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveGoalCompleted(this, new SaveGoalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveGoalAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Goal goal) {
            this.SaveGoalAsync(applicationID, loginID, loginSecret, goal, null);
        }
        
        public void SaveGoalAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.Goal goal, object userState) {
            if ((this.onBeginSaveGoalDelegate == null)) {
                this.onBeginSaveGoalDelegate = new BeginOperationDelegate(this.OnBeginSaveGoal);
            }
            if ((this.onEndSaveGoalDelegate == null)) {
                this.onEndSaveGoalDelegate = new EndOperationDelegate(this.OnEndSaveGoal);
            }
            if ((this.onSaveGoalCompletedDelegate == null)) {
                this.onSaveGoalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveGoalCompleted);
            }
            base.InvokeAsync(this.onBeginSaveGoalDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        goal}, this.onEndSaveGoalDelegate, this.onSaveGoalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetGoal(MotionsRace.WinPhone.MobileService.GetGoalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGoal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetGoal(string applicationID, string loginID, string loginSecret, string cultureName, int goalID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetGoalRequest inValue = new MotionsRace.WinPhone.MobileService.GetGoalRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetGoalRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.goalID = goalID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetGoal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetGoalResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetGoal(System.IAsyncResult result) {
            return base.Channel.EndGetGoal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.Goal EndGetGoal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetGoalResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetGoal(result);
            return retVal.Body.GetGoalResult;
        }
        
        private System.IAsyncResult OnBeginGetGoal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int goalID = ((int)(inValues[4]));
            int raceID = ((int)(inValues[5]));
            return this.BeginGetGoal(applicationID, loginID, loginSecret, cultureName, goalID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetGoal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.Goal retVal = this.EndGetGoal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGoalCompleted(object state) {
            if ((this.GetGoalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGoalCompleted(this, new GetGoalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGoalAsync(string applicationID, string loginID, string loginSecret, string cultureName, int goalID, int raceID) {
            this.GetGoalAsync(applicationID, loginID, loginSecret, cultureName, goalID, raceID, null);
        }
        
        public void GetGoalAsync(string applicationID, string loginID, string loginSecret, string cultureName, int goalID, int raceID, object userState) {
            if ((this.onBeginGetGoalDelegate == null)) {
                this.onBeginGetGoalDelegate = new BeginOperationDelegate(this.OnBeginGetGoal);
            }
            if ((this.onEndGetGoalDelegate == null)) {
                this.onEndGetGoalDelegate = new EndOperationDelegate(this.OnEndGetGoal);
            }
            if ((this.onGetGoalCompletedDelegate == null)) {
                this.onGetGoalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGoalCompleted);
            }
            base.InvokeAsync(this.onBeginGetGoalDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        goalID,
                        raceID}, this.onEndGetGoalDelegate, this.onGetGoalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginDeleteGoal(MotionsRace.WinPhone.MobileService.DeleteGoalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteGoal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginDeleteGoal(string applicationID, string loginID, string loginSecret, int goalID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.DeleteGoalRequest inValue = new MotionsRace.WinPhone.MobileService.DeleteGoalRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.DeleteGoalRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.goalID = goalID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginDeleteGoal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.DeleteGoalResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndDeleteGoal(System.IAsyncResult result) {
            return base.Channel.EndDeleteGoal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndDeleteGoal(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.DeleteGoalResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndDeleteGoal(result);
        }
        
        private System.IAsyncResult OnBeginDeleteGoal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int goalID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginDeleteGoal(applicationID, loginID, loginSecret, goalID, raceID, callback, asyncState);
        }
        
        private object[] OnEndDeleteGoal(System.IAsyncResult result) {
            this.EndDeleteGoal(result);
            return null;
        }
        
        private void OnDeleteGoalCompleted(object state) {
            if ((this.DeleteGoalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteGoalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteGoalAsync(string applicationID, string loginID, string loginSecret, int goalID, int raceID) {
            this.DeleteGoalAsync(applicationID, loginID, loginSecret, goalID, raceID, null);
        }
        
        public void DeleteGoalAsync(string applicationID, string loginID, string loginSecret, int goalID, int raceID, object userState) {
            if ((this.onBeginDeleteGoalDelegate == null)) {
                this.onBeginDeleteGoalDelegate = new BeginOperationDelegate(this.OnBeginDeleteGoal);
            }
            if ((this.onEndDeleteGoalDelegate == null)) {
                this.onEndDeleteGoalDelegate = new EndOperationDelegate(this.OnEndDeleteGoal);
            }
            if ((this.onDeleteGoalCompletedDelegate == null)) {
                this.onDeleteGoalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteGoalCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteGoalDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        goalID,
                        raceID}, this.onEndDeleteGoalDelegate, this.onDeleteGoalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetGoals(MotionsRace.WinPhone.MobileService.GetGoalsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGoals(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetGoals(string applicationID, string loginID, string loginSecret, int personID, int raceID, bool getOnlyPublicGoals, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetGoalsRequest inValue = new MotionsRace.WinPhone.MobileService.GetGoalsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetGoalsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            inValue.Body.getOnlyPublicGoals = getOnlyPublicGoals;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetGoals(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetGoalsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetGoals(System.IAsyncResult result) {
            return base.Channel.EndGetGoals(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult> EndGetGoals(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetGoalsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetGoals(result);
            return retVal.Body.GetGoalsResult;
        }
        
        private System.IAsyncResult OnBeginGetGoals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            bool getOnlyPublicGoals = ((bool)(inValues[5]));
            return this.BeginGetGoals(applicationID, loginID, loginSecret, personID, raceID, getOnlyPublicGoals, callback, asyncState);
        }
        
        private object[] OnEndGetGoals(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalBriefInfoResult> retVal = this.EndGetGoals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGoalsCompleted(object state) {
            if ((this.GetGoalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGoalsCompleted(this, new GetGoalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGoalsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, bool getOnlyPublicGoals) {
            this.GetGoalsAsync(applicationID, loginID, loginSecret, personID, raceID, getOnlyPublicGoals, null);
        }
        
        public void GetGoalsAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, bool getOnlyPublicGoals, object userState) {
            if ((this.onBeginGetGoalsDelegate == null)) {
                this.onBeginGetGoalsDelegate = new BeginOperationDelegate(this.OnBeginGetGoals);
            }
            if ((this.onEndGetGoalsDelegate == null)) {
                this.onEndGetGoalsDelegate = new EndOperationDelegate(this.OnEndGetGoals);
            }
            if ((this.onGetGoalsCompletedDelegate == null)) {
                this.onGetGoalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGoalsCompleted);
            }
            base.InvokeAsync(this.onBeginGetGoalsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID,
                        getOnlyPublicGoals}, this.onEndGetGoalsDelegate, this.onGetGoalsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetGoalPeriodResults(MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGoalPeriodResults(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetGoalPeriodResults(string applicationID, string loginID, string loginSecret, int goalID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequest inValue = new MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.goalID = goalID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetGoalPeriodResults(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetGoalPeriodResults(System.IAsyncResult result) {
            return base.Channel.EndGetGoalPeriodResults(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult> EndGetGoalPeriodResults(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetGoalPeriodResults(result);
            return retVal.Body.GetGoalPeriodResultsResult;
        }
        
        private System.IAsyncResult OnBeginGetGoalPeriodResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int goalID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetGoalPeriodResults(applicationID, loginID, loginSecret, goalID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetGoalPeriodResults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.GoalPeriodResult> retVal = this.EndGetGoalPeriodResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGoalPeriodResultsCompleted(object state) {
            if ((this.GetGoalPeriodResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGoalPeriodResultsCompleted(this, new GetGoalPeriodResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGoalPeriodResultsAsync(string applicationID, string loginID, string loginSecret, int goalID, int raceID) {
            this.GetGoalPeriodResultsAsync(applicationID, loginID, loginSecret, goalID, raceID, null);
        }
        
        public void GetGoalPeriodResultsAsync(string applicationID, string loginID, string loginSecret, int goalID, int raceID, object userState) {
            if ((this.onBeginGetGoalPeriodResultsDelegate == null)) {
                this.onBeginGetGoalPeriodResultsDelegate = new BeginOperationDelegate(this.OnBeginGetGoalPeriodResults);
            }
            if ((this.onEndGetGoalPeriodResultsDelegate == null)) {
                this.onEndGetGoalPeriodResultsDelegate = new EndOperationDelegate(this.OnEndGetGoalPeriodResults);
            }
            if ((this.onGetGoalPeriodResultsCompletedDelegate == null)) {
                this.onGetGoalPeriodResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGoalPeriodResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetGoalPeriodResultsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        goalID,
                        raceID}, this.onEndGetGoalPeriodResultsDelegate, this.onGetGoalPeriodResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginValidateUserName(MotionsRace.WinPhone.MobileService.ValidateUserNameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUserName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginValidateUserName(string applicationID, string loginID, string loginSecret, string userName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.ValidateUserNameRequest inValue = new MotionsRace.WinPhone.MobileService.ValidateUserNameRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.ValidateUserNameRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.userName = userName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginValidateUserName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.ValidateUserNameResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndValidateUserName(System.IAsyncResult result) {
            return base.Channel.EndValidateUserName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndValidateUserName(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidateUserNameResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndValidateUserName(result);
        }
        
        private System.IAsyncResult OnBeginValidateUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string userName = ((string)(inValues[3]));
            return this.BeginValidateUserName(applicationID, loginID, loginSecret, userName, callback, asyncState);
        }
        
        private object[] OnEndValidateUserName(System.IAsyncResult result) {
            this.EndValidateUserName(result);
            return null;
        }
        
        private void OnValidateUserNameCompleted(object state) {
            if ((this.ValidateUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserNameAsync(string applicationID, string loginID, string loginSecret, string userName) {
            this.ValidateUserNameAsync(applicationID, loginID, loginSecret, userName, null);
        }
        
        public void ValidateUserNameAsync(string applicationID, string loginID, string loginSecret, string userName, object userState) {
            if ((this.onBeginValidateUserNameDelegate == null)) {
                this.onBeginValidateUserNameDelegate = new BeginOperationDelegate(this.OnBeginValidateUserName);
            }
            if ((this.onEndValidateUserNameDelegate == null)) {
                this.onEndValidateUserNameDelegate = new EndOperationDelegate(this.OnEndValidateUserName);
            }
            if ((this.onValidateUserNameCompletedDelegate == null)) {
                this.onValidateUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserNameDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        userName}, this.onEndValidateUserNameDelegate, this.onValidateUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginValidateEmail(MotionsRace.WinPhone.MobileService.ValidateEmailRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateEmail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginValidateEmail(string applicationID, string loginID, string loginSecret, string email, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.ValidateEmailRequest inValue = new MotionsRace.WinPhone.MobileService.ValidateEmailRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.ValidateEmailRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.email = email;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginValidateEmail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.ValidateEmailResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndValidateEmail(System.IAsyncResult result) {
            return base.Channel.EndValidateEmail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndValidateEmail(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidateEmailResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndValidateEmail(result);
        }
        
        private System.IAsyncResult OnBeginValidateEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            return this.BeginValidateEmail(applicationID, loginID, loginSecret, email, callback, asyncState);
        }
        
        private object[] OnEndValidateEmail(System.IAsyncResult result) {
            this.EndValidateEmail(result);
            return null;
        }
        
        private void OnValidateEmailCompleted(object state) {
            if ((this.ValidateEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateEmailAsync(string applicationID, string loginID, string loginSecret, string email) {
            this.ValidateEmailAsync(applicationID, loginID, loginSecret, email, null);
        }
        
        public void ValidateEmailAsync(string applicationID, string loginID, string loginSecret, string email, object userState) {
            if ((this.onBeginValidateEmailDelegate == null)) {
                this.onBeginValidateEmailDelegate = new BeginOperationDelegate(this.OnBeginValidateEmail);
            }
            if ((this.onEndValidateEmailDelegate == null)) {
                this.onEndValidateEmailDelegate = new EndOperationDelegate(this.OnEndValidateEmail);
            }
            if ((this.onValidateEmailCompletedDelegate == null)) {
                this.onValidateEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateEmailCompleted);
            }
            base.InvokeAsync(this.onBeginValidateEmailDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        email}, this.onEndValidateEmailDelegate, this.onValidateEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRaceFromSignUpCode(MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRaceFromSignUpCode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRaceFromSignUpCode(string applicationID, string loginID, string loginSecret, string signUpCode, string hostName, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequest inValue = new MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.signUpCode = signUpCode;
            inValue.Body.hostName = hostName;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRaceFromSignUpCode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRaceFromSignUpCode(System.IAsyncResult result) {
            return base.Channel.EndGetRaceFromSignUpCode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.RaceShortInfoResult EndGetRaceFromSignUpCode(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRaceFromSignUpCode(result);
            return retVal.Body.GetRaceFromSignUpCodeResult;
        }
        
        private System.IAsyncResult OnBeginGetRaceFromSignUpCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string signUpCode = ((string)(inValues[3]));
            string hostName = ((string)(inValues[4]));
            return this.BeginGetRaceFromSignUpCode(applicationID, loginID, loginSecret, signUpCode, hostName, callback, asyncState);
        }
        
        private object[] OnEndGetRaceFromSignUpCode(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RaceShortInfoResult retVal = this.EndGetRaceFromSignUpCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRaceFromSignUpCodeCompleted(object state) {
            if ((this.GetRaceFromSignUpCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRaceFromSignUpCodeCompleted(this, new GetRaceFromSignUpCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRaceFromSignUpCodeAsync(string applicationID, string loginID, string loginSecret, string signUpCode, string hostName) {
            this.GetRaceFromSignUpCodeAsync(applicationID, loginID, loginSecret, signUpCode, hostName, null);
        }
        
        public void GetRaceFromSignUpCodeAsync(string applicationID, string loginID, string loginSecret, string signUpCode, string hostName, object userState) {
            if ((this.onBeginGetRaceFromSignUpCodeDelegate == null)) {
                this.onBeginGetRaceFromSignUpCodeDelegate = new BeginOperationDelegate(this.OnBeginGetRaceFromSignUpCode);
            }
            if ((this.onEndGetRaceFromSignUpCodeDelegate == null)) {
                this.onEndGetRaceFromSignUpCodeDelegate = new EndOperationDelegate(this.OnEndGetRaceFromSignUpCode);
            }
            if ((this.onGetRaceFromSignUpCodeCompletedDelegate == null)) {
                this.onGetRaceFromSignUpCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRaceFromSignUpCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRaceFromSignUpCodeDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        signUpCode,
                        hostName}, this.onEndGetRaceFromSignUpCodeDelegate, this.onGetRaceFromSignUpCodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginUpdateMySettings(MotionsRace.WinPhone.MobileService.UpdateMySettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateMySettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateMySettings(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.PersonInfo personInfo, string newPasswordPlainText, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.UpdateMySettingsRequest inValue = new MotionsRace.WinPhone.MobileService.UpdateMySettingsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.UpdateMySettingsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personInfo = personInfo;
            inValue.Body.newPasswordPlainText = newPasswordPlainText;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginUpdateMySettings(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndUpdateMySettings(System.IAsyncResult result) {
            return base.Channel.EndUpdateMySettings(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUpdateMySettings(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndUpdateMySettings(result);
        }
        
        private System.IAsyncResult OnBeginUpdateMySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.PersonInfo personInfo = ((MotionsRace.WinPhone.MobileService.PersonInfo)(inValues[3]));
            string newPasswordPlainText = ((string)(inValues[4]));
            return this.BeginUpdateMySettings(applicationID, loginID, loginSecret, personInfo, newPasswordPlainText, callback, asyncState);
        }
        
        private object[] OnEndUpdateMySettings(System.IAsyncResult result) {
            this.EndUpdateMySettings(result);
            return null;
        }
        
        private void OnUpdateMySettingsCompleted(object state) {
            if ((this.UpdateMySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateMySettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateMySettingsAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.PersonInfo personInfo, string newPasswordPlainText) {
            this.UpdateMySettingsAsync(applicationID, loginID, loginSecret, personInfo, newPasswordPlainText, null);
        }
        
        public void UpdateMySettingsAsync(string applicationID, string loginID, string loginSecret, MotionsRace.WinPhone.MobileService.PersonInfo personInfo, string newPasswordPlainText, object userState) {
            if ((this.onBeginUpdateMySettingsDelegate == null)) {
                this.onBeginUpdateMySettingsDelegate = new BeginOperationDelegate(this.OnBeginUpdateMySettings);
            }
            if ((this.onEndUpdateMySettingsDelegate == null)) {
                this.onEndUpdateMySettingsDelegate = new EndOperationDelegate(this.OnEndUpdateMySettings);
            }
            if ((this.onUpdateMySettingsCompletedDelegate == null)) {
                this.onUpdateMySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateMySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateMySettingsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personInfo,
                        newPasswordPlainText}, this.onEndUpdateMySettingsDelegate, this.onUpdateMySettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginAddPersonToTeam(MotionsRace.WinPhone.MobileService.AddPersonToTeamRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPersonToTeam(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginAddPersonToTeam(string applicationID, string loginID, string loginSecret, int personID, int teamID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.AddPersonToTeamRequest inValue = new MotionsRace.WinPhone.MobileService.AddPersonToTeamRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.AddPersonToTeamRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.teamID = teamID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginAddPersonToTeam(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndAddPersonToTeam(System.IAsyncResult result) {
            return base.Channel.EndAddPersonToTeam(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndAddPersonToTeam(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndAddPersonToTeam(result);
        }
        
        private System.IAsyncResult OnBeginAddPersonToTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int teamID = ((int)(inValues[4]));
            return this.BeginAddPersonToTeam(applicationID, loginID, loginSecret, personID, teamID, callback, asyncState);
        }
        
        private object[] OnEndAddPersonToTeam(System.IAsyncResult result) {
            this.EndAddPersonToTeam(result);
            return null;
        }
        
        private void OnAddPersonToTeamCompleted(object state) {
            if ((this.AddPersonToTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPersonToTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPersonToTeamAsync(string applicationID, string loginID, string loginSecret, int personID, int teamID) {
            this.AddPersonToTeamAsync(applicationID, loginID, loginSecret, personID, teamID, null);
        }
        
        public void AddPersonToTeamAsync(string applicationID, string loginID, string loginSecret, int personID, int teamID, object userState) {
            if ((this.onBeginAddPersonToTeamDelegate == null)) {
                this.onBeginAddPersonToTeamDelegate = new BeginOperationDelegate(this.OnBeginAddPersonToTeam);
            }
            if ((this.onEndAddPersonToTeamDelegate == null)) {
                this.onEndAddPersonToTeamDelegate = new EndOperationDelegate(this.OnEndAddPersonToTeam);
            }
            if ((this.onAddPersonToTeamCompletedDelegate == null)) {
                this.onAddPersonToTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPersonToTeamCompleted);
            }
            base.InvokeAsync(this.onBeginAddPersonToTeamDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        teamID}, this.onEndAddPersonToTeamDelegate, this.onAddPersonToTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetRace(MotionsRace.WinPhone.MobileService.GetRaceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRace(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetRace(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetRaceRequest inValue = new MotionsRace.WinPhone.MobileService.GetRaceRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetRaceRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetRace(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetRaceResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetRace(System.IAsyncResult result) {
            return base.Channel.EndGetRace(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.RaceDetailsResult EndGetRace(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetRaceResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetRace(result);
            return retVal.Body.GetRaceResult;
        }
        
        private System.IAsyncResult OnBeginGetRace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetRace(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetRace(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.RaceDetailsResult retVal = this.EndGetRace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRaceCompleted(object state) {
            if ((this.GetRaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRaceCompleted(this, new GetRaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRaceAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetRaceAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetRaceAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetRaceDelegate == null)) {
                this.onBeginGetRaceDelegate = new BeginOperationDelegate(this.OnBeginGetRace);
            }
            if ((this.onEndGetRaceDelegate == null)) {
                this.onEndGetRaceDelegate = new EndOperationDelegate(this.OnEndGetRace);
            }
            if ((this.onGetRaceCompletedDelegate == null)) {
                this.onGetRaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetRaceDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetRaceDelegate, this.onGetRaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginUpdatePictureURL(MotionsRace.WinPhone.MobileService.UpdatePictureURLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePictureURL(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdatePictureURL(string applicationID, string loginID, string loginSecret, string pictureURL, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.UpdatePictureURLRequest inValue = new MotionsRace.WinPhone.MobileService.UpdatePictureURLRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.UpdatePictureURLRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.pictureURL = pictureURL;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginUpdatePictureURL(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndUpdatePictureURL(System.IAsyncResult result) {
            return base.Channel.EndUpdatePictureURL(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndUpdatePictureURL(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndUpdatePictureURL(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePictureURL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string pictureURL = ((string)(inValues[3]));
            return this.BeginUpdatePictureURL(applicationID, loginID, loginSecret, pictureURL, callback, asyncState);
        }
        
        private object[] OnEndUpdatePictureURL(System.IAsyncResult result) {
            this.EndUpdatePictureURL(result);
            return null;
        }
        
        private void OnUpdatePictureURLCompleted(object state) {
            if ((this.UpdatePictureURLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePictureURLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePictureURLAsync(string applicationID, string loginID, string loginSecret, string pictureURL) {
            this.UpdatePictureURLAsync(applicationID, loginID, loginSecret, pictureURL, null);
        }
        
        public void UpdatePictureURLAsync(string applicationID, string loginID, string loginSecret, string pictureURL, object userState) {
            if ((this.onBeginUpdatePictureURLDelegate == null)) {
                this.onBeginUpdatePictureURLDelegate = new BeginOperationDelegate(this.OnBeginUpdatePictureURL);
            }
            if ((this.onEndUpdatePictureURLDelegate == null)) {
                this.onEndUpdatePictureURLDelegate = new EndOperationDelegate(this.OnEndUpdatePictureURL);
            }
            if ((this.onUpdatePictureURLCompletedDelegate == null)) {
                this.onUpdatePictureURLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePictureURLCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePictureURLDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        pictureURL}, this.onEndUpdatePictureURLDelegate, this.onUpdatePictureURLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMySettings(MotionsRace.WinPhone.MobileService.GetMySettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMySettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMySettings(string applicationID, string loginID, string loginSecret, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMySettingsRequest inValue = new MotionsRace.WinPhone.MobileService.GetMySettingsRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMySettingsRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMySettings(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMySettingsResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMySettings(System.IAsyncResult result) {
            return base.Channel.EndGetMySettings(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.PersonInfo EndGetMySettings(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMySettingsResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMySettings(result);
            return retVal.Body.GetMySettingsResult;
        }
        
        private System.IAsyncResult OnBeginGetMySettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int raceID = ((int)(inValues[3]));
            return this.BeginGetMySettings(applicationID, loginID, loginSecret, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetMySettings(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.PersonInfo retVal = this.EndGetMySettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMySettingsCompleted(object state) {
            if ((this.GetMySettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMySettingsCompleted(this, new GetMySettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMySettingsAsync(string applicationID, string loginID, string loginSecret, int raceID) {
            this.GetMySettingsAsync(applicationID, loginID, loginSecret, raceID, null);
        }
        
        public void GetMySettingsAsync(string applicationID, string loginID, string loginSecret, int raceID, object userState) {
            if ((this.onBeginGetMySettingsDelegate == null)) {
                this.onBeginGetMySettingsDelegate = new BeginOperationDelegate(this.OnBeginGetMySettings);
            }
            if ((this.onEndGetMySettingsDelegate == null)) {
                this.onEndGetMySettingsDelegate = new EndOperationDelegate(this.OnEndGetMySettings);
            }
            if ((this.onGetMySettingsCompletedDelegate == null)) {
                this.onGetMySettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMySettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMySettingsDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        raceID}, this.onEndGetMySettingsDelegate, this.onGetMySettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetParticipantOverview(MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetParticipantOverview(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetParticipantOverview(string applicationID, string loginID, string loginSecret, int personID, int raceID, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequest inValue = new MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.personID = personID;
            inValue.Body.raceID = raceID;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetParticipantOverview(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetParticipantOverview(System.IAsyncResult result) {
            return base.Channel.EndGetParticipantOverview(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.ParticipantOverview EndGetParticipantOverview(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetParticipantOverview(result);
            return retVal.Body.GetParticipantOverviewResult;
        }
        
        private System.IAsyncResult OnBeginGetParticipantOverview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            int personID = ((int)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            return this.BeginGetParticipantOverview(applicationID, loginID, loginSecret, personID, raceID, callback, asyncState);
        }
        
        private object[] OnEndGetParticipantOverview(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ParticipantOverview retVal = this.EndGetParticipantOverview(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetParticipantOverviewCompleted(object state) {
            if ((this.GetParticipantOverviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetParticipantOverviewCompleted(this, new GetParticipantOverviewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetParticipantOverviewAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID) {
            this.GetParticipantOverviewAsync(applicationID, loginID, loginSecret, personID, raceID, null);
        }
        
        public void GetParticipantOverviewAsync(string applicationID, string loginID, string loginSecret, int personID, int raceID, object userState) {
            if ((this.onBeginGetParticipantOverviewDelegate == null)) {
                this.onBeginGetParticipantOverviewDelegate = new BeginOperationDelegate(this.OnBeginGetParticipantOverview);
            }
            if ((this.onEndGetParticipantOverviewDelegate == null)) {
                this.onEndGetParticipantOverviewDelegate = new EndOperationDelegate(this.OnEndGetParticipantOverview);
            }
            if ((this.onGetParticipantOverviewCompletedDelegate == null)) {
                this.onGetParticipantOverviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetParticipantOverviewCompleted);
            }
            base.InvokeAsync(this.onBeginGetParticipantOverviewDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        personID,
                        raceID}, this.onEndGetParticipantOverviewDelegate, this.onGetParticipantOverviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginTemplateCallHelloWorld(MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTemplateCallHelloWorld(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginTemplateCallHelloWorld(string applicationID, string loginID, string loginSecret, string who, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequest inValue = new MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.who = who;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginTemplateCallHelloWorld(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndTemplateCallHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndTemplateCallHelloWorld(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndTemplateCallHelloWorld(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndTemplateCallHelloWorld(result);
            return retVal.Body.TemplateCallHelloWorldResult;
        }
        
        private System.IAsyncResult OnBeginTemplateCallHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string who = ((string)(inValues[3]));
            return this.BeginTemplateCallHelloWorld(applicationID, loginID, loginSecret, who, callback, asyncState);
        }
        
        private object[] OnEndTemplateCallHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndTemplateCallHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTemplateCallHelloWorldCompleted(object state) {
            if ((this.TemplateCallHelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TemplateCallHelloWorldCompleted(this, new TemplateCallHelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TemplateCallHelloWorldAsync(string applicationID, string loginID, string loginSecret, string who) {
            this.TemplateCallHelloWorldAsync(applicationID, loginID, loginSecret, who, null);
        }
        
        public void TemplateCallHelloWorldAsync(string applicationID, string loginID, string loginSecret, string who, object userState) {
            if ((this.onBeginTemplateCallHelloWorldDelegate == null)) {
                this.onBeginTemplateCallHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginTemplateCallHelloWorld);
            }
            if ((this.onEndTemplateCallHelloWorldDelegate == null)) {
                this.onEndTemplateCallHelloWorldDelegate = new EndOperationDelegate(this.OnEndTemplateCallHelloWorld);
            }
            if ((this.onTemplateCallHelloWorldCompletedDelegate == null)) {
                this.onTemplateCallHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTemplateCallHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginTemplateCallHelloWorldDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        who}, this.onEndTemplateCallHelloWorldDelegate, this.onTemplateCallHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginValidateAndCreateSecret(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateAndCreateSecret(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginValidateAndCreateSecret(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequest inValue = new MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.username = username;
            inValue.Body.secret = secret;
            inValue.Body.method = method;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginValidateAndCreateSecret(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndValidateAndCreateSecret(System.IAsyncResult result) {
            return base.Channel.EndValidateAndCreateSecret(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.ValidationResult EndValidateAndCreateSecret(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndValidateAndCreateSecret(result);
            return retVal.Body.ValidateAndCreateSecretResult;
        }
        
        private System.IAsyncResult OnBeginValidateAndCreateSecret(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            string secret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.AuthenticationMethod method = ((MotionsRace.WinPhone.MobileService.AuthenticationMethod)(inValues[3]));
            return this.BeginValidateAndCreateSecret(applicationID, username, secret, method, callback, asyncState);
        }
        
        private object[] OnEndValidateAndCreateSecret(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidationResult retVal = this.EndValidateAndCreateSecret(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateAndCreateSecretCompleted(object state) {
            if ((this.ValidateAndCreateSecretCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateAndCreateSecretCompleted(this, new ValidateAndCreateSecretCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateAndCreateSecretAsync(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method) {
            this.ValidateAndCreateSecretAsync(applicationID, username, secret, method, null);
        }
        
        public void ValidateAndCreateSecretAsync(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method, object userState) {
            if ((this.onBeginValidateAndCreateSecretDelegate == null)) {
                this.onBeginValidateAndCreateSecretDelegate = new BeginOperationDelegate(this.OnBeginValidateAndCreateSecret);
            }
            if ((this.onEndValidateAndCreateSecretDelegate == null)) {
                this.onEndValidateAndCreateSecretDelegate = new EndOperationDelegate(this.OnEndValidateAndCreateSecret);
            }
            if ((this.onValidateAndCreateSecretCompletedDelegate == null)) {
                this.onValidateAndCreateSecretCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateAndCreateSecretCompleted);
            }
            base.InvokeAsync(this.onBeginValidateAndCreateSecretDelegate, new object[] {
                        applicationID,
                        username,
                        secret,
                        method}, this.onEndValidateAndCreateSecretDelegate, this.onValidateAndCreateSecretCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginValidateAndCreateSecret_Alternate(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateAndCreateSecret_Alternate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginValidateAndCreateSecret_Alternate(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequest inValue = new MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.username = username;
            inValue.Body.secret = secret;
            inValue.Body.method = method;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginValidateAndCreateSecret_Alternate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndValidateAndCreateSecret_Alternate(System.IAsyncResult result) {
            return base.Channel.EndValidateAndCreateSecret_Alternate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private MotionsRace.WinPhone.MobileService.ValidationResult EndValidateAndCreateSecret_Alternate(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndValidateAndCreateSecret_Alternate(result);
            return retVal.Body.ValidateAndCreateSecret_AlternateResult;
        }
        
        private System.IAsyncResult OnBeginValidateAndCreateSecret_Alternate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            string secret = ((string)(inValues[2]));
            MotionsRace.WinPhone.MobileService.AuthenticationMethod method = ((MotionsRace.WinPhone.MobileService.AuthenticationMethod)(inValues[3]));
            return this.BeginValidateAndCreateSecret_Alternate(applicationID, username, secret, method, callback, asyncState);
        }
        
        private object[] OnEndValidateAndCreateSecret_Alternate(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.ValidationResult retVal = this.EndValidateAndCreateSecret_Alternate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateAndCreateSecret_AlternateCompleted(object state) {
            if ((this.ValidateAndCreateSecret_AlternateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateAndCreateSecret_AlternateCompleted(this, new ValidateAndCreateSecret_AlternateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateAndCreateSecret_AlternateAsync(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method) {
            this.ValidateAndCreateSecret_AlternateAsync(applicationID, username, secret, method, null);
        }
        
        public void ValidateAndCreateSecret_AlternateAsync(string applicationID, string username, string secret, MotionsRace.WinPhone.MobileService.AuthenticationMethod method, object userState) {
            if ((this.onBeginValidateAndCreateSecret_AlternateDelegate == null)) {
                this.onBeginValidateAndCreateSecret_AlternateDelegate = new BeginOperationDelegate(this.OnBeginValidateAndCreateSecret_Alternate);
            }
            if ((this.onEndValidateAndCreateSecret_AlternateDelegate == null)) {
                this.onEndValidateAndCreateSecret_AlternateDelegate = new EndOperationDelegate(this.OnEndValidateAndCreateSecret_Alternate);
            }
            if ((this.onValidateAndCreateSecret_AlternateCompletedDelegate == null)) {
                this.onValidateAndCreateSecret_AlternateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateAndCreateSecret_AlternateCompleted);
            }
            base.InvokeAsync(this.onBeginValidateAndCreateSecret_AlternateDelegate, new object[] {
                        applicationID,
                        username,
                        secret,
                        method}, this.onEndValidateAndCreateSecret_AlternateDelegate, this.onValidateAndCreateSecret_AlternateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetMyNewsFeed(MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyNewsFeed(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMyNewsFeed(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.Nullable<int> activitiesonly, System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequest inValue = new MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequestBody();
            inValue.Body.applicationID = applicationID;
            inValue.Body.loginID = loginID;
            inValue.Body.loginSecret = loginSecret;
            inValue.Body.cultureName = cultureName;
            inValue.Body.raceID = raceID;
            inValue.Body.activitiesonly = activitiesonly;
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetMyNewsFeed(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetMyNewsFeed(System.IAsyncResult result) {
            return base.Channel.EndGetMyNewsFeed(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed> EndGetMyNewsFeed(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetMyNewsFeed(result);
            return retVal.Body.GetMyNewsFeedResult;
        }
        
        private System.IAsyncResult OnBeginGetMyNewsFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string applicationID = ((string)(inValues[0]));
            string loginID = ((string)(inValues[1]));
            string loginSecret = ((string)(inValues[2]));
            string cultureName = ((string)(inValues[3]));
            int raceID = ((int)(inValues[4]));
            System.Nullable<int> activitiesonly = ((System.Nullable<int>)(inValues[5]));
            return this.BeginGetMyNewsFeed(applicationID, loginID, loginSecret, cultureName, raceID, activitiesonly, callback, asyncState);
        }
        
        private object[] OnEndGetMyNewsFeed(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MotionsRace.WinPhone.MobileService.MyNewsFeed> retVal = this.EndGetMyNewsFeed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyNewsFeedCompleted(object state) {
            if ((this.GetMyNewsFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyNewsFeedCompleted(this, new GetMyNewsFeedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyNewsFeedAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.Nullable<int> activitiesonly) {
            this.GetMyNewsFeedAsync(applicationID, loginID, loginSecret, cultureName, raceID, activitiesonly, null);
        }
        
        public void GetMyNewsFeedAsync(string applicationID, string loginID, string loginSecret, string cultureName, int raceID, System.Nullable<int> activitiesonly, object userState) {
            if ((this.onBeginGetMyNewsFeedDelegate == null)) {
                this.onBeginGetMyNewsFeedDelegate = new BeginOperationDelegate(this.OnBeginGetMyNewsFeed);
            }
            if ((this.onEndGetMyNewsFeedDelegate == null)) {
                this.onEndGetMyNewsFeedDelegate = new EndOperationDelegate(this.OnEndGetMyNewsFeed);
            }
            if ((this.onGetMyNewsFeedCompletedDelegate == null)) {
                this.onGetMyNewsFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyNewsFeedCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyNewsFeedDelegate, new object[] {
                        applicationID,
                        loginID,
                        loginSecret,
                        cultureName,
                        raceID,
                        activitiesonly}, this.onEndGetMyNewsFeedDelegate, this.onGetMyNewsFeedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MotionsRace.WinPhone.MobileService.MobileServiceSoap.BeginGetServerDateTime(MotionsRace.WinPhone.MobileService.GetServerDateTimeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerDateTime(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetServerDateTime(System.AsyncCallback callback, object asyncState) {
            MotionsRace.WinPhone.MobileService.GetServerDateTimeRequest inValue = new MotionsRace.WinPhone.MobileService.GetServerDateTimeRequest();
            inValue.Body = new MotionsRace.WinPhone.MobileService.GetServerDateTimeRequestBody();
            return ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).BeginGetServerDateTime(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse MotionsRace.WinPhone.MobileService.MobileServiceSoap.EndGetServerDateTime(System.IAsyncResult result) {
            return base.Channel.EndGetServerDateTime(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetServerDateTime(System.IAsyncResult result) {
            MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse retVal = ((MotionsRace.WinPhone.MobileService.MobileServiceSoap)(this)).EndGetServerDateTime(result);
            return retVal.Body.GetServerDateTimeResult;
        }
        
        private System.IAsyncResult OnBeginGetServerDateTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerDateTime(callback, asyncState);
        }
        
        private object[] OnEndGetServerDateTime(System.IAsyncResult result) {
            string retVal = this.EndGetServerDateTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerDateTimeCompleted(object state) {
            if ((this.GetServerDateTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerDateTimeCompleted(this, new GetServerDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerDateTimeAsync() {
            this.GetServerDateTimeAsync(null);
        }
        
        public void GetServerDateTimeAsync(object userState) {
            if ((this.onBeginGetServerDateTimeDelegate == null)) {
                this.onBeginGetServerDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetServerDateTime);
            }
            if ((this.onEndGetServerDateTimeDelegate == null)) {
                this.onEndGetServerDateTimeDelegate = new EndOperationDelegate(this.OnEndGetServerDateTime);
            }
            if ((this.onGetServerDateTimeCompletedDelegate == null)) {
                this.onGetServerDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerDateTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerDateTimeDelegate, null, this.onEndGetServerDateTimeDelegate, this.onGetServerDateTimeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MotionsRace.WinPhone.MobileService.MobileServiceSoap CreateChannel() {
            return new MobileServiceSoapClientChannel(this);
        }
        
        private class MobileServiceSoapClientChannel : ChannelBase<MotionsRace.WinPhone.MobileService.MobileServiceSoap>, MotionsRace.WinPhone.MobileService.MobileServiceSoap {
            
            public MobileServiceSoapClientChannel(System.ServiceModel.ClientBase<MotionsRace.WinPhone.MobileService.MobileServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAvailableMedals(MotionsRace.WinPhone.MobileService.GetAvailableMedalsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableMedals", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse EndGetAvailableMedals(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse _result = ((MotionsRace.WinPhone.MobileService.GetAvailableMedalsResponse)(base.EndInvoke("GetAvailableMedals", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableMedalsTranslated(MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableMedalsTranslated", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse EndGetAvailableMedalsTranslated(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse _result = ((MotionsRace.WinPhone.MobileService.GetAvailableMedalsTranslatedResponse)(base.EndInvoke("GetAvailableMedalsTranslated", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEarnMedal(MotionsRace.WinPhone.MobileService.EarnMedalRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("EarnMedal", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.EarnMedalResponse EndEarnMedal(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.EarnMedalResponse _result = ((MotionsRace.WinPhone.MobileService.EarnMedalResponse)(base.EndInvoke("EarnMedal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEarnMedalTranslated(MotionsRace.WinPhone.MobileService.EarnMedalTranslatedRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("EarnMedalTranslated", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse EndEarnMedalTranslated(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse _result = ((MotionsRace.WinPhone.MobileService.EarnMedalTranslatedResponse)(base.EndInvoke("EarnMedalTranslated", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnearnMedal(MotionsRace.WinPhone.MobileService.UnearnMedalRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UnearnMedal", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.UnearnMedalResponse EndUnearnMedal(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.UnearnMedalResponse _result = ((MotionsRace.WinPhone.MobileService.UnearnMedalResponse)(base.EndInvoke("UnearnMedal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNumberOfMedalsPerPerson(MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetNumberOfMedalsPerPerson", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse EndGetNumberOfMedalsPerPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse _result = ((MotionsRace.WinPhone.MobileService.GetNumberOfMedalsPerPersonResponse)(base.EndInvoke("GetNumberOfMedalsPerPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyNewsStream(MotionsRace.WinPhone.MobileService.GetMyNewsStreamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMyNewsStream", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse EndGetMyNewsStream(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse _result = ((MotionsRace.WinPhone.MobileService.GetMyNewsStreamResponse)(base.EndInvoke("GetMyNewsStream", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamStream(MotionsRace.WinPhone.MobileService.GetTeamStreamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamStream", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTeamStreamResponse EndGetTeamStream(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTeamStreamResponse _result = ((MotionsRace.WinPhone.MobileService.GetTeamStreamResponse)(base.EndInvoke("GetTeamStream", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWhatsGoingOn(MotionsRace.WinPhone.MobileService.GetWhatsGoingOnRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetWhatsGoingOn", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse EndGetWhatsGoingOn(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse _result = ((MotionsRace.WinPhone.MobileService.GetWhatsGoingOnResponse)(base.EndInvoke("GetWhatsGoingOn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyRanking(MotionsRace.WinPhone.MobileService.GetMyRankingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMyRanking", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMyRankingResponse EndGetMyRanking(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMyRankingResponse _result = ((MotionsRace.WinPhone.MobileService.GetMyRankingResponse)(base.EndInvoke("GetMyRanking", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRacesAPersonCanLoginTo(MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRacesAPersonCanLoginTo", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse EndGetRacesAPersonCanLoginTo(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse _result = ((MotionsRace.WinPhone.MobileService.GetRacesAPersonCanLoginToResponse)(base.EndInvoke("GetRacesAPersonCanLoginTo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRacesAvailability(MotionsRace.WinPhone.MobileService.GetRacesAvailabilityRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRacesAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse EndGetRacesAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse _result = ((MotionsRace.WinPhone.MobileService.GetRacesAvailabilityResponse)(base.EndInvoke("GetRacesAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthenticateLogin(MotionsRace.WinPhone.MobileService.AuthenticateLoginRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AuthenticateLogin", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse EndAuthenticateLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse _result = ((MotionsRace.WinPhone.MobileService.AuthenticateLoginResponse)(base.EndInvoke("AuthenticateLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRaceByRaceKey(MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRaceByRaceKey", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse EndGetRaceByRaceKey(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse _result = ((MotionsRace.WinPhone.MobileService.GetRaceByRaceKeyResponse)(base.EndInvoke("GetRaceByRaceKey", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAuthorizeRaceAccess(MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AuthorizeRaceAccess", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse EndAuthorizeRaceAccess(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse _result = ((MotionsRace.WinPhone.MobileService.AuthorizeRaceAccessResponse)(base.EndInvoke("AuthorizeRaceAccess", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBrandSpecificTranslationStrings(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetBrandSpecificTranslationStrings", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse EndGetBrandSpecificTranslationStrings(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse _result = ((MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsResponse)(base.EndInvoke("GetBrandSpecificTranslationStrings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBrandSpecificTranslationStringsIOS(MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetBrandSpecificTranslationStringsIOS", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse EndGetBrandSpecificTranslationStringsIOS(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse _result = ((MotionsRace.WinPhone.MobileService.GetBrandSpecificTranslationStringsIOSResponse)(base.EndInvoke("GetBrandSpecificTranslationStringsIOS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTraining(MotionsRace.WinPhone.MobileService.GetTrainingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTraining", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTrainingResponse EndGetTraining(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTrainingResponse _result = ((MotionsRace.WinPhone.MobileService.GetTrainingResponse)(base.EndInvoke("GetTraining", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTraining(MotionsRace.WinPhone.MobileService.DeleteTrainingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTraining", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.DeleteTrainingResponse EndDeleteTraining(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.DeleteTrainingResponse _result = ((MotionsRace.WinPhone.MobileService.DeleteTrainingResponse)(base.EndInvoke("DeleteTraining", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTraining(MotionsRace.WinPhone.MobileService.SaveTrainingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveTraining", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.SaveTrainingResponse EndSaveTraining(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.SaveTrainingResponse _result = ((MotionsRace.WinPhone.MobileService.SaveTrainingResponse)(base.EndInvoke("SaveTraining", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTotalNumberOfPoints(MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTotalNumberOfPoints", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse EndGetTotalNumberOfPoints(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse _result = ((MotionsRace.WinPhone.MobileService.GetTotalNumberOfPointsResponse)(base.EndInvoke("GetTotalNumberOfPoints", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrainingForCalendar(MotionsRace.WinPhone.MobileService.GetTrainingForCalendarRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTrainingForCalendar", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse EndGetTrainingForCalendar(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse _result = ((MotionsRace.WinPhone.MobileService.GetTrainingForCalendarResponse)(base.EndInvoke("GetTrainingForCalendar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrainingTypes(MotionsRace.WinPhone.MobileService.GetTrainingTypesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTrainingTypes", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse EndGetTrainingTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse _result = ((MotionsRace.WinPhone.MobileService.GetTrainingTypesResponse)(base.EndInvoke("GetTrainingTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMostRecentTrainingInTeam(MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMostRecentTrainingInTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse EndGetMostRecentTrainingInTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse _result = ((MotionsRace.WinPhone.MobileService.GetMostRecentTrainingInTeamResponse)(base.EndInvoke("GetMostRecentTrainingInTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveDailyActivityScores(MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveDailyActivityScores", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse EndSaveDailyActivityScores(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse _result = ((MotionsRace.WinPhone.MobileService.SaveDailyActivityScoresResponse)(base.EndInvoke("SaveDailyActivityScores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHighscores_BestSubTeams(MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetHighscores_BestSubTeams", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse EndGetHighscores_BestSubTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse _result = ((MotionsRace.WinPhone.MobileService.GetHighscores_BestSubTeamsResponse)(base.EndInvoke("GetHighscores_BestSubTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHighscores_BestPersonsInTeam(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetHighscores_BestPersonsInTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse EndGetHighscores_BestPersonsInTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse _result = ((MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInTeamResponse)(base.EndInvoke("GetHighscores_BestPersonsInTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRisingStarOfTheWeek(MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRisingStarOfTheWeek", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse EndGetRisingStarOfTheWeek(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse _result = ((MotionsRace.WinPhone.MobileService.GetRisingStarOfTheWeekResponse)(base.EndInvoke("GetRisingStarOfTheWeek", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHighscores_BestPersonsInMyList(MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetHighscores_BestPersonsInMyList", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse EndGetHighscores_BestPersonsInMyList(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse _result = ((MotionsRace.WinPhone.MobileService.GetHighscores_BestPersonsInMyListResponse)(base.EndInvoke("GetHighscores_BestPersonsInMyList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsMyFriend(MotionsRace.WinPhone.MobileService.IsMyFriendRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("IsMyFriend", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.IsMyFriendResponse EndIsMyFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.IsMyFriendResponse _result = ((MotionsRace.WinPhone.MobileService.IsMyFriendResponse)(base.EndInvoke("IsMyFriend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyFriends(MotionsRace.WinPhone.MobileService.GetMyFriendsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMyFriends", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMyFriendsResponse EndGetMyFriends(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMyFriendsResponse _result = ((MotionsRace.WinPhone.MobileService.GetMyFriendsResponse)(base.EndInvoke("GetMyFriends", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveFriend(MotionsRace.WinPhone.MobileService.RemoveFriendRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RemoveFriend", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.RemoveFriendResponse EndRemoveFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.RemoveFriendResponse _result = ((MotionsRace.WinPhone.MobileService.RemoveFriendResponse)(base.EndInvoke("RemoveFriend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddFriends(MotionsRace.WinPhone.MobileService.AddFriendsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddFriends", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.AddFriendsResponse EndAddFriends(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.AddFriendsResponse _result = ((MotionsRace.WinPhone.MobileService.AddFriendsResponse)(base.EndInvoke("AddFriends", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMostRecentTeamActivity(MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMostRecentTeamActivity", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse EndGetMostRecentTeamActivity(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse _result = ((MotionsRace.WinPhone.MobileService.GetMostRecentTeamActivityResponse)(base.EndInvoke("GetMostRecentTeamActivity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllPersonsOfTheTeam(MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAllPersonsOfTheTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse EndGetAllPersonsOfTheTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse _result = ((MotionsRace.WinPhone.MobileService.GetAllPersonsOfTheTeamResponse)(base.EndInvoke("GetAllPersonsOfTheTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamInfo(MotionsRace.WinPhone.MobileService.GetTeamInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamInfo", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTeamInfoResponse EndGetTeamInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTeamInfoResponse _result = ((MotionsRace.WinPhone.MobileService.GetTeamInfoResponse)(base.EndInvoke("GetTeamInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTeam(MotionsRace.WinPhone.MobileService.UpdateTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.UpdateTeamResponse EndUpdateTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.UpdateTeamResponse _result = ((MotionsRace.WinPhone.MobileService.UpdateTeamResponse)(base.EndInvoke("UpdateTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamsByRaceID(MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamsByRaceID", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse EndGetTeamsByRaceID(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse _result = ((MotionsRace.WinPhone.MobileService.GetTeamsByRaceIDResponse)(base.EndInvoke("GetTeamsByRaceID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckIfPersonIsManagerOfTeam(MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CheckIfPersonIsManagerOfTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse EndCheckIfPersonIsManagerOfTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse _result = ((MotionsRace.WinPhone.MobileService.CheckIfPersonIsManagerOfTeamResponse)(base.EndInvoke("CheckIfPersonIsManagerOfTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamsPersonIsAManagerOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamsPersonIsAManagerOf", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse EndGetTeamsPersonIsAManagerOf(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse _result = ((MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAManagerOfResponse)(base.EndInvoke("GetTeamsPersonIsAManagerOf", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamsPersonIsAMemberOf(MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamsPersonIsAMemberOf", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse EndGetTeamsPersonIsAMemberOf(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse _result = ((MotionsRace.WinPhone.MobileService.GetTeamsPersonIsAMemberOfResponse)(base.EndInvoke("GetTeamsPersonIsAMemberOf", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyTeams(MotionsRace.WinPhone.MobileService.GetMyTeamsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMyTeams", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMyTeamsResponse EndGetMyTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMyTeamsResponse _result = ((MotionsRace.WinPhone.MobileService.GetMyTeamsResponse)(base.EndInvoke("GetMyTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTeamPictureURL(MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTeamPictureURL", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse EndUpdateTeamPictureURL(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse _result = ((MotionsRace.WinPhone.MobileService.UpdateTeamPictureURLResponse)(base.EndInvoke("UpdateTeamPictureURL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNumberOfUnreadPersonalMessages(MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetNumberOfUnreadPersonalMessages", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse EndGetNumberOfUnreadPersonalMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse _result = ((MotionsRace.WinPhone.MobileService.GetNumberOfUnreadPersonalMessagesResponse)(base.EndInvoke("GetNumberOfUnreadPersonalMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMarkPersonalMessagesAsRead(MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MarkPersonalMessagesAsRead", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse EndMarkPersonalMessagesAsRead(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse _result = ((MotionsRace.WinPhone.MobileService.MarkPersonalMessagesAsReadResponse)(base.EndInvoke("MarkPersonalMessagesAsRead", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMarkOrUnmarkPersonalMessageAsRead(MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MarkOrUnmarkPersonalMessageAsRead", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse EndMarkOrUnmarkPersonalMessageAsRead(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse _result = ((MotionsRace.WinPhone.MobileService.MarkOrUnmarkPersonalMessageAsReadResponse)(base.EndInvoke("MarkOrUnmarkPersonalMessageAsRead", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginArchivePersonalMessage(MotionsRace.WinPhone.MobileService.ArchivePersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ArchivePersonalMessage", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse EndArchivePersonalMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse _result = ((MotionsRace.WinPhone.MobileService.ArchivePersonalMessageResponse)(base.EndInvoke("ArchivePersonalMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPersonalMessages(MotionsRace.WinPhone.MobileService.GetPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPersonalMessages", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse EndGetPersonalMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse _result = ((MotionsRace.WinPhone.MobileService.GetPersonalMessagesResponse)(base.EndInvoke("GetPersonalMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSentPersonalMessages(MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetSentPersonalMessages", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse EndGetSentPersonalMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse _result = ((MotionsRace.WinPhone.MobileService.GetSentPersonalMessagesResponse)(base.EndInvoke("GetSentPersonalMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendPersonalMessage(MotionsRace.WinPhone.MobileService.SendPersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SendPersonalMessage", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse EndSendPersonalMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse _result = ((MotionsRace.WinPhone.MobileService.SendPersonalMessageResponse)(base.EndInvoke("SendPersonalMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletePersonalMessage(MotionsRace.WinPhone.MobileService.DeletePersonalMessageRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeletePersonalMessage", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse EndDeletePersonalMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse _result = ((MotionsRace.WinPhone.MobileService.DeletePersonalMessageResponse)(base.EndInvoke("DeletePersonalMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateReplyToMessage(MotionsRace.WinPhone.MobileService.CreateReplyToMessageRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CreateReplyToMessage", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse EndCreateReplyToMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse _result = ((MotionsRace.WinPhone.MobileService.CreateReplyToMessageResponse)(base.EndInvoke("CreateReplyToMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetThreads(MotionsRace.WinPhone.MobileService.GetThreadsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetThreads", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetThreadsResponse EndGetThreads(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetThreadsResponse _result = ((MotionsRace.WinPhone.MobileService.GetThreadsResponse)(base.EndInvoke("GetThreads", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPosting(MotionsRace.WinPhone.MobileService.GetPostingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPosting", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetPostingResponse EndGetPosting(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetPostingResponse _result = ((MotionsRace.WinPhone.MobileService.GetPostingResponse)(base.EndInvoke("GetPosting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSavePosting(MotionsRace.WinPhone.MobileService.SavePostingRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SavePosting", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.SavePostingResponse EndSavePosting(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.SavePostingResponse _result = ((MotionsRace.WinPhone.MobileService.SavePostingResponse)(base.EndInvoke("SavePosting", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginMarkThreadAsRead(MotionsRace.WinPhone.MobileService.MarkThreadAsReadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("MarkThreadAsRead", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse EndMarkThreadAsRead(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse _result = ((MotionsRace.WinPhone.MobileService.MarkThreadAsReadResponse)(base.EndInvoke("MarkThreadAsRead", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetThread(MotionsRace.WinPhone.MobileService.GetThreadRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetThread", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetThreadResponse EndGetThread(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetThreadResponse _result = ((MotionsRace.WinPhone.MobileService.GetThreadResponse)(base.EndInvoke("GetThread", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPersonInfo(MotionsRace.WinPhone.MobileService.GetPersonInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPersonInfo", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetPersonInfoResponse EndGetPersonInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetPersonInfoResponse _result = ((MotionsRace.WinPhone.MobileService.GetPersonInfoResponse)(base.EndInvoke("GetPersonInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveGoal(MotionsRace.WinPhone.MobileService.SaveGoalRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SaveGoal", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.SaveGoalResponse EndSaveGoal(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.SaveGoalResponse _result = ((MotionsRace.WinPhone.MobileService.SaveGoalResponse)(base.EndInvoke("SaveGoal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGoal(MotionsRace.WinPhone.MobileService.GetGoalRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetGoal", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetGoalResponse EndGetGoal(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetGoalResponse _result = ((MotionsRace.WinPhone.MobileService.GetGoalResponse)(base.EndInvoke("GetGoal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteGoal(MotionsRace.WinPhone.MobileService.DeleteGoalRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("DeleteGoal", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.DeleteGoalResponse EndDeleteGoal(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.DeleteGoalResponse _result = ((MotionsRace.WinPhone.MobileService.DeleteGoalResponse)(base.EndInvoke("DeleteGoal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGoals(MotionsRace.WinPhone.MobileService.GetGoalsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetGoals", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetGoalsResponse EndGetGoals(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetGoalsResponse _result = ((MotionsRace.WinPhone.MobileService.GetGoalsResponse)(base.EndInvoke("GetGoals", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGoalPeriodResults(MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetGoalPeriodResults", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse EndGetGoalPeriodResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse _result = ((MotionsRace.WinPhone.MobileService.GetGoalPeriodResultsResponse)(base.EndInvoke("GetGoalPeriodResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateUserName(MotionsRace.WinPhone.MobileService.ValidateUserNameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ValidateUserName", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.ValidateUserNameResponse EndValidateUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.ValidateUserNameResponse _result = ((MotionsRace.WinPhone.MobileService.ValidateUserNameResponse)(base.EndInvoke("ValidateUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateEmail(MotionsRace.WinPhone.MobileService.ValidateEmailRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ValidateEmail", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.ValidateEmailResponse EndValidateEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.ValidateEmailResponse _result = ((MotionsRace.WinPhone.MobileService.ValidateEmailResponse)(base.EndInvoke("ValidateEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRaceFromSignUpCode(MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRaceFromSignUpCode", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse EndGetRaceFromSignUpCode(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse _result = ((MotionsRace.WinPhone.MobileService.GetRaceFromSignUpCodeResponse)(base.EndInvoke("GetRaceFromSignUpCode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateMySettings(MotionsRace.WinPhone.MobileService.UpdateMySettingsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateMySettings", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse EndUpdateMySettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse _result = ((MotionsRace.WinPhone.MobileService.UpdateMySettingsResponse)(base.EndInvoke("UpdateMySettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPersonToTeam(MotionsRace.WinPhone.MobileService.AddPersonToTeamRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("AddPersonToTeam", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse EndAddPersonToTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse _result = ((MotionsRace.WinPhone.MobileService.AddPersonToTeamResponse)(base.EndInvoke("AddPersonToTeam", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRace(MotionsRace.WinPhone.MobileService.GetRaceRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetRace", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetRaceResponse EndGetRace(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetRaceResponse _result = ((MotionsRace.WinPhone.MobileService.GetRaceResponse)(base.EndInvoke("GetRace", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePictureURL(MotionsRace.WinPhone.MobileService.UpdatePictureURLRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePictureURL", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse EndUpdatePictureURL(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse _result = ((MotionsRace.WinPhone.MobileService.UpdatePictureURLResponse)(base.EndInvoke("UpdatePictureURL", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMySettings(MotionsRace.WinPhone.MobileService.GetMySettingsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMySettings", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMySettingsResponse EndGetMySettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMySettingsResponse _result = ((MotionsRace.WinPhone.MobileService.GetMySettingsResponse)(base.EndInvoke("GetMySettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetParticipantOverview(MotionsRace.WinPhone.MobileService.GetParticipantOverviewRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetParticipantOverview", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse EndGetParticipantOverview(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse _result = ((MotionsRace.WinPhone.MobileService.GetParticipantOverviewResponse)(base.EndInvoke("GetParticipantOverview", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTemplateCallHelloWorld(MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("TemplateCallHelloWorld", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse EndTemplateCallHelloWorld(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse _result = ((MotionsRace.WinPhone.MobileService.TemplateCallHelloWorldResponse)(base.EndInvoke("TemplateCallHelloWorld", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateAndCreateSecret(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ValidateAndCreateSecret", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse EndValidateAndCreateSecret(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse _result = ((MotionsRace.WinPhone.MobileService.ValidateAndCreateSecretResponse)(base.EndInvoke("ValidateAndCreateSecret", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateAndCreateSecret_Alternate(MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ValidateAndCreateSecret_Alternate", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse EndValidateAndCreateSecret_Alternate(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse _result = ((MotionsRace.WinPhone.MobileService.ValidateAndCreateSecret_AlternateResponse)(base.EndInvoke("ValidateAndCreateSecret_Alternate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyNewsFeed(MotionsRace.WinPhone.MobileService.GetMyNewsFeedRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMyNewsFeed", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse EndGetMyNewsFeed(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse _result = ((MotionsRace.WinPhone.MobileService.GetMyNewsFeedResponse)(base.EndInvoke("GetMyNewsFeed", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetServerDateTime(MotionsRace.WinPhone.MobileService.GetServerDateTimeRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetServerDateTime", _args, callback, asyncState);
                return _result;
            }
            
            public MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse EndGetServerDateTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse _result = ((MotionsRace.WinPhone.MobileService.GetServerDateTimeResponse)(base.EndInvoke("GetServerDateTime", _args, result)));
                return _result;
            }
        }
    }
}
